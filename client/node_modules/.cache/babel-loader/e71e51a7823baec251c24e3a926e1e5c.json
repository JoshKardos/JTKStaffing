{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index'; // Signing up with Firebase\n\nexport const signUpEpic = action$ => async dispatch => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(dataBeforeEmail => {\n      firebase.auth().onAuthStateChanged(function (user) {\n        user.sendEmailVerification();\n      });\n    }).then(dataAfterEmail => {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user.emailVerified) {\n          // Email is verified\n          dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\n          });\n        } else {\n          // Email is not verified\n          dispatch({\n            type: SIGNUP_ERROR,\n            payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n          });\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: SIGNUP_ERROR,\n        payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_ERROR,\n      payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n    });\n  }\n})); // export const signUpEpic = action$ => action$.pipe(\n//   ofType(UserTypes.SIGN_UP),\n//   map(action => {\n//     const { email } = action.payload\n//     const { password } = action.payload\n//     return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n//     firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n//       console.log('here')\n//       return { type: '' }\n//     }).catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code\n//       const errorMessage = error.message\n//       console.log(\"error\")\n//       const action = {\n//         payload: errorMessage\n//       }\n//       return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n//     })\n//     console.log(\"HERE\")\n//     return { type: '' }\n//   })\n// )\n\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","dispatch","pipe","SIGN_UP","action","auth","createUserWithEmailAndPassword","email","password","then","dataBeforeEmail","onAuthStateChanged","user","sendEmailVerification","dataAfterEmail","emailVerified","type","SIGNUP_SUCCESS","payload","SIGNUP_ERROR","catch","error","err"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAI,MAAMC,QAAN,IAAkBD,OAAO,CAACE,IAAR,CACrDV,MAAM,CAACG,SAAS,CAACQ,OAAX,CAD+C,EAErDV,GAAG,CAACW,MAAM,IAAI;AACd,MAAI;AACFN,IAAAA,QAAQ,CACLO,IADH,GAEGC,8BAFH,CAEkCC,KAFlC,EAEyCC,QAFzC,EAGGC,IAHH,CAGQC,eAAe,IAAI;AACvBZ,MAAAA,QAAQ,CAACO,IAAT,GAAgBM,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChDA,QAAAA,IAAI,CAACC,qBAAL;AACD,OAFD;AAGD,KAPH,EAQGJ,IARH,CAQQK,cAAc,IAAI;AACtBhB,MAAAA,QAAQ,CAACO,IAAT,GAAgBM,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChD,YAAIA,IAAI,CAACG,aAAT,EAAwB;AACtB;AACAd,UAAAA,QAAQ,CAAC;AACPe,YAAAA,IAAI,EAAEC,cADC;AAEPC,YAAAA,OAAO,EACL;AAHK,WAAD,CAAR;AAKD,SAPD,MAOO;AACL;AACAjB,UAAAA,QAAQ,CAAC;AACPe,YAAAA,IAAI,EAAEG,YADC;AAEPD,YAAAA,OAAO,EACL;AAHK,WAAD,CAAR;AAKD;AACF,OAhBD;AAiBD,KA1BH,EA2BGE,KA3BH,CA2BS,UAASC,KAAT,EAAgB;AACrBpB,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEG,YADC;AAEPD,QAAAA,OAAO,EACL;AAHK,OAAD,CAAR;AAKD,KAjCH;AAkCD,GAnCD,CAmCE,OAAOI,GAAP,EAAY;AACZrB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEG,YADC;AAEPD,MAAAA,OAAO,EACL;AAHK,KAAD,CAAR;AAKD;AACF,CA3CI,CAFkD,CAAhD,C,CA+CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\n// Signing up with Firebase\nexport const signUpEpic = action$ => async dispatch => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n  try {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(dataBeforeEmail => {\n        firebase.auth().onAuthStateChanged(function(user) {\n          user.sendEmailVerification();\n        });\n      })\n      .then(dataAfterEmail => {\n        firebase.auth().onAuthStateChanged(function(user) {\n          if (user.emailVerified) {\n            // Email is verified\n            dispatch({\n              type: SIGNUP_SUCCESS,\n              payload:\n                \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\n            });\n          } else {\n            // Email is not verified\n            dispatch({\n              type: SIGNUP_ERROR,\n              payload:\n                \"Something went wrong, we couldn't create your account. Please try again.\"\n            });\n          }\n        });\n      })\n      .catch(function(error) {\n        dispatch({\n          type: SIGNUP_ERROR,\n          payload:\n            \"Something went wrong, we couldn't create your account. Please try again.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_ERROR,\n      payload:\n        \"Something went wrong, we couldn't create your account. Please try again.\"\n    })\n  }\n}))\n\n// export const signUpEpic = action$ => action$.pipe(\n//   ofType(UserTypes.SIGN_UP),\n//   map(action => {\n//     const { email } = action.payload\n//     const { password } = action.payload\n//     return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n//     firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n//       console.log('here')\n//       return { type: '' }\n//     }).catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code\n//       const errorMessage = error.message\n//       console.log(\"error\")\n//       const action = {\n//         payload: errorMessage\n//       }\n//       return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n//     })\n//     console.log(\"HERE\")\n//     return { type: '' }\n//   })\n// )\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}