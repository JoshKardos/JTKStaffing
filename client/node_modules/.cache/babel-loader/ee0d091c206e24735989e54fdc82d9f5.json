{"ast":null,"code":"import _objectSpread from \"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDataSheet from 'react-datasheet'; // Be sure to include styles at some point, probably during your bootstrapping\n\nimport 'react-datasheet/lib/react-datasheet.css';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [[{\n        value: 1\n      }, {\n        value: 3\n      }], [{\n        value: 2\n      }, {\n        value: 4\n      }]]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"DASHBOARDLAYOUT\"), React.createElement(ReactDataSheet, {\n      data: this.state.grid,\n      valueRenderer: cell => cell.value,\n      onCellsChanged: changes => {\n        const grid = this.state.grid.map(row => [...row]);\n        changes.forEach(({\n          cell,\n          row,\n          col,\n          value\n        }) => {\n          grid[row][col] = _objectSpread({}, grid[row][col], {\n            value\n          });\n        });\n        this.setState({\n          grid\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nDashboardLayout.propTypes = {};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","ReactDataSheet","DashboardLayout","constructor","props","state","grid","value","render","cell","changes","map","row","forEach","col","setState","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;;AACA,OAAO,yCAAP;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAe;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf,CADI,EAEJ,CAAC;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAe;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf,CAFI;AADK,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IADnB;AAEE,MAAA,aAAa,EAAGG,IAAD,IAAUA,IAAI,CAACF,KAFhC;AAGE,MAAA,cAAc,EAAEG,OAAO,IAAI;AACzB,cAAMJ,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoBC,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAA3B,CAAb;AACAF,QAAAA,OAAO,CAACG,OAAR,CAAgB,CAAC;AAAEJ,UAAAA,IAAF;AAAQG,UAAAA,GAAR;AAAaE,UAAAA,GAAb;AAAkBP,UAAAA;AAAlB,SAAD,KAA+B;AAC7CD,UAAAA,IAAI,CAACM,GAAD,CAAJ,CAAUE,GAAV,sBAAsBR,IAAI,CAACM,GAAD,CAAJ,CAAUE,GAAV,CAAtB;AAAsCP,YAAAA;AAAtC;AACD,SAFD;AAGA,aAAKQ,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAgBD;;AA5BqC;;AA+BxCJ,eAAe,CAACc,SAAhB,GAA4B,EAA5B;AAIA,eAAed,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ReactDataSheet from 'react-datasheet';\n// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-datasheet/lib/react-datasheet.css';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      grid: [\n        [{ value: 1 }, { value: 3 }],\n        [{ value: 2 }, { value: 4 }]\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <p>DASHBOARDLAYOUT</p>\n        <ReactDataSheet\n          data={this.state.grid}\n          valueRenderer={(cell) => cell.value}\n          onCellsChanged={changes => {\n            const grid = this.state.grid.map(row => [...row])\n            changes.forEach(({ cell, row, col, value }) => {\n              grid[row][col] = { ...grid[row][col], value }\n            })\n            this.setState({ grid })\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}