{"ast":null,"code":"import { combineReducers, createReducer } from 'redux';\nexport const TYPES = {\n  PING: 'PING',\n  PONG: 'PONG'\n};\nconst layoutReducer = createReducer([], {\n  PING: addTodo,\n  TOGGLE_TODO: toggleTodo,\n  EDIT_TODO: editTodo\n});\nexport const ping = () => {\n  console.log(TYPES.PING);\n  return {\n    isPinging: true\n  };\n};\nexport const pingReducer = (state = {\n  isPinging: false\n}, action) => {\n  switch (action.type) {\n    case TYPES.PING:\n      console.log(TYPES.PING);\n      return {\n        isPinging: true\n      };\n\n    case TYPES.PONG:\n      console.log(TYPES.PONG);\n      return {\n        isPinging: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const reducers = combineReducers({\n  ping,\n  pingReducer\n});","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Redux/LayoutRedux.js"],"names":["combineReducers","createReducer","TYPES","PING","PONG","layoutReducer","addTodo","TOGGLE_TODO","toggleTodo","EDIT_TODO","editTodo","ping","console","log","isPinging","pingReducer","state","action","type","reducers"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,MADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAAd;AAKP,MAAMC,aAAa,GAAGJ,aAAa,CAAC,EAAD,EAAK;AACtCE,EAAAA,IAAI,EAAEG,OADgC;AAEtCC,EAAAA,WAAW,EAAEC,UAFyB;AAGtCC,EAAAA,SAAS,EAAEC;AAH2B,CAAL,CAAnC;AAMA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACC,IAAlB;AACA,SAAO;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAAP;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEF,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA+BG,MAA/B,KAA0C;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,KAAK,CAACC,IAAX;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACC,IAAlB;AACA,aAAO;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAP;;AAEF,SAAKZ,KAAK,CAACE,IAAX;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACE,IAAlB;AACA,aAAO;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAP;;AAEF;AACE,aAAOE,KAAP;AAVJ;AAYD,CAbM;AAeP,OAAO,MAAMG,QAAQ,GAAGnB,eAAe,CAAC;AACtCW,EAAAA,IADsC;AAEtCI,EAAAA;AAFsC,CAAD,CAAhC","sourcesContent":["import { combineReducers, createReducer } from 'redux'\n\nexport const TYPES = {\n  PING: 'PING',\n  PONG: 'PONG'\n}\n\nconst layoutReducer = createReducer([], {\n  PING: addTodo,\n  TOGGLE_TODO: toggleTodo,\n  EDIT_TODO: editTodo\n})\n\nexport const ping = () => {\n  console.log(TYPES.PING)\n  return { isPinging: true };\n}\n\nexport const pingReducer = (state = { isPinging: false }, action) => {\n  switch (action.type) {\n    case TYPES.PING:\n      console.log(TYPES.PING)\n      return { isPinging: true };\n\n    case TYPES.PONG:\n      console.log(TYPES.PONG)\n      return { isPinging: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const reducers = combineReducers({\n  ping,\n  pingReducer\n})\n"]},"metadata":{},"sourceType":"module"}