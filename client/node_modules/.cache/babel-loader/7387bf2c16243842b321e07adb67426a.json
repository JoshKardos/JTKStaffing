{"ast":null,"code":"import _objectSpread from \"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\nimport { createReducer } from 'redux-create-reducer';\nexport const TYPES = {\n  SIGN_UP: 'SIGN_UP',\n  SET_USER_DATA: 'SET_USER_DATA',\n  START_SIGN_UP_LOADING: 'START_SIGN_UP_LOADING',\n  STOP_SIGN_UP_LOADING: 'STOP_SIGN_UP_LOADING',\n  SET_SIGN_UP_ERROR: 'SET_SIGN_UP_ERROR'\n};\nconst initialState = {\n  id: '',\n  name: '',\n  company: '',\n  email: '',\n  signUpLoading: false\n};\nexport const setSignUpError = (state = initialState) => _objectSpread({\n  type: TYPES.SET_SIGN_UP_ERROR\n}, state);\nexport const stopSignUpLoading = (state = initialState) => _objectSpread({\n  type: TYPES.STOP_SIGN_UP_LOADING\n}, state, {\n  signUpLoading: false\n});\nexport const startSignUpLoading = (state = initialState) => _objectSpread({\n  type: TYPES.START_SIGN_UP_LOADING\n}, state, {\n  signUpLoading: true\n});\nexport const setUserData = (state = initialState, action) => {\n  console.log('in reducer');\n  return _objectSpread({\n    type: TYPES.SET_USER_DATA\n  }, state, {}, action.payload);\n};\nexport const signUp = (name, email, password, company) => ({\n  type: TYPES.SIGN_UP,\n  payload: {\n    name,\n    email,\n    password,\n    company\n  }\n});\nexport const userLoggedIn = state => !(!state.id || !state.name || !state.company || !state.email);\nconst userReducer = createReducer(initialState, {\n  SET_USER_DATA: setUserData,\n  SIGN_UP: signUp,\n  START_SIGN_UP_LOADING: startSignUpLoading,\n  STOP_SIGN_UP_LOADING: stopSignUpLoading,\n  SET_SIGN_UP_ERROR: setSignUpError\n});\nexport const reducers = combineReducers({\n  userReducer\n});","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Redux/UserRedux.js"],"names":["combineReducers","createReducer","TYPES","SIGN_UP","SET_USER_DATA","START_SIGN_UP_LOADING","STOP_SIGN_UP_LOADING","SET_SIGN_UP_ERROR","initialState","id","name","company","email","signUpLoading","setSignUpError","state","type","stopSignUpLoading","startSignUpLoading","setUserData","action","console","log","payload","signUp","password","userLoggedIn","userReducer","reducers"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,SADU;AAEnBC,EAAAA,aAAa,EAAE,eAFI;AAGnBC,EAAAA,qBAAqB,EAAE,uBAHJ;AAInBC,EAAAA,oBAAoB,EAAE,sBAJH;AAKnBC,EAAAA,iBAAiB,EAAE;AALA,CAAd;AAQP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AAQA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT;AAC1BQ,EAAAA,IAAI,EAAEd,KAAK,CAACK;AADc,GACQQ,KADR,CAAvB;AAIP,OAAO,MAAME,iBAAiB,GAAG,CAACF,KAAK,GAAGP,YAAT;AAC7BQ,EAAAA,IAAI,EAAEd,KAAK,CAACI;AADiB,GACQS,KADR;AACeF,EAAAA,aAAa,EAAE;AAD9B,EAA1B;AAIP,OAAO,MAAMK,kBAAkB,GAAG,CAACH,KAAK,GAAGP,YAAT;AAC9BQ,EAAAA,IAAI,EAAEd,KAAK,CAACG;AADkB,GACQU,KADR;AACeF,EAAAA,aAAa,EAAE;AAD9B,EAA3B;AAIP,OAAO,MAAMM,WAAW,GAAG,CAACJ,KAAK,GAAGP,YAAT,EAAuBY,MAAvB,KAAkC;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AAASN,IAAAA,IAAI,EAAEd,KAAK,CAACE;AAArB,KAAuCW,KAAvC,MAAiDK,MAAM,CAACG,OAAxD;AACD,CAHM;AAKP,OAAO,MAAMC,MAAM,GAAG,CAACd,IAAD,EAAOE,KAAP,EAAca,QAAd,EAAwBd,OAAxB,MACpB;AAAEK,EAAAA,IAAI,EAAEd,KAAK,CAACC,OAAd;AAAuBoB,EAAAA,OAAO,EAAE;AAAEb,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAea,IAAAA,QAAf;AAAyBd,IAAAA;AAAzB;AAAhC,CADoB,CAAf;AAIP,OAAO,MAAMe,YAAY,GAAIX,KAAD,IAAW,EAAE,CAACA,KAAK,CAACN,EAAP,IAAa,CAACM,KAAK,CAACL,IAApB,IAA4B,CAACK,KAAK,CAACJ,OAAnC,IAA8C,CAACI,KAAK,CAACH,KAAvD,CAAhC;AAEP,MAAMe,WAAW,GAAG1B,aAAa,CAACO,YAAD,EAAe;AAC9CJ,EAAAA,aAAa,EAAEe,WAD+B;AAE9ChB,EAAAA,OAAO,EAAEqB,MAFqC;AAG9CnB,EAAAA,qBAAqB,EAAEa,kBAHuB;AAI9CZ,EAAAA,oBAAoB,EAAEW,iBAJwB;AAK9CV,EAAAA,iBAAiB,EAAEO;AAL2B,CAAf,CAAjC;AAQA,OAAO,MAAMc,QAAQ,GAAG5B,eAAe,CAAC;AACtC2B,EAAAA;AADsC,CAAD,CAAhC","sourcesContent":["import { combineReducers } from 'redux'\nimport { createReducer } from 'redux-create-reducer';\n\nexport const TYPES = {\n  SIGN_UP: 'SIGN_UP',\n  SET_USER_DATA: 'SET_USER_DATA',\n  START_SIGN_UP_LOADING: 'START_SIGN_UP_LOADING',\n  STOP_SIGN_UP_LOADING: 'STOP_SIGN_UP_LOADING',\n  SET_SIGN_UP_ERROR: 'SET_SIGN_UP_ERROR'\n}\n\nconst initialState = {\n  id: '',\n  name: '',\n  company: '',\n  email: '',\n  signUpLoading: false\n}\n\nexport const setSignUpError = (state = initialState) => (\n  { type: TYPES.SET_SIGN_UP_ERROR, ...state }\n)\n\nexport const stopSignUpLoading = (state = initialState) => (\n  { type: TYPES.STOP_SIGN_UP_LOADING, ...state, signUpLoading: false }\n)\n\nexport const startSignUpLoading = (state = initialState) => (\n  { type: TYPES.START_SIGN_UP_LOADING, ...state, signUpLoading: true }\n)\n\nexport const setUserData = (state = initialState, action) => {\n  console.log('in reducer')\n  return { type: TYPES.SET_USER_DATA, ...state, ...action.payload }\n}\n\nexport const signUp = (name, email, password, company) => (\n  { type: TYPES.SIGN_UP, payload: { name, email, password, company } }\n)\n\nexport const userLoggedIn = (state) => !(!state.id || !state.name || !state.company || !state.email)\n\nconst userReducer = createReducer(initialState, {\n  SET_USER_DATA: setUserData,\n  SIGN_UP: signUp,\n  START_SIGN_UP_LOADING: startSignUpLoading,\n  STOP_SIGN_UP_LOADING: stopSignUpLoading,\n  SET_SIGN_UP_ERROR: setSignUpError\n})\n\nexport const reducers = combineReducers({\n  userReducer\n})\n"]},"metadata":{},"sourceType":"module"}