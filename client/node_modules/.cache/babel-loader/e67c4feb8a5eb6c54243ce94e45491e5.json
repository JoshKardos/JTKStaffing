{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  const observable = from(firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    console.log('here');\n    return {\n      type: ''\n    };\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(\"error\");\n    const action = {\n      payload: errorMessage\n    };\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  }));\n  console.log(observable);\n  return observable;\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","from","map","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","observable","auth","createUserWithEmailAndPassword","then","console","log","type","catch","error","errorCode","code","errorMessage","message","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCV,MAAM,CAACI,SAAS,CAACO,OAAX,CAD6B,EAEnCT,GAAG,CAACU,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACE,OADb,CACJD,KADI;AAAA,QAEJE,QAFI,GAESH,MAAM,CAACE,OAFhB,CAEJC,QAFI,EAGZ;;AACA,QAAMC,UAAU,GAAGf,IAAI,CAACM,QAAQ,CAACU,IAAT,GAAgBC,8BAAhB,CAA+CL,KAA/C,EAAsDE,QAAtD,EACrBI,IADqB,CAChB,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAJqB,EAInBC,KAJmB,CAIZC,KAAD,IAAW;AAClB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMT,MAAM,GAAG;AACbE,MAAAA,OAAO,EAAEa;AADI,KAAf;AAGA,WAAO;AAAEL,MAAAA,IAAI,EAAEjB,UAAU,CAACwB,SAAnB;AAA8Bf,MAAAA,OAAO,EAAEa;AAAvC,KAAP;AACD,GAbqB,CAAD,CAAvB;AAcAP,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,SAAOA,UAAP;AACD,CApBE,CAFgC,CAA9B;AAyBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    const observable = from(firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('here')\n        return { type: '' }\n      }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code\n        const errorMessage = error.message\n        console.log(\"error\")\n        const action = {\n          payload: errorMessage\n        }\n        return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n      }))\n    console.log(observable)\n    return observable\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}