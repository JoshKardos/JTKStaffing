{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, switchMap, mapTo } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nexport const uploadErrorEpic = action$ => action$.pipe(ofType(DashboardTypes.UPLOAD_ERROR), mapTo({\n  type: ErrorTypes.SET_ERROR,\n  payload: 'Error saving to our records, try again...'\n}));\nexport const uploadCompleteEpic = action$ => action$.pipe(ofType(DashboardTypes.UPLOAD_SUCCESS, DashboardTypes.UPLOAD_ERROR), mapTo({\n  type: DashboardTypes.TIMESHEET_UPLOAD_STOP\n}));\nexport const showUploadSuccessEpic = action$ => action$.pipe(ofType(DashboardTypes.UPLOAD_SUCCESS), mapTo({\n  type: ErrorTypes.SET_ERROR,\n  payload: 'Successfully uploaded your timesheet'\n}));\nexport const setTimesheetFileError = action$ => action$.pipe(ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/DashboardEpics.js"],"names":["ofType","map","switchMap","mapTo","TYPES","DashboardTypes","ErrorTypes","uploadErrorEpic","action$","pipe","UPLOAD_ERROR","type","SET_ERROR","payload","uploadCompleteEpic","UPLOAD_SUCCESS","TIMESHEET_UPLOAD_STOP","showUploadSuccessEpic","setTimesheetFileError","SET_TIMESHEET_FILE_ERROR","action"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,yBAAxC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AAEA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAC1CT,MAAM,CAACK,cAAc,CAACK,YAAhB,CADoC,EAE1CP,KAAK,CAAC;AAAEQ,EAAAA,IAAI,EAAEL,UAAU,CAACM,SAAnB;AAA8BC,EAAAA,OAAO,EAAE;AAAvC,CAAD,CAFqC,CAArC;AAKP,OAAO,MAAMC,kBAAkB,GAAIN,OAAD,IAAaA,OAAO,CAACC,IAAR,CAC7CT,MAAM,CAACK,cAAc,CAACU,cAAhB,EAAgCV,cAAc,CAACK,YAA/C,CADuC,EAE7CP,KAAK,CAAC;AAAEQ,EAAAA,IAAI,EAAEN,cAAc,CAACW;AAAvB,CAAD,CAFwC,CAAxC;AAKP,OAAO,MAAMC,qBAAqB,GAAIT,OAAD,IAAaA,OAAO,CAACC,IAAR,CAChDT,MAAM,CAACK,cAAc,CAACU,cAAhB,CAD0C,EAEhDZ,KAAK,CAAC;AAAEQ,EAAAA,IAAI,EAAEL,UAAU,CAACM,SAAnB;AAA8BC,EAAAA,OAAO,EAAE;AAAvC,CAAD,CAF2C,CAA3C;AAKP,OAAO,MAAMK,qBAAqB,GAAIV,OAAD,IAAaA,OAAO,CAACC,IAAR,CAChDT,MAAM,CAACK,cAAc,CAACc,wBAAhB,CAD0C,EAEhDlB,GAAG,CAAEmB,MAAD,KAAa;AAAET,EAAAA,IAAI,EAAEL,UAAU,CAACM,SAAnB;AAA8BC,EAAAA,OAAO,EAAEO,MAAM,CAACP;AAA9C,CAAb,CAAD,CAF6C,CAA3C;AAKP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, switchMap, mapTo } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\n\nexport const uploadErrorEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_ERROR),\n  mapTo({ type: ErrorTypes.SET_ERROR, payload: 'Error saving to our records, try again...' })\n)\n\nexport const uploadCompleteEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_SUCCESS, DashboardTypes.UPLOAD_ERROR),\n  mapTo({ type: DashboardTypes.TIMESHEET_UPLOAD_STOP })\n)\n\nexport const showUploadSuccessEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_SUCCESS),\n  mapTo({ type: ErrorTypes.SET_ERROR, payload: 'Successfully uploaded your timesheet' })\n)\n\nexport const setTimesheetFileError = (action$) => action$.pipe(\n  ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}