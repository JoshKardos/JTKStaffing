{"ast":null,"code":"import{ofType}from'redux-observable';import{map,mapTo}from'rxjs/operators';import{TYPES as DashboardTypes}from'../Redux/DashboardRedux';import{TYPES as ErrorTypes}from'../Redux/ErrorRedux';import firebase from'../Firebase/index';export var uploadErrorEpic=function uploadErrorEpic(action$){return action$.pipe(ofType(DashboardTypes.UPLOAD_ERROR),mapTo({type:ErrorTypes.SET_ERROR,payload:'Error saving to our records, try again...'}));};export var saveToDatabase=function saveToDatabase(action$){return action$.pipe(ofType(DashboardTypes.SAVE_TO_DATABASE),map(function(action){var filepath=action.filepath,id=action.id,timestamp=action.timestamp,userId=action.userId,timesheetTimePeriod=action.timesheetTimePeriod;// get timesheet id, user id, timestamp\nvar userTimesheetRef=firebase.database().ref(\"/user-timesheets/\".concat(userId,\"/\").concat(id,\"/\"));userTimesheetRef.set({timesheetTimePeriod:timesheetTimePeriod,filepath:filepath,id:id,userId:userId,timestamp:timestamp});return{type:DashboardTypes.UPLOAD_SUCCESS};}));};export var uploadCompleteEpic=function uploadCompleteEpic(action$){return action$.pipe(ofType(DashboardTypes.UPLOAD_SUCCESS,DashboardTypes.UPLOAD_ERROR),mapTo({type:DashboardTypes.TIMESHEET_UPLOAD_STOP}));};export var showUploadSuccessEpic=function showUploadSuccessEpic(action$){return action$.pipe(ofType(DashboardTypes.UPLOAD_SUCCESS),mapTo({type:ErrorTypes.SET_ERROR,payload:'Successfully uploaded your timesheet'}));};export var setTimesheetFileError=function setTimesheetFileError(action$){return action$.pipe(ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),map(function(action){return{type:ErrorTypes.SET_ERROR,payload:action.payload};}));};export default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/DashboardEpics.js"],"names":["ofType","map","mapTo","TYPES","DashboardTypes","ErrorTypes","firebase","uploadErrorEpic","action$","pipe","UPLOAD_ERROR","type","SET_ERROR","payload","saveToDatabase","SAVE_TO_DATABASE","action","filepath","id","timestamp","userId","timesheetTimePeriod","userTimesheetRef","database","ref","set","UPLOAD_SUCCESS","uploadCompleteEpic","TIMESHEET_UPLOAD_STOP","showUploadSuccessEpic","setTimesheetFileError","SET_TIMESHEET_FILE_ERROR"],"mappings":"AAAA,OAASA,MAAT,KAAuB,kBAAvB,CACA,OAASC,GAAT,CAAcC,KAAd,KAA2B,gBAA3B,CACA,OAASC,KAAK,GAAIC,CAAAA,cAAlB,KAAwC,yBAAxC,CACA,OAASD,KAAK,GAAIE,CAAAA,UAAlB,KAAoC,qBAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CAC1CT,MAAM,CAACI,cAAc,CAACM,YAAhB,CADoC,CAE1CR,KAAK,CAAC,CAAES,IAAI,CAAEN,UAAU,CAACO,SAAnB,CAA8BC,OAAO,CAAE,2CAAvC,CAAD,CAFqC,CAAb,EAAxB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACN,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CACzCT,MAAM,CAACI,cAAc,CAACW,gBAAhB,CADmC,CAEzCd,GAAG,CAAC,SAAAe,MAAM,CAAI,IACJC,CAAAA,QADI,CACqDD,MADrD,CACJC,QADI,CACMC,EADN,CACqDF,MADrD,CACME,EADN,CACUC,SADV,CACqDH,MADrD,CACUG,SADV,CACqBC,MADrB,CACqDJ,MADrD,CACqBI,MADrB,CAC6BC,mBAD7B,CACqDL,MADrD,CAC6BK,mBAD7B,CAEZ;AACA,GAAMC,CAAAA,gBAAgB,CAAGhB,QAAQ,CAACiB,QAAT,GAAoBC,GAApB,4BAA4CJ,MAA5C,aAAsDF,EAAtD,MAAzB,CACAI,gBAAgB,CAACG,GAAjB,CAAqB,CACnBJ,mBAAmB,CAAnBA,mBADmB,CAEnBJ,QAAQ,CAARA,QAFmB,CAGnBC,EAAE,CAAFA,EAHmB,CAInBE,MAAM,CAANA,MAJmB,CAKnBD,SAAS,CAATA,SALmB,CAArB,EAOA,MAAO,CAAER,IAAI,CAAEP,cAAc,CAACsB,cAAvB,CAAP,CACD,CAZE,CAFsC,CAAb,EAAvB,CAiBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACnB,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CAC7CT,MAAM,CAACI,cAAc,CAACsB,cAAhB,CAAgCtB,cAAc,CAACM,YAA/C,CADuC,CAE7CR,KAAK,CAAC,CAAES,IAAI,CAAEP,cAAc,CAACwB,qBAAvB,CAAD,CAFwC,CAAb,EAA3B,CAKP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACrB,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CAChDT,MAAM,CAACI,cAAc,CAACsB,cAAhB,CAD0C,CAEhDxB,KAAK,CAAC,CAAES,IAAI,CAAEN,UAAU,CAACO,SAAnB,CAA8BC,OAAO,CAAE,sCAAvC,CAAD,CAF2C,CAAb,EAA9B,CAKP,MAAO,IAAMiB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACtB,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CAChDT,MAAM,CAACI,cAAc,CAAC2B,wBAAhB,CAD0C,CAEhD9B,GAAG,CAAC,SAACe,MAAD,QAAa,CAAEL,IAAI,CAAEN,UAAU,CAACO,SAAnB,CAA8BC,OAAO,CAAEG,MAAM,CAACH,OAA9C,CAAb,EAAD,CAF6C,CAAb,EAA9B,CAKP,cAAe,KAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const uploadErrorEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_ERROR),\n  mapTo({ type: ErrorTypes.SET_ERROR, payload: 'Error saving to our records, try again...' })\n)\n\nexport const saveToDatabase = (action$) => action$.pipe(\n  ofType(DashboardTypes.SAVE_TO_DATABASE),\n  map(action => {\n    const { filepath, id, timestamp, userId, timesheetTimePeriod } = action\n    // get timesheet id, user id, timestamp\n    const userTimesheetRef = firebase.database().ref(`/user-timesheets/${userId}/${id}/`)\n    userTimesheetRef.set({\n      timesheetTimePeriod,\n      filepath,\n      id,\n      userId,\n      timestamp\n    })\n    return { type: DashboardTypes.UPLOAD_SUCCESS }\n  })\n)\n\nexport const uploadCompleteEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_SUCCESS, DashboardTypes.UPLOAD_ERROR),\n  mapTo({ type: DashboardTypes.TIMESHEET_UPLOAD_STOP })\n)\n\nexport const showUploadSuccessEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_SUCCESS),\n  mapTo({ type: ErrorTypes.SET_ERROR, payload: 'Successfully uploaded your timesheet' })\n)\n\nexport const setTimesheetFileError = (action$) => action$.pipe(\n  ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}