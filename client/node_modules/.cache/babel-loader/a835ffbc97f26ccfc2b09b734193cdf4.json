{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(\"error\");\n    const action = {\n      payload: errorMessage\n    };\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  }\n\n  console.log(\"HERE\");\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","auth","createUserWithEmailAndPassword","error","errorCode","code","errorMessage","message","console","log","type","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCT,MAAM,CAACG,SAAS,CAACO,OAAX,CAD6B,EAEnCT,GAAG,CAACU,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACE,OADb,CACJD,KADI;AAAA,QAEJE,QAFI,GAESH,MAAM,CAACE,OAFhB,CAEJC,QAFI,EAGZ;;AACA,MAAI;AACFR,IAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMZ,MAAM,GAAG;AACbE,MAAAA,OAAO,EAAEO;AADI,KAAf;AAGA,WAAO;AAAEI,MAAAA,IAAI,EAAEpB,UAAU,CAACqB,SAAnB;AAA8BZ,MAAAA,OAAO,EAAEO;AAAvC,KAAP;AAED;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAlBE,CAFgC,CAA9B;AAuBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    try {\n      firebase.auth().createUserWithEmailAndPassword(email, password)\n    } catch (error) {\n      const errorCode = error.code\n      const errorMessage = error.message\n      console.log(\"error\")\n      const action = {\n        payload: errorMessage\n      }\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n\n    }\n    console.log(\"HERE\")\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}