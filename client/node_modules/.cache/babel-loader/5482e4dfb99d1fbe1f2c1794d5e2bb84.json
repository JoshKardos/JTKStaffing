{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nimport { FilePicker } from 'react-file-picker';\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: undefined // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      className: \"FileName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, timesheetFile.name);\n  }\n\n  render() {\n    const setTimesheetFileError = this.props.setTimesheetFileError;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays;\n    const daysAreSelected = selectedDays.length > 0;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"DASHBOARD LAYOUT\"), React.createElement(\"ol\", {\n      className: \"StepsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Select your time period\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Upload excel file (xlsx)\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Thats it!\")), React.createElement(\"div\", {\n      className: \"SelectedWeekExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), selectedDays.length === 7 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, moment(selectedDays[0]).format('LL'), \" \\u2013 \", ' ', moment(selectedDays[6]).format('LL'))), React.createElement(FilePicker, {\n      extensions: ['md'],\n      onChange: FileObject => this.setState({\n        timesheetFile: FileObject\n      }),\n      onError: error => setTimesheetFileError({\n        payload: error\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Click to upload timesheet\")), timesheetFile && this.renderFileName());\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","FilePicker","DayPicker","getWeekDays","getWeekRange","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","undefined","handleWeekClick","weekNumber","days","state","timesheetFile","renderFileName","name","render","setTimesheetFileError","daysAreSelected","length","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","moment","format","FileObject","error","payload","propTypes","isAdmin","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\nimport { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    });\n  };\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    });\n  };\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: undefined, // cahnge this\n    });\n  };\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    });\n  };\n\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p className=\"FileName\">{timesheetFile.name}</p>\n    )\n  }\n\n  render() {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile, hoverRange, selectedDays } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div className=\"DashboardContainer\">\n        <h1>DASHBOARD LAYOUT</h1>\n        <ol className=\"StepsList\">\n          <li>Select your time period</li>\n          <li>Upload excel file (xlsx)</li>\n          <h3>Thats it!</h3>\n        </ol>\n        <div className=\"SelectedWeekExample\">\n          <DayPicker\n            selectedDays={selectedDays}\n            showWeekNumbers\n            showOutsideDays\n            modifiers={modifiers}\n            onDayClick={this.handleDayChange}\n            onDayMouseEnter={this.handleDayEnter}\n            onDayMouseLeave={this.handleDayLeave}\n            onWeekClick={this.handleWeekClick}\n          />\n          { selectedDays.length === 7 && (\n            <div>\n              {moment(selectedDays[0]).format('LL')} – {' '}\n              {moment(selectedDays[6]).format('LL')}\n            </div>\n          ) }\n        </div>\n        <FilePicker\n          extensions={['md']}\n          onChange={FileObject => this.setState({ timesheetFile: FileObject })}\n          onError={(error) => setTimesheetFileError({ payload: error })}\n        >\n          <button type=\"submit\">\n            Click to upload timesheet\n          </button>\n        </FilePicker>\n        { timesheetFile && this.renderFileName()}\n      </div>\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}