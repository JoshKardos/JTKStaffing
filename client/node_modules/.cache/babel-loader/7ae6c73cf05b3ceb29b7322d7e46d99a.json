{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, mapTo, takeUntil } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password;\n  firebase.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"1\");\n      return {\n        type: ErrorTypes.SET_ERROR,\n        payload: errorMessage\n      };\n    }\n\n    console.log(\"2\");\n    return {\n      type: ''\n    };\n  });\n}), takeUntil(2000) // map(() => ({ type: ErrorTypes.SET_ERROR, payload: 'ERROR' }))\n);\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","mapTo","takeUntil","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","auth","createUserWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","type","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCX,MAAM,CAACK,SAAS,CAACO,OAAX,CAD6B,EAEnCX,GAAG,CAACY,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACE,OADb,CACJD,KADI;AAAA,QAEJE,QAFI,GAESH,MAAM,CAACE,OAFhB,CAEJC,QAFI;AAGZR,EAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,EAAgEG,KAAhE,CAAuEC,KAAD,IAAW;AAC/E;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAO;AAAEC,QAAAA,IAAI,EAAErB,UAAU,CAACsB,SAAnB;AAA8Bb,QAAAA,OAAO,EAAEQ;AAAvC,OAAP;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAVD;AAWD,CAdE,CAFgC,EAiBnCxB,SAAS,CAAC,IAAD,CAjB0B,CAkBnC;AAlBmC,CAA9B;AAqBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, mapTo, takeUntil } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code\n        const errorMessage = error.message\n        console.log(\"1\")\n        return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n      }\n      console.log(\"2\")\n      return { type: '' }\n    })\n  }),\n  takeUntil(2000)\n  // map(() => ({ type: ErrorTypes.SET_ERROR, payload: 'ERROR' }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}