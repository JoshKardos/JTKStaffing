{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nimport { FilePicker } from 'react-file-picker';\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\nimport Tooltip from '../../Components/Tooltip/Tooltip';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.toggleHover = () => {\n      const imageHover = this.state.imageHover;\n      this.setState({\n        imageHover: !imageHover\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n  renderSubmitLayout() {\n    const setTimesheetFileError = this.props.setTimesheetFileError;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays,\n          imageHover = _this$state.imageHover;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DashboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Submit\")), imageHover && React.createElement(Tooltip, {\n      style: Styles.fileCheckImage,\n      text: \"HELLO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(FilePicker, {\n      extensions: ['md'],\n      onChange: FileObject => this.setState({\n        timesheetFile: FileObject\n      }),\n      onError: error => setTimesheetFileError({\n        payload: error\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      style: Styles.UploadButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Click to upload timesheet\")));\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FilePicker","DayPicker","getWeekDays","getWeekRange","redX","greenCheck","Styles","Tooltip","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","toggleHover","imageHover","state","timesheetFile","renderFileName","FileName","name","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","renderSubmitLayout","setTimesheetFileError","length","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DashboardContainer","StepsList","SubmitTimesheetButton","fileCheckImage","CalendarContainer","FileObject","error","payload","UploadButton","render","isAdmin","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\nimport { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\nimport Tooltip from '../../Components/Tooltip/Tooltip'\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    }\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  toggleHover = () => {\n    const { imageHover } = this.state\n    this.setState({ imageHover: !imageHover })\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover} />\n      </div>\n    )\n  }\n\n  renderSubmitLayout() {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile, hoverRange, selectedDays, imageHover } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DashboardContainer}>\n        <h2>Submit</h2>\n        <div style={Styles.StepsList}>\n          {/* FIRST STEP */ }\n          {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n          {/* SECOND STEP */}\n          {this.renderSecondStep()}\n          {/* SUBMIT BUTTON */}\n          { timesheetFile && daysAreSelected &&\n            <button type=\"button\" style={Styles.SubmitTimesheetButton}>\n              Submit\n            </button> }\n        </div>\n        { imageHover && <Tooltip style={Styles.fileCheckImage} text=\"HELLO\" /> }\n        <div style={Styles.CalendarContainer}>\n          <DayPicker\n            selectedDays={selectedDays}\n            showWeekNumbers\n            showOutsideDays\n            modifiers={modifiers}\n            onDayClick={this.handleDayChange}\n            onDayMouseEnter={this.handleDayEnter}\n            onDayMouseLeave={this.handleDayLeave}\n            onWeekClick={this.handleWeekClick}\n          />\n        </div>\n        <FilePicker\n          extensions={['md']}\n          onChange={FileObject => this.setState({ timesheetFile: FileObject })}\n          onError={(error) => setTimesheetFileError({ payload: error })}\n        >\n          <button type=\"submit\" style={Styles.UploadButton}>\n            Click to upload timesheet\n          </button>\n        </FilePicker>\n      </div>\n    )\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}