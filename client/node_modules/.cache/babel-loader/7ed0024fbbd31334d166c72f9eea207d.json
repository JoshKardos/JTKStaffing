{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FileUploader from 'react-firebase-file-uploader';\nimport Generator from 'generate-password'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\n\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport Loader from 'react-loader-spinner';\nimport firebase from '../../Firebase/index';\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\nconst AdminLayouts = {\n  HOME: 'HOME',\n  EMPLOYEES: 'EMPLOYEES'\n};\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startUploadManually = () => {\n      const setTimesheetFileError = this.props.setTimesheetFileError;\n      const timesheetFile = this.state.timesheetFile;\n\n      if (!navigator.onLine) {\n        setTimesheetFileError({\n          payload: 'Check internet connection...'\n        });\n        return;\n      }\n\n      this.fileUploader.startUpload(timesheetFile);\n    };\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.handleNameChange = evt => {\n      this.setState({\n        name: evt.target.value\n      });\n    };\n\n    this.handleEmailChange = evt => {\n      this.setState({\n        email: evt.target.value\n      });\n    };\n\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminLayout: AdminLayouts.HOME,\n      // Add employee state\n      shouldShowAddEmployee: false,\n      createUserLoading: false,\n      email: '',\n      password: '',\n      name: ''\n    };\n    this.fileUploader = null;\n  }\n\n  clearFields() {\n    this.setState({\n      timesheetFile: null,\n      selectedDays: [],\n      hoverRange: null\n    });\n  }\n\n  addEmployeeClicked() {\n    // const { addEmployeeUnderAdmin } = this.props\n    this.setState({\n      shouldShowAddEmployee: true,\n      password: Generator.generate({\n        length: 10\n      })\n    }); // return addEmployeeUnderAdmin\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      onMouseEnter: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  } // renderRecentStands() {\n  //   return null\n  // }\n\n\n  renderSubmitLayout() {\n    const _this$props = this.props,\n          userState = _this$props.userState,\n          saveToDatabase = _this$props.saveToDatabase,\n          timesheetUploadError = _this$props.timesheetUploadError,\n          timesheetUploadStart = _this$props.timesheetUploadStart,\n          timesheetUploading = _this$props.timesheetUploading;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays,\n          timesheetTimestamp = _this$state.timesheetTimestamp;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: Styles.RecentlySubmittedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.RecentlySubmittedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Recently Submitted\")), React.createElement(\"div\", {\n      style: Styles.SubmitContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      onClick: this.startUploadManually,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, !timesheetUploading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Submit\"), timesheetUploading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(FileUploader, {\n      ref: instance => {\n        this.fileUploader = instance;\n      },\n      onChange: event => this.setState({\n        timesheetFile: event.target.files[0],\n        timesheetTimestamp: Date.now()\n      }),\n      accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n      ,\n      storageRef: firebase.storage().ref(`timesheets/${userState.id}`),\n      filename: timesheetTimestamp,\n      onUploadStart: timesheetUploadStart,\n      onUploadError: timesheetUploadError,\n      onUploadSuccess: (filename, task) => {\n        this.clearFields();\n        const timesheetTimePeriod = daysSelectedText;\n        const filepath = task.snapshot.metadata.fullPath;\n        const timestamp = task.snapshot.metadata.name.split('.')[0];\n        const id = timestamp;\n        const userId = userState.id;\n        const action = {\n          timesheetTimePeriod,\n          filepath,\n          id,\n          userId,\n          timestamp\n        };\n        return saveToDatabase(action);\n      },\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })));\n  }\n\n  renderAdminSidePanel() {\n    return React.createElement(\"div\", {\n      style: Styles.adminSidePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.HOME\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.EMPLOYEES\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"View Employees\"));\n  }\n\n  renderAdminHomeLayout() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Home\");\n  }\n\n  renderAdminEmployeesTableData() {\n    const employees = this.props.employees;\n    return employees.map(employee => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, employee.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, employee.name)));\n  }\n\n  renderAddEmployeeLayout() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          name = _this$state2.name,\n          createUserLoading = _this$state2.createUserLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"NameLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      className: \"NameInput\",\n      type: \"text\",\n      value: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EmailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"EmailLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      className: \"EmailInput\",\n      type: \"text\",\n      value: email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PasswordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"PasswordLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      className: \"PasswordInput\",\n      value: password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"SubmitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, !createUserLoading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Sign Up\"), createUserLoading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))));\n  }\n\n  renderAdminEmployeesLayout() {\n    const shouldShowAddEmployee = this.state.shouldShowAddEmployee;\n    return React.createElement(\"div\", {\n      style: Styles.adminEmployeesLayoutContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: Styles.employeesTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: Styles.employeesTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"td\", {\n      style: Styles.employeesTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Name\"))), this.renderAdminEmployeesTableData()), React.createElement(\"button\", {\n      style: Styles.addEmployeeButton,\n      type: \"button\",\n      onClick: () => this.addEmployeeClicked(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Add Employee\"), shouldShowAddEmployee && this.renderAddEmployeeLayout());\n  }\n\n  renderAdminContent() {\n    const currentAdminLayout = this.state.currentAdminLayout;\n\n    if (currentAdminLayout === AdminLayouts.HOME) {\n      return this.renderAdminHomeLayout();\n    }\n\n    if (currentAdminLayout === AdminLayouts.EMPLOYEES) {\n      return this.renderAdminEmployeesLayout();\n    }\n\n    return null;\n  }\n\n  renderAdminLayout() {\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.renderAdminSidePanel(), this.renderAdminContent());\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (!isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    if (isAdmin) {\n      return this.renderAdminLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  employees: PropTypes.array.isRequired,\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired,\n  addEmployeeUnderAdmin: PropTypes.bool.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FileUploader","Generator","DayPicker","Loader","firebase","getWeekDays","getWeekRange","redX","greenCheck","Styles","AdminLayouts","HOME","EMPLOYEES","DashboardLayout","constructor","props","startUploadManually","setTimesheetFileError","timesheetFile","state","navigator","onLine","payload","fileUploader","startUpload","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","handleNameChange","evt","name","target","value","handleEmailChange","email","timesheetTimestamp","currentAdminLayout","shouldShowAddEmployee","createUserLoading","password","clearFields","addEmployeeClicked","generate","length","renderFileName","FileName","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","toggleHover","renderSubmitLayout","userState","saveToDatabase","timesheetUploadError","timesheetUploadStart","timesheetUploading","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DasboardContainer","RecentlySubmittedContainer","RecentlySubmittedText","SubmitContainer","StepsList","SubmitTimesheetButton","CalendarContainer","instance","event","files","Date","now","storage","ref","id","filename","task","timesheetTimePeriod","filepath","snapshot","metadata","fullPath","timestamp","split","userId","action","handleProgress","renderAdminSidePanel","adminSidePanel","adminSidePanelButton","renderAdminHomeLayout","renderAdminEmployeesTableData","employees","map","employee","renderAddEmployeeLayout","handleSubmit","handlePassChange","renderAdminEmployeesLayout","adminEmployeesLayoutContainer","employeesTable","employeesTableCell","addEmployeeButton","renderAdminContent","renderAdminLayout","render","isAdmin","propTypes","array","isRequired","object","bool","func","addEmployeeUnderAdmin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport FileUploader from 'react-firebase-file-uploader'\nimport Generator from 'generate-password'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport Loader from 'react-loader-spinner'\nimport firebase from '../../Firebase/index'\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\n\nconst AdminLayouts = {\n  HOME: 'HOME',\n  EMPLOYEES: 'EMPLOYEES'\n}\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminLayout: AdminLayouts.HOME,\n\n      // Add employee state\n      shouldShowAddEmployee: false,\n      createUserLoading: false,\n      email: '',\n      password: '',\n      name: ''\n    }\n    this.fileUploader = null\n  }\n\n  startUploadManually = () => {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile } = this.state;\n\n    if (!navigator.onLine) {\n      setTimesheetFileError({ payload: 'Check internet connection...' })\n      return\n    }\n    this.fileUploader.startUpload(timesheetFile)\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  handleNameChange = (evt) => {\n    this.setState({\n      name: evt.target.value\n    })\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value\n    })\n  }\n\n\n  clearFields() {\n    this.setState({ timesheetFile: null, selectedDays: [], hoverRange: null })\n  }\n\n  addEmployeeClicked() {\n    // const { addEmployeeUnderAdmin } = this.props\n    this.setState({ shouldShowAddEmployee: true, password: Generator.generate({ length: 10 }) })\n    // return addEmployeeUnderAdmin\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow} onMouseEnter={this.toggleHover}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  // renderRecentStands() {\n  //   return null\n  // }\n\n  renderSubmitLayout() {\n    const { userState, saveToDatabase, timesheetUploadError, timesheetUploadStart, timesheetUploading } = this.props\n    const { timesheetFile, hoverRange, selectedDays, timesheetTimestamp } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DasboardContainer}>\n        <div style={Styles.RecentlySubmittedContainer}>\n          <p style={Styles.RecentlySubmittedText}>Recently Submitted</p>\n          {/* {this.renderRecentStands()} */}\n        </div>\n        <div style={Styles.SubmitContainer}>\n          <h2>Submit</h2>\n          <div style={Styles.StepsList}>\n            {/* FIRST STEP */ }\n            {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n            {/* SECOND STEP */}\n            {this.renderSecondStep()}\n            {/* SUBMIT BUTTON */}\n            { timesheetFile && daysAreSelected &&\n              <button type=\"button\" style={Styles.SubmitTimesheetButton} onClick={this.startUploadManually}>\n                { !timesheetUploading && <p>Submit</p> }\n                { timesheetUploading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n              </button> }\n          </div>\n          <div style={Styles.CalendarContainer}>\n            <DayPicker\n              selectedDays={selectedDays}\n              showWeekNumbers\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={this.handleDayChange}\n              onDayMouseEnter={this.handleDayEnter}\n              onDayMouseLeave={this.handleDayLeave}\n              onWeekClick={this.handleWeekClick}\n            />\n          </div>\n\n          <FileUploader\n            ref={instance => { this.fileUploader = instance }}\n            onChange={event => this.setState({ timesheetFile: event.target.files[0], timesheetTimestamp: Date.now() })}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n            storageRef={firebase.storage().ref(`timesheets/${userState.id}`)}\n            filename={timesheetTimestamp}\n            onUploadStart={timesheetUploadStart}\n            onUploadError={timesheetUploadError}\n            onUploadSuccess={(filename, task) => {\n              this.clearFields()\n              const timesheetTimePeriod = daysSelectedText\n              const filepath = task.snapshot.metadata.fullPath\n              const timestamp = task.snapshot.metadata.name.split('.')[0]\n              const id = timestamp\n              const userId = userState.id\n              const action = {\n                timesheetTimePeriod,\n                filepath,\n                id,\n                userId,\n                timestamp\n              }\n              return saveToDatabase(action)\n            }}\n            onProgress={this.handleProgress}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  renderAdminSidePanel() {\n    return (\n      <div style={Styles.adminSidePanel}>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.HOME })}>Home</button>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.EMPLOYEES })}>View Employees</button>\n      </div>\n    )\n  }\n\n  renderAdminHomeLayout() {\n    return (\n      <p>Home</p>\n    )\n  }\n\n  renderAdminEmployeesTableData() {\n    const { employees } = this.props\n    return employees.map(employee => (\n      <tr>\n        <td>{employee.email}</td>\n        <td>{employee.name}</td>\n      </tr>\n    ))\n  }\n\n  renderAddEmployeeLayout() {\n    const { email, password, name, createUserLoading } = this.state\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"NameContainer\">\n            <label className=\"NameLabel\">Name:</label>\n            <input className=\"NameInput\" type=\"text\" value={name} onChange={this.handleNameChange} />\n          </div>\n          <div className=\"EmailContainer\">\n            <label className=\"EmailLabel\">Email:</label>\n            <input className=\"EmailInput\" type=\"text\" value={email} onChange={this.handleEmailChange} />\n          </div>\n          <div className=\"PasswordContainer\">\n            <label className=\"PasswordLabel\">Password:</label>\n            <input className=\"PasswordInput\" value={password} onChange={this.handlePassChange} />\n          </div>\n          <button className=\"SubmitButton\" type=\"submit\">\n            { !createUserLoading && <p>Sign Up</p> }\n            { createUserLoading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n  renderAdminEmployeesLayout() {\n    const { shouldShowAddEmployee } = this.state\n    return (\n      <div style={Styles.adminEmployeesLayoutContainer}>\n        <table style={Styles.employeesTable}>\n          <thead>\n            <tr>\n              <td style={Styles.employeesTableCell}>Email address</td>\n              <td style={Styles.employeesTableCell}>Name</td>\n            </tr>\n          </thead>\n          {this.renderAdminEmployeesTableData()}\n        </table>\n        <button style={Styles.addEmployeeButton} type=\"button\" onClick={() => this.addEmployeeClicked()}>Add Employee</button>\n        { shouldShowAddEmployee && this.renderAddEmployeeLayout() }\n      </div>\n    )\n  }\n\n  renderAdminContent() {\n    const { currentAdminLayout } = this.state\n    if (currentAdminLayout === AdminLayouts.HOME) {\n      return this.renderAdminHomeLayout()\n    }\n    if (currentAdminLayout === AdminLayouts.EMPLOYEES) {\n      return this.renderAdminEmployeesLayout()\n    }\n    return null\n  }\n\n  renderAdminLayout() {\n    return (\n      <div style={Styles.DasboardContainer}>\n        {this.renderAdminSidePanel()}\n        {this.renderAdminContent()}\n      </div>\n    )\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (!isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    if (isAdmin) {\n      return (\n        this.renderAdminLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  employees: PropTypes.array.isRequired,\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired,\n  addEmployeeUnderAdmin: PropTypes.bool.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}