{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './DashboardLayoutStyles.css'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nimport { FilePicker } from 'react-file-picker';\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      className: \"FileName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, timesheetFile.name);\n  }\n\n  renderSubmitLayout() {\n    const setTimesheetFileError = this.props.setTimesheetFileError;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      className: \"StepsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, daysAreSelected && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"1. \", daysSelectedText), !daysAreSelected && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"1. Select your time period\"), timesheetFile && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"2. \", timesheetFile.name), !timesheetFile && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      className: \"CalendarContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(FilePicker, {\n      extensions: ['md'],\n      onChange: FileObject => this.setState({\n        timesheetFile: FileObject\n      }),\n      onError: error => setTimesheetFileError({\n        payload: error\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Click to upload timesheet\")));\n  }\n\n  render() {\n    return this.renderSubmitLayout();\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FilePicker","DayPicker","getWeekDays","getWeekRange","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","state","timesheetFile","renderFileName","name","renderSubmitLayout","setTimesheetFileError","daysAreSelected","length","daysSelectedText","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","FileObject","error","payload","render","propTypes","isAdmin","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport moment from 'moment'\nimport './DashboardLayoutStyles.css'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\nimport { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    };\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    });\n  };\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    });\n  };\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    });\n  };\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    });\n  };\n\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p className=\"FileName\">{timesheetFile.name}</p>\n    )\n  }\n\n  renderSubmitLayout() {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile, hoverRange, selectedDays } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div className=\"DashboardContainer\">\n        <h2>Submit</h2>\n        <div className=\"StepsList\">\n          {/* FIRST STEP */ }\n          { daysAreSelected && <h3>1. {daysSelectedText}</h3> }\n          { !daysAreSelected && <h3>1. Select your time period</h3> }\n          {/* SECOND STEP */}\n          { timesheetFile && <h3>2. {timesheetFile.name}</h3> }\n          { !timesheetFile && <h3>2. Upload excel file (xlsx)</h3> }\n          {/* SUBMIT BUTTON */}\n          { timesheetFile && daysAreSelected &&\n            <button type=\"button\">\n              Submit\n            </button> }\n        </div>\n        <div className=\"CalendarContainer\">\n          <DayPicker\n            selectedDays={selectedDays}\n            showWeekNumbers\n            showOutsideDays\n            modifiers={modifiers}\n            onDayClick={this.handleDayChange}\n            onDayMouseEnter={this.handleDayEnter}\n            onDayMouseLeave={this.handleDayLeave}\n            onWeekClick={this.handleWeekClick}\n          />\n        </div>\n        <FilePicker\n          extensions={['md']}\n          onChange={FileObject => this.setState({ timesheetFile: FileObject })}\n          onError={(error) => setTimesheetFileError({ payload: error })}\n        >\n          <button type=\"submit\">\n            Click to upload timesheet\n          </button>\n        </FilePicker>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      this.renderSubmitLayout()\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}