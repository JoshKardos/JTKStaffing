{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nimport { file } from '@babel/types';\nexport const uploadTimesheetEpic = (action$, state$) => action$.pipe(ofType(DashboardTypes.UPLOAD_TIMESHEET), map(action => {\n  const storageRef = firebase.storage().ref().child(state$.value.UserReducers.userReducer.id); // storageRef.put(file)\n\n  console.log(action.payload);\n  return {\n    type: ''\n  };\n}));\nexport const setTimesheetFileError = action$ => action$.pipe(ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/DashboardEpics.js"],"names":["ofType","map","switchMap","TYPES","DashboardTypes","ErrorTypes","firebase","file","uploadTimesheetEpic","action$","state$","pipe","UPLOAD_TIMESHEET","action","storageRef","storage","ref","child","value","UserReducers","userReducer","id","console","log","payload","type","setTimesheetFileError","SET_TIMESHEET_FILE_ERROR","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AACA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,yBAAxC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqBD,OAAO,CAACE,IAAR,CACtDX,MAAM,CAACI,cAAc,CAACQ,gBAAhB,CADgD,EAEtDX,GAAG,CAACY,MAAM,IAAI;AACZ,QAAMC,UAAU,GAAGR,QAAQ,CAACS,OAAT,GAAmBC,GAAnB,GAAyBC,KAAzB,CAA+BP,MAAM,CAACQ,KAAP,CAAaC,YAAb,CAA0BC,WAA1B,CAAsCC,EAArE,CAAnB,CADY,CAEZ;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,OAAnB;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CALE,CAFmD,CAAjD;AAUP,OAAO,MAAMC,qBAAqB,GAAIjB,OAAD,IAAaA,OAAO,CAACE,IAAR,CAChDX,MAAM,CAACI,cAAc,CAACuB,wBAAhB,CAD0C,EAEhD1B,GAAG,CAAEY,MAAD,KAAa;AAAEY,EAAAA,IAAI,EAAEpB,UAAU,CAACuB,SAAnB;AAA8BJ,EAAAA,OAAO,EAAEX,MAAM,CAACW;AAA9C,CAAb,CAAD,CAF6C,CAA3C;AAKP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\nimport { file } from '@babel/types';\n\nexport const uploadTimesheetEpic = (action$, state$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_TIMESHEET),\n  map(action => {\n    const storageRef = firebase.storage().ref().child(state$.value.UserReducers.userReducer.id)\n    // storageRef.put(file)\n    console.log(action.payload)\n    return { type: '' }\n  })\n)\n\nexport const setTimesheetFileError = (action$) => action$.pipe(\n  ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}