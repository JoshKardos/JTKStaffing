{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nimport { FilePicker } from 'react-file-picker';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport moment from 'moment';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: this.getWeekDays(this.getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: this.getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: undefined // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  getWeekDays(weekStart) {\n    const days = [weekStart];\n\n    for (let i = 1; i < 7; i += 1) {\n      days.push(moment(weekStart).add(i, 'days').toDate());\n    }\n\n    return days;\n  }\n\n  getWeekRange(date) {\n    return {\n      from: moment(date).startOf('week').toDate(),\n      to: moment(date).endOf('week').toDate()\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      className: \"FileName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, timesheetFile.name);\n  }\n\n  render() {\n    const setTimesheetFileError = this.props.setTimesheetFileError;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays;\n    const daysAreSelected = selectedDays.length > 0;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"DASHBOARD LAYOUT\"), React.createElement(\"ol\", {\n      className: \"StepsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select your time period\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Upload excel file (xlsx)\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Thats it!\")), React.createElement(\"div\", {\n      className: \"SelectedWeekExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), selectedDays.length === 7 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, moment(selectedDays[0]).format('LL'), \" \\u2013 \", ' ', moment(selectedDays[6]).format('LL'))), React.createElement(FilePicker, {\n      extensions: ['md'],\n      onChange: FileObject => this.setState({\n        timesheetFile: FileObject\n      }),\n      onError: error => setTimesheetFileError({\n        payload: error\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Click to upload timesheet\")), timesheetFile && this.renderFileName());\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","Helmet","PropTypes","FilePicker","DayPicker","moment","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","getWeekDays","getWeekRange","from","handleDayEnter","hoverRange","handleDayLeave","undefined","handleWeekClick","weekNumber","days","state","timesheetFile","weekStart","i","push","add","toDate","startOf","to","endOf","renderFileName","name","render","setTimesheetFileError","daysAreSelected","length","modifiers","selectedRange","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","format","FileObject","error","payload","propTypes","isAdmin","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\nimport { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport moment from 'moment';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  getWeekDays(weekStart) {\n    const days = [weekStart];\n    for (let i = 1; i < 7; i += 1) {\n      days.push(\n        moment(weekStart)\n          .add(i, 'days')\n          .toDate()\n      );\n    }\n    return days;\n  }\n\n  getWeekRange(date) {\n    return {\n      from: moment(date)\n        .startOf('week')\n        .toDate(),\n      to: moment(date)\n        .endOf('week')\n        .toDate(),\n    };\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: this.getWeekDays(this.getWeekRange(date).from),\n    });\n  };\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: this.getWeekRange(date),\n    });\n  };\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: undefined, // cahnge this\n    });\n  };\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    });\n  };\n\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p className=\"FileName\">{timesheetFile.name}</p>\n    )\n  }\n\n  render() {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile, hoverRange, selectedDays } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div className=\"DashboardContainer\">\n        <h1>DASHBOARD LAYOUT</h1>\n        <ol className=\"StepsList\">\n          <li>Select your time period</li>\n          <li>Upload excel file (xlsx)</li>\n          <h3>Thats it!</h3>\n        </ol>\n        <div className=\"SelectedWeekExample\">\n          <DayPicker\n            selectedDays={selectedDays}\n            showWeekNumbers\n            showOutsideDays\n            modifiers={modifiers}\n            onDayClick={this.handleDayChange}\n            onDayMouseEnter={this.handleDayEnter}\n            onDayMouseLeave={this.handleDayLeave}\n            onWeekClick={this.handleWeekClick}\n          />\n          { selectedDays.length === 7 && (\n            <div>\n              {moment(selectedDays[0]).format('LL')} – {' '}\n              {moment(selectedDays[6]).format('LL')}\n            </div>\n          ) }\n        </div>\n        <FilePicker\n          extensions={['md']}\n          onChange={FileObject => this.setState({ timesheetFile: FileObject })}\n          onError={(error) => setTimesheetFileError({ payload: error })}\n        >\n          <button type=\"submit\">\n            Click to upload timesheet\n          </button>\n        </FilePicker>\n        { timesheetFile && this.renderFileName()}\n      </div>\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}