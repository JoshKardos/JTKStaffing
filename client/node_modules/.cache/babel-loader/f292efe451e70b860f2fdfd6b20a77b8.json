{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nimport { FilePicker } from 'react-file-picker';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: this.getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: this.getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: undefined\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days, e) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  getWeekDays(weekStart) {\n    const days = [weekStart];\n\n    for (let i = 1; i < 7; i += 1) {\n      days.push(moment(weekStart).add(i, 'days').toDate());\n    }\n\n    return days;\n  }\n\n  getWeekRange(date) {\n    return {\n      from: moment(date).startOf('week').toDate(),\n      to: moment(date).endOf('week').toDate()\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      className: \"FileName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, timesheetFile.name);\n  }\n\n  render() {\n    const setTimesheetFileError = this.props.setTimesheetFileError;\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"DASHBOARD LAYOUT\"), React.createElement(\"ol\", {\n      className: \"StepsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Select your time period\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Upload excel file (xlsx)\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Thats it!\")), React.createElement(DayPicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(FilePicker, {\n      extensions: ['md'],\n      onChange: FileObject => this.setState({\n        timesheetFile: FileObject\n      }),\n      onError: error => setTimesheetFileError({\n        payload: error\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Click to upload timesheet\")), timesheetFile && this.renderFileName());\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","FilePicker","DayPicker","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","getWeekDays","getWeekRange","from","handleDayEnter","hoverRange","handleDayLeave","undefined","handleWeekClick","weekNumber","days","e","state","timesheetFile","weekStart","i","push","moment","add","toDate","startOf","to","endOf","renderFileName","name","render","setTimesheetFileError","FileObject","error","payload","propTypes","isAdmin","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './DashboardLayoutStyles.css'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\nimport { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: undefined,\n      selectedDays: []\n    };\n  }\n\n  getWeekDays(weekStart) {\n    const days = [weekStart];\n    for (let i = 1; i < 7; i += 1) {\n      days.push(\n        moment(weekStart)\n          .add(i, 'days')\n          .toDate()\n      );\n    }\n    return days;\n  }\n\n  getWeekRange(date) {\n    return {\n      from: moment(date)\n        .startOf('week')\n        .toDate(),\n      to: moment(date)\n        .endOf('week')\n        .toDate(),\n    };\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: this.getWeekDays(getWeekRange(date).from),\n    });\n  };\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: this.getWeekRange(date),\n    });\n  };\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: undefined,\n    });\n  };\n\n  handleWeekClick = (weekNumber, days, e) => {\n    this.setState({\n      selectedDays: days,\n    });\n  };\n\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p className=\"FileName\">{timesheetFile.name}</p>\n    )\n  }\n\n  render() {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile } = this.state\n    return (\n      <div className=\"DashboardContainer\">\n        <h1>DASHBOARD LAYOUT</h1>\n        <ol className=\"StepsList\">\n          <li>Select your time period</li>\n          <li>Upload excel file (xlsx)</li>\n          <h3>Thats it!</h3>\n        </ol>\n        <DayPicker />\n        <FilePicker\n          extensions={['md']}\n          onChange={FileObject => this.setState({ timesheetFile: FileObject })}\n          onError={(error) => setTimesheetFileError({ payload: error })}\n        >\n          <button type=\"submit\">\n            Click to upload timesheet\n          </button>\n        </FilePicker>\n        { timesheetFile && this.renderFileName()}\n      </div>\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}