{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FileUploader from 'react-firebase-file-uploader'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\n\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport Loader from 'react-loader-spinner';\nimport firebase from '../../Firebase/index';\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startUploadManually = () => {\n      const setTimesheetFileError = this.props.setTimesheetFileError;\n      const timesheetFile = this.state.timesheetFile;\n\n      if (!navigator.onLine) {\n        setTimesheetFileError({\n          payload: 'Check internet connection...'\n        });\n        return;\n      }\n\n      this.fileUploader.startUpload(timesheetFile);\n    };\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminlayout: null\n    };\n    this.fileUploader = null;\n  }\n\n  clearFields() {\n    this.setState({\n      timesheetFile: null,\n      selectedDays: [],\n      hoverRange: null\n    });\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      onMouseEnter: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  } // renderRecentStands() {\n  //   return null\n  // }\n\n\n  renderSubmitLayout() {\n    const _this$props = this.props,\n          userState = _this$props.userState,\n          saveToDatabase = _this$props.saveToDatabase,\n          timesheetUploadError = _this$props.timesheetUploadError,\n          timesheetUploadStart = _this$props.timesheetUploadStart,\n          timesheetUploading = _this$props.timesheetUploading;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays,\n          timesheetTimestamp = _this$state.timesheetTimestamp;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: Styles.RecentlySubmittedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.RecentlySubmittedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Recently Submitted\")), React.createElement(\"div\", {\n      style: Styles.SubmitContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      onClick: this.startUploadManually,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, !timesheetUploading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Submit\"), timesheetUploading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(FileUploader, {\n      ref: instance => {\n        this.fileUploader = instance;\n      },\n      onChange: event => this.setState({\n        timesheetFile: event.target.files[0],\n        timesheetTimestamp: Date.now()\n      }),\n      accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n      ,\n      storageRef: firebase.storage().ref(`timesheets/${userState.id}`),\n      filename: timesheetTimestamp,\n      onUploadStart: timesheetUploadStart,\n      onUploadError: timesheetUploadError,\n      onUploadSuccess: (filename, task) => {\n        this.clearFields();\n        const timesheetTimePeriod = daysSelectedText;\n        const filepath = task.snapshot.metadata.fullPath;\n        const timestamp = task.snapshot.metadata.name.split('.')[0];\n        const id = timestamp;\n        const userId = userState.id;\n        const action = {\n          timesheetTimePeriod,\n          filepath,\n          id,\n          userId,\n          timestamp\n        };\n        return saveToDatabase(action);\n      },\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n  renderAdminSidePanel() {\n    return React.createElement(\"div\", {\n      style: Styles.adminSidePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: Styles.adminSidePanelButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      style: Styles.adminSidePanelButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"View Employees\"));\n  }\n\n  renderAdminLayout() {\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.renderAdminSidePanel(), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Hello\"));\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (!isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    if (isAdmin) {\n      return this.renderAdminLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FileUploader","DayPicker","Loader","firebase","getWeekDays","getWeekRange","redX","greenCheck","Styles","DashboardLayout","constructor","props","startUploadManually","setTimesheetFileError","timesheetFile","state","navigator","onLine","payload","fileUploader","startUpload","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","timesheetTimestamp","currentAdminlayout","clearFields","renderFileName","FileName","name","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","toggleHover","renderSubmitLayout","userState","saveToDatabase","timesheetUploadError","timesheetUploadStart","timesheetUploading","length","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DasboardContainer","RecentlySubmittedContainer","RecentlySubmittedText","SubmitContainer","StepsList","SubmitTimesheetButton","CalendarContainer","instance","event","target","files","Date","now","storage","ref","id","filename","task","timesheetTimePeriod","filepath","snapshot","metadata","fullPath","timestamp","split","userId","action","handleProgress","renderAdminSidePanel","adminSidePanel","adminSidePanelButton","renderAdminLayout","render","isAdmin","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport FileUploader from 'react-firebase-file-uploader';\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport Loader from 'react-loader-spinner'\nimport firebase from '../../Firebase/index'\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminlayout: null\n    }\n    this.fileUploader = null\n  }\n\n  startUploadManually = () => {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile } = this.state;\n\n    if (!navigator.onLine) {\n      setTimesheetFileError({ payload: 'Check internet connection...' })\n      return\n    }\n    this.fileUploader.startUpload(timesheetFile)\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  clearFields() {\n    this.setState({ timesheetFile: null, selectedDays: [], hoverRange: null })\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow} onMouseEnter={this.toggleHover}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  // renderRecentStands() {\n  //   return null\n  // }\n\n  renderSubmitLayout() {\n    const { userState, saveToDatabase, timesheetUploadError, timesheetUploadStart, timesheetUploading } = this.props\n    const { timesheetFile, hoverRange, selectedDays, timesheetTimestamp } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DasboardContainer}>\n        <div style={Styles.RecentlySubmittedContainer}>\n          <p style={Styles.RecentlySubmittedText}>Recently Submitted</p>\n          {/* {this.renderRecentStands()} */}\n        </div>\n        <div style={Styles.SubmitContainer}>\n          <h2>Submit</h2>\n          <div style={Styles.StepsList}>\n            {/* FIRST STEP */ }\n            {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n            {/* SECOND STEP */}\n            {this.renderSecondStep()}\n            {/* SUBMIT BUTTON */}\n            { timesheetFile && daysAreSelected &&\n              <button type=\"button\" style={Styles.SubmitTimesheetButton} onClick={this.startUploadManually}>\n                { !timesheetUploading && <p>Submit</p> }\n                { timesheetUploading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n              </button> }\n          </div>\n          <div style={Styles.CalendarContainer}>\n            <DayPicker\n              selectedDays={selectedDays}\n              showWeekNumbers\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={this.handleDayChange}\n              onDayMouseEnter={this.handleDayEnter}\n              onDayMouseLeave={this.handleDayLeave}\n              onWeekClick={this.handleWeekClick}\n            />\n          </div>\n\n          <FileUploader\n            ref={instance => { this.fileUploader = instance }}\n            onChange={event => this.setState({ timesheetFile: event.target.files[0], timesheetTimestamp: Date.now() })}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n            storageRef={firebase.storage().ref(`timesheets/${userState.id}`)}\n            filename={timesheetTimestamp}\n            onUploadStart={timesheetUploadStart}\n            onUploadError={timesheetUploadError}\n            onUploadSuccess={(filename, task) => {\n              this.clearFields()\n              const timesheetTimePeriod = daysSelectedText\n              const filepath = task.snapshot.metadata.fullPath\n              const timestamp = task.snapshot.metadata.name.split('.')[0]\n              const id = timestamp\n              const userId = userState.id\n              const action = {\n                timesheetTimePeriod,\n                filepath,\n                id,\n                userId,\n                timestamp\n              }\n              return saveToDatabase(action)\n            }}\n            onProgress={this.handleProgress}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  renderAdminSidePanel() {\n    return (\n      <div style={Styles.adminSidePanel}>\n        <button style={Styles.adminSidePanelButton}>Home</button>\n        <button style={Styles.adminSidePanelButton}>View Employees</button>\n      </div>\n    )\n  }\n\n  renderAdminLayout() {\n    return (\n      <div style={Styles.DasboardContainer}>\n        {this.renderAdminSidePanel()}\n        <p>Hello</p>\n      </div>\n    )\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (!isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    if (isAdmin) {\n      return (\n        this.renderAdminLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}