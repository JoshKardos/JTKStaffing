{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), // delay(5000), // Asynchronously wait 1000ms then continue\nmap(() => {\n  const email = action$.email;\n  const password = action$.password;\n  firebase.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    } // ...\n\n  });\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","firebase","signUpEpic","action$","pipe","SIGN_UP","email","password","auth","createUserWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCP,MAAM,CAACG,SAAS,CAACK,OAAX,CAD6B,EAEnC;AACAP,GAAG,CAAC,MAAM;AAAA,QACAQ,KADA,GACUH,OADV,CACAG,KADA;AAAA,QAEAC,QAFA,GAEaJ,OAFb,CAEAI,QAFA;AAGRN,EAAAA,QAAQ,CAACO,IAAT,GAAgBC,8BAAhB,CAA+CH,KAA/C,EAAsDC,QAAtD,EAAgEG,KAAhE,CAAuEC,KAAD,IAAW;AAC/E;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACD,KAL8E,CAM/E;;AACD,GAPD;AAQA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAZE,CAHgC,CAA9B;AAkBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  // delay(5000), // Asynchronously wait 1000ms then continue\n  map(() => {\n    const { email } = action$\n    const { password } = action$\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      }\n      // ...\n    });\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}