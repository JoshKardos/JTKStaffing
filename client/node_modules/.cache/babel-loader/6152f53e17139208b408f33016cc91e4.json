{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => async dispatch => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(dataBeforeEmail => {\n      firebase.auth().onAuthStateChanged(function (user) {\n        user.sendEmailVerification();\n      });\n    }).then(dataAfterEmail => {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user.emailVerified) {// // Email is verified\n          // dispatch({\n          //   type: SIGNUP_SUCCESS,\n          //   payload:\n          //     \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\n          // });\n        } else {\n          // Email is not verified\n          dispatch({\n            type: ErrorTypes.SET_ERROR,\n            payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n          });\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: ErrorTypes.SET_ERROR,\n        payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: ErrorTypes.SET_ERROR,\n      payload: \"Something went wrong, we couldn't create your account. Please try again.\"\n    });\n  }\n})); // export const signUpEpic = action$ => action$.pipe(\n//   ofType(UserTypes.SIGN_UP),\n//   map(action => {\n//     const { email } = action.payload\n//     const { password } = action.payload\n//     // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n//     firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n//       console.log('here')\n//       return { type: '' }\n//     }).catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code\n//       const errorMessage = error.message\n//       console.log(\"error\")\n//       const action = {\n//         payload: errorMessage\n//       }\n//       return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n//     })\n//     console.log(\"HERE\")\n//     return { type: '' }\n//   })\n// )\n\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","dispatch","pipe","SIGN_UP","action","auth","createUserWithEmailAndPassword","email","password","then","dataBeforeEmail","onAuthStateChanged","user","sendEmailVerification","dataAfterEmail","emailVerified","type","SET_ERROR","payload","catch","error","err"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAI,MAAMC,QAAN,IAAkBD,OAAO,CAACE,IAAR,CACrDV,MAAM,CAACG,SAAS,CAACQ,OAAX,CAD+C,EAErDV,GAAG,CAACW,MAAM,IAAI;AACd,MAAI;AACFN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,8BAAhB,CAA+CC,KAA/C,EAAsDC,QAAtD,EAAgEC,IAAhE,CAAqEC,eAAe,IAAI;AACtFZ,MAAAA,QAAQ,CAACO,IAAT,GAAgBM,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChDA,QAAAA,IAAI,CAACC,qBAAL;AACD,OAFD;AAGD,KAJD,EAIGJ,IAJH,CAIQK,cAAc,IAAI;AACxBhB,MAAAA,QAAQ,CAACO,IAAT,GAAgBM,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAChD,YAAIA,IAAI,CAACG,aAAT,EAAwB,CACtB;AACA;AACA;AACA;AACA;AACA;AACD,SAPD,MAOO;AACL;AACAd,UAAAA,QAAQ,CAAC;AACPe,YAAAA,IAAI,EAAEpB,UAAU,CAACqB,SADV;AAEPC,YAAAA,OAAO,EACL;AAHK,WAAD,CAAR;AAKD;AACF,OAhBD;AAiBD,KAtBD,EAuBGC,KAvBH,CAuBS,UAASC,KAAT,EAAgB;AACrBnB,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEpB,UAAU,CAACqB,SADV;AAEPC,QAAAA,OAAO,EACL;AAHK,OAAD,CAAR;AAKD,KA7BH;AA8BD,GA/BD,CA+BE,OAAOG,GAAP,EAAY;AACZpB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEpB,UAAU,CAACqB,SADV;AAEPC,MAAAA,OAAO,EACL;AAHK,KAAD,CAAR;AAKD;AACF,CAvCI,CAFkD,CAAhD,C,CA2CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => async dispatch => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(dataBeforeEmail => {\n      firebase.auth().onAuthStateChanged(function(user) {\n        user.sendEmailVerification();\n      });\n    }).then(dataAfterEmail => {\n      firebase.auth().onAuthStateChanged(function(user) {\n        if (user.emailVerified) {\n          // // Email is verified\n          // dispatch({\n          //   type: SIGNUP_SUCCESS,\n          //   payload:\n          //     \"Your account was successfully created! Now you need to verify your e-mail address, please go check your inbox.\"\n          // });\n        } else {\n          // Email is not verified\n          dispatch({\n            type: ErrorTypes.SET_ERROR,\n            payload:\n              \"Something went wrong, we couldn't create your account. Please try again.\"\n          });\n        }\n      });\n    })\n      .catch(function(error) {\n        dispatch({\n          type: ErrorTypes.SET_ERROR,\n          payload:\n            \"Something went wrong, we couldn't create your account. Please try again.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: ErrorTypes.SET_ERROR,\n      payload:\n        \"Something went wrong, we couldn't create your account. Please try again.\"\n    });\n  }\n}))\n\n// export const signUpEpic = action$ => action$.pipe(\n//   ofType(UserTypes.SIGN_UP),\n//   map(action => {\n//     const { email } = action.payload\n//     const { password } = action.payload\n//     // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n//     firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n//       console.log('here')\n//       return { type: '' }\n//     }).catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code\n//       const errorMessage = error.message\n//       console.log(\"error\")\n//       const action = {\n//         payload: errorMessage\n//       }\n//       return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n//     })\n//     console.log(\"HERE\")\n//     return { type: '' }\n//   })\n// )\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}