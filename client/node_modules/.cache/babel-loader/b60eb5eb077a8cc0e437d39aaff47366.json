{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { switchMap, mapTo, map, filter } from 'rxjs/operators';\nimport { TYPES as UserTypes, userLoggedIn } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport { TYPES as LayoutTypes } from '../Redux/LayoutRedux';\nimport firebase from '../Firebase/index';\nexport const logInEpic = action$ => action$.pipe(ofType(UserTypes.LOG_IN), switchMap(action => {}));\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), switchMap(action => {\n  console.log(action);\n  const _action$payload = action.payload,\n        name = _action$payload.name,\n        email = _action$payload.email,\n        password = _action$payload.password,\n        company = _action$payload.company;\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(value => {\n    // success\n    const uid = value.user.uid;\n    const ref = firebase.database().ref(`/users/${uid}`);\n    ref.set({\n      name,\n      email,\n      company,\n      uid\n    });\n    return {\n      type: UserTypes.SET_USER_DATA,\n      payload: {\n        id: uid,\n        name,\n        email,\n        company\n      }\n    };\n  }).catch(error => {\n    // error\n    const errorMessage = error.message;\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n}));\nexport const setSignUpErrorEpic = action$ => action$.pipe(ofType(UserTypes.SET_SIGN_UP_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport const startSignUpLoadingEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), mapTo({\n  type: UserTypes.START_SIGN_UP_LOADING\n}));\nexport const stopSignUpLoadingEpic = (action$, state$) => action$.pipe(ofType(ErrorTypes.SET_ERROR), // check for sign up loading state\nfilter(() => state$.value.UserReducers.userReducer.signUpLoading), mapTo({\n  type: UserTypes.STOP_SIGN_UP_LOADING\n}));\nexport const fetchUserDataEpic = (action$, state$) => action$.pipe(ofType(UserTypes.FETCH_USER_DATA), filter(() => !userLoggedIn(state$.value.UserReducers.userReducer)), switchMap(action => {\n  const userId = action.payload;\n  return firebase.database().ref(`/users/${userId}`).once('value').then(snapshot => {\n    const name = snapshot.val() && snapshot.val().name || 'N/A';\n    const email = snapshot.val() && snapshot.val().email || 'N/A';\n    const company = snapshot.val() && snapshot.val().company || 'N/A';\n    const id = snapshot.val() && snapshot.val().uid || 'N/A';\n    return {\n      type: UserTypes.SET_USER_DATA,\n      payload: {\n        id,\n        name,\n        email,\n        company\n      }\n    };\n  });\n}));\nexport const logOutEpic = action$ => action$.pipe(ofType(UserTypes.LOG_OUT), switchMap(() => firebase.auth().signOut().then(() => ( // Sign-out successful.\n{\n  type: LayoutTypes.SET_LOG_IN_LAYOUT\n})).catch(error => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: error.message\n}))));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","switchMap","mapTo","map","filter","TYPES","UserTypes","userLoggedIn","ErrorTypes","LayoutTypes","firebase","logInEpic","action$","pipe","LOG_IN","action","signUpEpic","SIGN_UP","console","log","payload","name","email","password","company","auth","createUserWithEmailAndPassword","then","value","uid","user","ref","database","set","type","SET_USER_DATA","id","catch","error","errorMessage","message","SET_ERROR","setSignUpErrorEpic","SET_SIGN_UP_ERROR","startSignUpLoadingEpic","START_SIGN_UP_LOADING","stopSignUpLoadingEpic","state$","UserReducers","userReducer","signUpLoading","STOP_SIGN_UP_LOADING","fetchUserDataEpic","FETCH_USER_DATA","userId","once","snapshot","val","logOutEpic","LOG_OUT","signOut","SET_LOG_IN_LAYOUT"],"mappings":"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","sourcesContent":["import { ofType } from 'redux-observable'\nimport { switchMap, mapTo, map, filter } from 'rxjs/operators';\nimport { TYPES as UserTypes, userLoggedIn } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport { TYPES as LayoutTypes } from '../Redux/LayoutRedux'\nimport firebase from '../Firebase/index'\n\nexport const logInEpic = (action$) => action$.pipe(\n  ofType(UserTypes.LOG_IN),\n  switchMap(action => {\n    \n  })\n)\n\nexport const signUpEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  switchMap(action => {\n    console.log(action)\n    const { name, email, password, company } = action.payload\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then((value) => {\n      // success\n      const { uid } = value.user\n      const ref = firebase.database().ref(`/users/${uid}`)\n      ref.set({\n        name,\n        email,\n        company,\n        uid\n      })\n      return { type: UserTypes.SET_USER_DATA, payload: { id: uid, name, email, company } }\n    }).catch((error) => {\n      // error\n      const errorMessage = error.message\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n  })\n)\n\nexport const setSignUpErrorEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SET_SIGN_UP_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport const startSignUpLoadingEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  mapTo({ type: UserTypes.START_SIGN_UP_LOADING })\n)\n\nexport const stopSignUpLoadingEpic = (action$, state$) => action$.pipe(\n  ofType(ErrorTypes.SET_ERROR), // check for sign up loading state\n  filter(() => state$.value.UserReducers.userReducer.signUpLoading),\n  mapTo({ type: UserTypes.STOP_SIGN_UP_LOADING })\n)\n\nexport const fetchUserDataEpic = (action$, state$) => action$.pipe(\n  ofType(UserTypes.FETCH_USER_DATA),\n  filter(() => !userLoggedIn(state$.value.UserReducers.userReducer)),\n  switchMap((action) => {\n    const userId = action.payload\n    return firebase.database().ref(`/users/${userId}`).once('value').then((snapshot) => {\n      const name = (snapshot.val() && snapshot.val().name) || 'N/A'\n      const email = (snapshot.val() && snapshot.val().email) || 'N/A'\n      const company = (snapshot.val() && snapshot.val().company) || 'N/A'\n      const id = (snapshot.val() && snapshot.val().uid) || 'N/A'\n      return { type: UserTypes.SET_USER_DATA, payload: { id, name, email, company } }\n    })\n  })\n)\n\nexport const logOutEpic = (action$) => action$.pipe(\n  ofType(UserTypes.LOG_OUT),\n  switchMap(() => firebase.auth().signOut().then(() => (\n    // Sign-out successful.\n    { type: LayoutTypes.SET_LOG_IN_LAYOUT }\n  )).catch(error => (\n    { type: ErrorTypes.SET_ERROR, payload: error.message }\n  )))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}