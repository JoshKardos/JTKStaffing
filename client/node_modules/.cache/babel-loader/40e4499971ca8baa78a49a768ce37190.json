{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/Admin/AdminTimesheetTile/AdminTimesheetTile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../../DashboardLayoutStyles';\nimport firebase from '../../../../Firebase/index';\nimport AdminTimesheetTileTableCell from './AdminTimesheetTileTableCell';\n\nclass AdminTimesheetTile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timesheets: [],\n      hover: false\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          handleEmployeeIdSubmissionTimePeriodsMap = _this$props.handleEmployeeIdSubmissionTimePeriodsMap,\n          handleAddSubmissionTimePeriods = _this$props.handleAddSubmissionTimePeriods;\n    const employee = this.props.employee;\n    let timesheetArr = [];\n    firebase.database().ref(`/user-timesheets/${employee.uid}`).once('value').then(timesheetSnapshot => {\n      if (!timesheetSnapshot.val()) return;\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timesheetArr = [...timesheetArr, timesheetSnapshot.val()[key]]; // eslint-disable-next-line no-useless-return\n\n        return;\n      });\n      console.log(JSON.stringify(timesheetSnapshot));\n      const timePeriodsToAdd = [];\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timePeriodsToAdd = [...timePeriodsToAdd, timesheetSnapshot.val()[key].timesheetTimePeriod]; // eslint-disable-next-line no-useless-return\n\n        return;\n      }); // handleAddSubmissionTimePeriods()\n\n      this.setState({\n        timesheets: timesheetArr.reverse()\n      });\n    });\n  }\n\n  renderTimesheetMessage() {\n    const timesheets = this.state.timesheets;\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, timesheets.length);\n  }\n\n  renderTimesheetsTableData() {\n    const _this$props2 = this.props,\n          employee = _this$props2.employee,\n          handleEmployeeIdSubmissionTimePeriodsMap = _this$props2.handleEmployeeIdSubmissionTimePeriodsMap,\n          handleAddSubmissionTimePeriods = _this$props2.handleAddSubmissionTimePeriods;\n    const timesheets = this.state.timesheets;\n    return timesheets.map(timesheet => {\n      return React.createElement(AdminTimesheetTileTableCell, {\n        key: timesheet.timestamp,\n        timesheet: timesheet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    });\n  }\n\n  renderHoverTable() {\n    const timesheets = this.state.timesheets;\n    if (timesheets.length === 0) return null;\n    return React.createElement(\"table\", {\n      style: Styles.timesheetTileTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      style: Styles.timesheetTileTableBodyHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Time Period\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submittal Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      style: Styles.timesheetTileTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderTimesheetsTableData()));\n  }\n\n  render() {\n    const employee = this.props.employee;\n    const hover = this.state.hover;\n    return React.createElement(\"div\", {\n      style: hover ? Styles.adminTimesheetTileHover : Styles.adminTimesheetTile,\n      onMouseEnter: () => this.setState({\n        hover: true\n      }),\n      onMouseLeave: () => this.setState({\n        hover: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, employee.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, employee.email), this.renderTimesheetMessage(), hover && this.renderHoverTable());\n  }\n\n}\n\nAdminTimesheetTile.propTypes = {\n  employee: PropTypes.object.isRequired,\n  handleEmployeeIdSubmissionTimePeriodsMap: PropTypes.func.isRequired,\n  handleAddSubmissionTimePeriods: PropTypes.func.isRequired\n};\nexport default AdminTimesheetTile;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/Admin/AdminTimesheetTile/AdminTimesheetTile.js"],"names":["React","Component","PropTypes","Styles","firebase","AdminTimesheetTileTableCell","AdminTimesheetTile","constructor","props","state","timesheets","hover","componentDidMount","handleEmployeeIdSubmissionTimePeriodsMap","handleAddSubmissionTimePeriods","employee","timesheetArr","database","ref","uid","once","then","timesheetSnapshot","val","Object","keys","map","key","console","log","JSON","stringify","timePeriodsToAdd","timesheetTimePeriod","setState","reverse","renderTimesheetMessage","length","renderTimesheetsTableData","timesheet","timestamp","renderHoverTable","timesheetTileTable","timesheetTileTableBodyHead","timesheetTileTableBody","render","adminTimesheetTileHover","adminTimesheetTile","name","email","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Styles from '../../DashboardLayoutStyles'\nimport firebase from '../../../../Firebase/index'\nimport AdminTimesheetTileTableCell from './AdminTimesheetTileTableCell'\n\nclass AdminTimesheetTile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheets: [],\n      hover: false\n    }\n  }\n\n  componentDidMount() {\n    const { handleEmployeeIdSubmissionTimePeriodsMap, handleAddSubmissionTimePeriods } = this.props\n    const { employee } = this.props\n    let timesheetArr = []\n    firebase.database().ref(`/user-timesheets/${employee.uid}`).once('value').then(timesheetSnapshot => {\n      if (!timesheetSnapshot.val()) return\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timesheetArr = [...timesheetArr, timesheetSnapshot.val()[key]]\n        // eslint-disable-next-line no-useless-return\n        return\n      })\n      console.log(JSON.stringify(timesheetSnapshot))\n      const timePeriodsToAdd = []\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timePeriodsToAdd = [...timePeriodsToAdd, timesheetSnapshot.val()[key].timesheetTimePeriod]\n        // eslint-disable-next-line no-useless-return\n        return\n      })\n      // handleAddSubmissionTimePeriods()\n      this.setState({ timesheets: timesheetArr.reverse() })\n    })\n  }\n\n  renderTimesheetMessage() {\n    const { timesheets } = this.state\n    return (\n      <p>{timesheets.length}</p>\n    )\n  }\n\n  renderTimesheetsTableData() {\n    const { employee, handleEmployeeIdSubmissionTimePeriodsMap, handleAddSubmissionTimePeriods } = this.props\n    const { timesheets } = this.state\n    return timesheets.map(timesheet => {\n      return <AdminTimesheetTileTableCell key={timesheet.timestamp} timesheet={timesheet} />\n    })\n  }\n\n  renderHoverTable() {\n    const { timesheets } = this.state\n    if (timesheets.length === 0) return null\n    return (\n      <table style={Styles.timesheetTileTable}>\n        <thead style={Styles.timesheetTileTableBodyHead}>\n          <tr>\n            <td>Time Period</td>\n            <td>Submittal Date</td>\n            <td />\n          </tr>\n        </thead>\n        <tbody style={Styles.timesheetTileTableBody}>\n          {this.renderTimesheetsTableData()}\n        </tbody>\n      </table>\n    )\n  }\n\n  render() {\n    const { employee } = this.props\n    const { hover } = this.state\n    return (\n      <div\n        style={hover ? Styles.adminTimesheetTileHover : Styles.adminTimesheetTile}\n        onMouseEnter={() => this.setState({ hover: true })}\n        onMouseLeave={() => this.setState({ hover: false })}\n      >\n        <p>{employee.name}</p>\n        <p>{employee.email}</p>\n        {this.renderTimesheetMessage()}\n        { hover && this.renderHoverTable() }\n      </div>\n    )\n  }\n}\n\nAdminTimesheetTile.propTypes = {\n  employee: PropTypes.object.isRequired,\n  handleEmployeeIdSubmissionTimePeriodsMap: PropTypes.func.isRequired,\n  handleAddSubmissionTimePeriods: PropTypes.func.isRequired\n}\n\nexport default AdminTimesheetTile\n"]},"metadata":{},"sourceType":"module"}