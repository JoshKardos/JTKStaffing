{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\n\nconst setError = error => dispatch => {\n  dispatch({\n    type: ErrorTypes.SET_ERROR,\n    payload: error\n  });\n};\n\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), mapTo(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    console.log('here');\n    return {\n      type: ''\n    };\n  }).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"error\");\n      return setError(errorMessage);\n    }\n  });\n  console.log(\"DOWN HEE\");\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","dispatch","map","mapTo","TYPES","UserTypes","ErrorTypes","firebase","setError","error","type","SET_ERROR","payload","signUpEpic","action$","pipe","SIGN_UP","action","email","password","auth","createUserWithEmailAndPassword","then","console","log","catch","errorCode","code","errorMessage","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAWR,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEJ,UAAU,CAACK,SAAnB;AAA8BC,IAAAA,OAAO,EAAEH;AAAvC,GAAD,CAAR;AACD,CAFD;;AAIA,OAAO,MAAMI,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCf,MAAM,CAACK,SAAS,CAACW,OAAX,CAD6B,EAEnCb,KAAK,CAACc,MAAM,IAAI;AAAA,QACNC,KADM,GACID,MAAM,CAACL,OADX,CACNM,KADM;AAAA,QAENC,QAFM,GAEOF,MAAM,CAACL,OAFd,CAENO,QAFM,EAGd;;AACAZ,EAAAA,QAAQ,CAACa,IAAT,GAAgBC,8BAAhB,CAA+CH,KAA/C,EAAsDC,QAAtD,EAAgEG,IAAhE,CAAqE,MAAM;AACzEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAEd,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAHD,EAGGe,KAHH,CAGUhB,KAAD,IAAW;AAClB;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMiB,SAAS,GAAGjB,KAAK,CAACkB,IAAxB;AACA,YAAMC,YAAY,GAAGnB,KAAK,CAACoB,OAA3B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAOhB,QAAQ,CAACoB,YAAD,CAAf;AACD;AACF,GAXD;AAYAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAO;AAAEd,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAlBI,CAF8B,CAA9B;AAuBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nconst setError = (error) => dispatch => {\n  dispatch({ type: ErrorTypes.SET_ERROR, payload: error })\n}\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  mapTo(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      console.log('here')\n      return { type: '' }\n    }).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code\n        const errorMessage = error.message\n        console.log(\"error\")\n        return setError(errorMessage)\n      }\n    })\n    console.log(\"DOWN HEE\")\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}