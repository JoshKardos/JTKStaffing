{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from 'redux-create-reducer';\nexport const TYPES = {\n  SIGN_UP: 'SIGN_UP',\n  SET_USER_DATA: 'SET_USER_DATA',\n  SET_SIGN_UP_ERROR: 'SET_SIGN_UP_ERROR'\n};\nconst initialState = {\n  id: '',\n  name: '',\n  company: '',\n  email: '',\n  error: ''\n}; // const createUserStateObject = (obj) => {\n// }\n// export const setUserData = (state = initialState, action) => (\n//   { type: TYPES.SET_USER_DATA, ...state, ...createUserStateObject(action.data) }\n// )\n\nexport const setSignUpError = errorDescription => {\n  console.log(errorDescription);\n  return {\n    type: TYPES.SET_SIGN_UP_ERROR,\n    error: errorDescription\n  };\n};\nexport const signUp = (name, email, password, company) => ({\n  type: TYPES.SIGN_UP,\n  payload: {\n    name,\n    email,\n    password,\n    company\n  }\n});\nconst userReducer = createReducer(initialState, {\n  SIGN_UP: signUp,\n  SET_SIGN_UP_ERROR: setSignUpError\n});\nexport const reducers = combineReducers({\n  userReducer\n});","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Redux/UserRedux.js"],"names":["combineReducers","createReducer","TYPES","SIGN_UP","SET_USER_DATA","SET_SIGN_UP_ERROR","initialState","id","name","company","email","error","setSignUpError","errorDescription","console","log","type","signUp","password","payload","userReducer","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,SADU;AAEnBC,EAAAA,aAAa,EAAE,eAFI;AAGnBC,EAAAA,iBAAiB,EAAE;AAHA,CAAd;AAMP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB,C,CAQA;AAEA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAIC,gBAAD,IAAsB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACA,SAAO;AAAEG,IAAAA,IAAI,EAAEd,KAAK,CAACG,iBAAd;AAAiCM,IAAAA,KAAK,EAAEE;AAAxC,GAAP;AACD,CAHM;AAKP,OAAO,MAAMI,MAAM,GAAG,CAACT,IAAD,EAAOE,KAAP,EAAcQ,QAAd,EAAwBT,OAAxB,MACpB;AAAEO,EAAAA,IAAI,EAAEd,KAAK,CAACC,OAAd;AAAuBgB,EAAAA,OAAO,EAAE;AAAEX,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeQ,IAAAA,QAAf;AAAyBT,IAAAA;AAAzB;AAAhC,CADoB,CAAf;AAIP,MAAMW,WAAW,GAAGnB,aAAa,CAACK,YAAD,EAAe;AAC9CH,EAAAA,OAAO,EAAEc,MADqC;AAE9CZ,EAAAA,iBAAiB,EAAEO;AAF2B,CAAf,CAAjC;AAKA,OAAO,MAAMS,QAAQ,GAAGrB,eAAe,CAAC;AACtCoB,EAAAA;AADsC,CAAD,CAAhC","sourcesContent":["import { combineReducers } from 'redux'\nimport { createReducer } from 'redux-create-reducer';\n\nexport const TYPES = {\n  SIGN_UP: 'SIGN_UP',\n  SET_USER_DATA: 'SET_USER_DATA',\n  SET_SIGN_UP_ERROR: 'SET_SIGN_UP_ERROR'\n}\n\nconst initialState = {\n  id: '',\n  name: '',\n  company: '',\n  email: '',\n  error: ''\n}\n\n// const createUserStateObject = (obj) => {\n\n// }\n\n// export const setUserData = (state = initialState, action) => (\n//   { type: TYPES.SET_USER_DATA, ...state, ...createUserStateObject(action.data) }\n// )\n\nexport const setSignUpError = (errorDescription) => {\n  console.log(errorDescription)\n  return { type: TYPES.SET_SIGN_UP_ERROR, error: errorDescription }\n}\n\nexport const signUp = (name, email, password, company) => (\n  { type: TYPES.SIGN_UP, payload: { name, email, password, company } }\n)\n\nconst userReducer = createReducer(initialState, {\n  SIGN_UP: signUp,\n  SET_SIGN_UP_ERROR: setSignUpError\n})\n\nexport const reducers = combineReducers({\n  userReducer\n})\n"]},"metadata":{},"sourceType":"module"}