{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), // delay(5000), // Asynchronously wait 1000ms then continue\n// mapTo(setError(\"EROR\"))\nmapTo(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n  //   // Handle Errors here.\n  //   if (error !== null) {\n  //     const errorCode = error.code\n  //     const errorMessage = error.message\n  //     return { type: '' }\n  //   }\n  //   return { type: '' }\n  // })\n\n  {\n    type: '';\n  }\n}) // mapTo(response => setError(\"ERROR\"))\n);\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","mapTo","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCV,MAAM,CAACI,SAAS,CAACO,OAAX,CAD6B,EAEnC;AACA;AACAT,KAAK,CAACU,MAAM,IAAI;AAAA,QACNC,KADM,GACID,MAAM,CAACE,OADX,CACND,KADM;AAAA,QAENE,QAFM,GAEOH,MAAM,CAACE,OAFd,CAENC,QAFM,EAGd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAEC,IAAAA,IAAI,EAAE;AAAI;AACb,CAbI,CAJ8B,CAkBnC;AAlBmC,CAA9B;AAqBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  // delay(5000), // Asynchronously wait 1000ms then continue\n  // mapTo(setError(\"EROR\"))\n  mapTo(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n    //   // Handle Errors here.\n    //   if (error !== null) {\n    //     const errorCode = error.code\n    //     const errorMessage = error.message\n    //     return { type: '' }\n    //   }\n    //   return { type: '' }\n    // })\n    { type: '' }\n  })\n  // mapTo(response => setError(\"ERROR\"))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}