{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const uploadTimesheetEpic = (action$, state$) => action$.pipe(ofType(DashboardTypes.UPLOAD_TIMESHEET), map(action => {\n  const storageRef = firebase.storage().ref().child(state$.value.UserReducers.userReducer.id);\n  return storageRef.put(action.payload).then(snapshot => {\n    return {\n      type: ''\n    };\n  });\n}));\nexport const setTimesheetFileError = action$ => action$.pipe(ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/DashboardEpics.js"],"names":["ofType","map","switchMap","TYPES","DashboardTypes","ErrorTypes","firebase","uploadTimesheetEpic","action$","state$","pipe","UPLOAD_TIMESHEET","action","storageRef","storage","ref","child","value","UserReducers","userReducer","id","put","payload","then","snapshot","type","setTimesheetFileError","SET_TIMESHEET_FILE_ERROR","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AACA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,yBAAxC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqBD,OAAO,CAACE,IAAR,CACtDV,MAAM,CAACI,cAAc,CAACO,gBAAhB,CADgD,EAEtDV,GAAG,CAACW,MAAM,IAAI;AACZ,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,OAAT,GAAmBC,GAAnB,GAAyBC,KAAzB,CAA+BP,MAAM,CAACQ,KAAP,CAAaC,YAAb,CAA0BC,WAA1B,CAAsCC,EAArE,CAAnB;AACA,SAAOP,UAAU,CAACQ,GAAX,CAAeT,MAAM,CAACU,OAAtB,EAA+BC,IAA/B,CAAqCC,QAAD,IAAc;AACvD,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAFM,CAAP;AAGD,CALE,CAFmD,CAAjD;AAUP,OAAO,MAAMC,qBAAqB,GAAIlB,OAAD,IAAaA,OAAO,CAACE,IAAR,CAChDV,MAAM,CAACI,cAAc,CAACuB,wBAAhB,CAD0C,EAEhD1B,GAAG,CAAEW,MAAD,KAAa;AAAEa,EAAAA,IAAI,EAAEpB,UAAU,CAACuB,SAAnB;AAA8BN,EAAAA,OAAO,EAAEV,MAAM,CAACU;AAA9C,CAAb,CAAD,CAF6C,CAA3C;AAKP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const uploadTimesheetEpic = (action$, state$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_TIMESHEET),\n  map(action => {\n    const storageRef = firebase.storage().ref().child(state$.value.UserReducers.userReducer.id)\n    return storageRef.put(action.payload).then((snapshot) => {\n      return { type: '' }\n    })\n  })\n)\n\nexport const setTimesheetFileError = (action$) => action$.pipe(\n  ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}