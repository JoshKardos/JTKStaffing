{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { LAYOUTS } from '../Redux/LayoutRedux';\nimport MenuBar from '../Components/MenuBar/MenuBar';\nimport LogInLayout from './LogIn/LogInLayout';\nimport SignUpLayout from './SignUp/SignUpLayout';\nimport { signUp } from '../Redux/UserRedux';\nimport { resetError } from '../Redux/ErrorRedux';\nimport GenericErrorModal from './GenericErrorModal';\n\nclass MainScreen extends Component {\n  render() {\n    const _this$props = this.props,\n          currentLayout = _this$props.currentLayout,\n          signUp = _this$props.signUp,\n          errorDescription = _this$props.errorDescription,\n          resetError = _this$props.resetError,\n          signUpLoading = _this$props.signUpLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), errorDescription ? React.createElement(GenericErrorModal, {\n      errorDescription: errorDescription,\n      resetError: resetError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }) : null, currentLayout === LAYOUTS.LOGIN && React.createElement(LogInLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), currentLayout === LAYOUTS.SIGNUP && React.createElement(SignUpLayout, {\n      signUp: signUp,\n      isLoading: signUpLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nMainScreen.propTypes = {\n  currentLayout: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: (name, email, password, company) => dispatch(signUp(name, email, password, company)),\n  resetError: () => dispatch(resetError())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen); // export default MainScreen","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js"],"names":["React","Component","PropTypes","connect","LAYOUTS","MenuBar","LogInLayout","SignUpLayout","signUp","resetError","GenericErrorModal","MainScreen","render","props","currentLayout","errorDescription","signUpLoading","LOGIN","SIGNUP","propTypes","string","isRequired","func","bool","mapStateToProps","state","LayoutReducers","layoutReducer","UserReducers","userReducer","ErrorReducers","errorReducer","mapDispatchToProps","dispatch","name","email","password","company"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AACjCW,EAAAA,MAAM,GAAG;AAAA,wBACwE,KAAKC,KAD7E;AAAA,UACCC,aADD,eACCA,aADD;AAAA,UACgBN,MADhB,eACgBA,MADhB;AAAA,UACwBO,gBADxB,eACwBA,gBADxB;AAAA,UAC0CN,UAD1C,eAC0CA,UAD1C;AAAA,UACsDO,aADtD,eACsDA,aADtD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEID,gBAAgB,GAChB,oBAAC,iBAAD;AAAmB,MAAA,gBAAgB,EAAEA,gBAArC;AAAuD,MAAA,UAAU,EAAEN,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,GACoE,IAHxF,EAIIK,aAAa,KAAKV,OAAO,CAACa,KAA1B,IAAmC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvC,EAKIH,aAAa,KAAKV,OAAO,CAACc,MAA1B,IAAoC,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEV,MAAtB;AAA8B,MAAA,SAAS,EAAEQ,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxC,CADF;AASD;;AAZgC;;AAenCL,UAAU,CAACQ,SAAX,GAAuB;AACrBL,EAAAA,aAAa,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UADX;AAErBb,EAAAA,MAAM,EAAEN,SAAS,CAACoB,IAAV,CAAeD,UAFF;AAGrBN,EAAAA,gBAAgB,EAAEb,SAAS,CAACkB,MAAV,CAAiBC,UAHd;AAIrBZ,EAAAA,UAAU,EAAEP,SAAS,CAACoB,IAAV,CAAeD,UAJN;AAKrBL,EAAAA,aAAa,EAAEd,SAAS,CAACqB,IAAV,CAAeF;AALT,CAAvB;;AAQA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,aAAa,EAAEW,KAAK,CAACC,cAAN,CAAqBC,aAArB,CAAmCb,aADlB;AAEhCE,EAAAA,aAAa,EAAES,KAAK,CAACG,YAAN,CAAmBC,WAAnB,CAA+Bb,aAFd;AAGhCD,EAAAA,gBAAgB,EAAEU,KAAK,CAACK,aAAN,CAAoBC,YAApB,CAAiChB;AAHnB,CAAL,CAA7B;;AAMA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,MAAM,EAAE,CAAC0B,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,OAAxB,KAAoCJ,QAAQ,CAACzB,MAAM,CAAC0B,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,OAAxB,CAAP,CADd;AAEtC5B,EAAAA,UAAU,EAAE,MAAMwB,QAAQ,CAACxB,UAAU,EAAX;AAFY,CAAL,CAAnC;;AAKA,eAAeN,OAAO,CAACqB,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CrB,UAA7C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { LAYOUTS } from '../Redux/LayoutRedux'\nimport MenuBar from '../Components/MenuBar/MenuBar'\nimport LogInLayout from './LogIn/LogInLayout'\nimport SignUpLayout from './SignUp/SignUpLayout'\nimport { signUp } from '../Redux/UserRedux'\nimport { resetError } from '../Redux/ErrorRedux'\nimport GenericErrorModal from './GenericErrorModal'\n\nclass MainScreen extends Component {\n  render() {\n    const { currentLayout, signUp, errorDescription, resetError, signUpLoading } = this.props\n    return (\n      <div>\n        <MenuBar />\n        { errorDescription ?\n          <GenericErrorModal errorDescription={errorDescription} resetError={resetError} /> : null}\n        { currentLayout === LAYOUTS.LOGIN && <LogInLayout /> }\n        { currentLayout === LAYOUTS.SIGNUP && <SignUpLayout signUp={signUp} isLoading={signUpLoading} /> }\n      </div>\n    )\n  }\n}\n\nMainScreen.propTypes = {\n  currentLayout: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription\n})\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: (name, email, password, company) => dispatch(signUp(name, email, password, company)),\n  resetError: () => dispatch(resetError())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen)\n// export default MainScreen\n"]},"metadata":{},"sourceType":"module"}