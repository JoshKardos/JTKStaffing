{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), // delay(5000), // Asynchronously wait 1000ms then continue\nmap(() => {\n  // const { email } = action$.payload\n  // const { password } = action$\n  console.log(action$.payload); // console.log(email)\n  // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n  //   // Handle Errors here.\n  //   if (error !== null) {\n  //     const errorCode = error.code;\n  //     const errorMessage = error.message;\n  //   }\n  //   // ...\n  // });\n\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","firebase","signUpEpic","action$","pipe","SIGN_UP","console","log","payload","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCP,MAAM,CAACG,SAAS,CAACK,OAAX,CAD6B,EAEnC;AACAP,GAAG,CAAC,MAAM;AACR;AACA;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,OAApB,EAHQ,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAdE,CAHgC,CAA9B;AAoBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  // delay(5000), // Asynchronously wait 1000ms then continue\n  map(() => {\n    // const { email } = action$.payload\n    // const { password } = action$\n    console.log(action$.payload)\n    // console.log(email)\n    // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n    //   // Handle Errors here.\n    //   if (error !== null) {\n    //     const errorCode = error.code;\n    //     const errorMessage = error.message;\n    //   }\n    //   // ...\n    // });\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}