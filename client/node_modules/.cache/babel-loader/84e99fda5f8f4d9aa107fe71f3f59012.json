{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport firebase from '../Firebase/index';\nimport { LAYOUTS } from '../Redux/LayoutRedux';\nimport MenuBar from '../Components/MenuBar/MenuBar';\nimport LoginLayout from './LogIn/LoginLayout';\nimport SignUpLayout from './SignUp/SignUpLayout';\nimport DashboardLayout from './Dashboard/DashboardLayout';\nimport HomeLayout from './Home/HomeLayout';\nimport { uploadTimesheet, setTimesheetFileError, timesheetUploadError, saveToDatabase, timesheetUploadStart } from '../Redux/DashboardRedux';\nimport { signUpWorker, signUpAdmin, setSignUpError, fetchUserData, login, setLoginError, userLoggedIn, adminLoggedIn } from '../Redux/UserRedux';\nimport { resetError } from '../Redux/ErrorRedux';\nimport GenericErrorModal from './GenericErrorModal';\nimport Styles from './MainScreenStyles.js';\n\nclass MainScreen extends Component {\n  componentDidMount() {\n    const fetchUserData = this.props.fetchUserData;\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        const action = {\n          payload: user.uid\n        }; // User is signed in.\n\n        fetchUserData(action);\n      } else {// No user is signed in.\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentLayout = _this$props.currentLayout,\n          signUpAdmin = _this$props.signUpAdmin,\n          errorDescription = _this$props.errorDescription,\n          resetError = _this$props.resetError,\n          signUpLoading = _this$props.signUpLoading,\n          setSignUpError = _this$props.setSignUpError,\n          login = _this$props.login,\n          loginLoading = _this$props.loginLoading,\n          setLoginError = _this$props.setLoginError,\n          userState = _this$props.userState,\n          setTimesheetFileError = _this$props.setTimesheetFileError,\n          uploadTimesheet = _this$props.uploadTimesheet,\n          timesheetUploadStart = _this$props.timesheetUploadStart,\n          timesheetUploadError = _this$props.timesheetUploadError,\n          saveToDatabase = _this$props.saveToDatabase,\n          timesheetUploading = _this$props.timesheetUploading,\n          employees = _this$props.employees,\n          signUpWorker = _this$props.signUpWorker,\n          timesheets = _this$props.timesheets;\n    const loggedIn = userLoggedIn(userState);\n    return React.createElement(\"div\", {\n      style: Styles.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), errorDescription ? React.createElement(GenericErrorModal, {\n      errorDescription: errorDescription,\n      resetError: resetError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null, !loggedIn && currentLayout === LAYOUTS.HOME && React.createElement(HomeLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), loggedIn && currentLayout === LAYOUTS.HOME && React.createElement(DashboardLayout, {\n      recentlySubmittedTimesheets: timesheets,\n      isLoading: loginLoading,\n      setSignUpError: setSignUpError,\n      signUpWorker: signUpWorker,\n      setTimesheetFileError: setTimesheetFileError,\n      isAdmin: adminLoggedIn(userState),\n      uploadTimesheet: uploadTimesheet,\n      userState: userState,\n      timesheetUploadStart: timesheetUploadStart,\n      timesheetUploadError: timesheetUploadError,\n      saveToDatabase: saveToDatabase,\n      timesheetUploading: timesheetUploading,\n      employees: employees,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), currentLayout === LAYOUTS.LOGIN && React.createElement(LoginLayout, {\n      login: login,\n      isLoading: loginLoading,\n      setLoginError: setLoginError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), currentLayout === LAYOUTS.SIGNUP && React.createElement(SignUpLayout, {\n      signUpAdmin: signUpAdmin,\n      isLoading: signUpLoading,\n      setSignUpError: setSignUpError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: Styles.Footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Created by Josh Kardos\")));\n  }\n\n}\n\nMainScreen.propTypes = {\n  timesheets: PropTypes.array.isRequired,\n  employees: PropTypes.array.isRequired,\n  currentLayout: PropTypes.string.isRequired,\n  signUpAdmin: PropTypes.func.isRequired,\n  signUpWorker: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  setLoginError: PropTypes.func.isRequired,\n  fetchUserData: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginLoading: PropTypes.bool.isRequired,\n  userState: PropTypes.object.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  uploadTimesheet: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  timesheets: state.UserReducers.userReducer.timesheets,\n  employees: state.UserReducers.userReducer.employees,\n  userState: state.UserReducers.userReducer,\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  loginLoading: state.UserReducers.userReducer.loginLoading,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription,\n  timesheetUploading: state.DashboardReducers.dashboardReducer.uploading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(login(email, password)),\n  signUpAdmin: (name, email, password, company) => dispatch(signUpAdmin(name, email, password, company)),\n  signUpWorker: (name, email, password) => dispatch(signUpWorker(name, email, password)),\n  setSignUpError: error => dispatch(setSignUpError(error)),\n  setLoginError: error => dispatch(setLoginError(error)),\n  setTimesheetFileError: error => dispatch(setTimesheetFileError(error)),\n  resetError: () => dispatch(resetError()),\n  fetchUserData: userId => dispatch(fetchUserData(userId)),\n  uploadTimesheet: file => dispatch(uploadTimesheet(file)),\n  saveToDatabase: (timesheetTimePeriod, filepath, id, userId, timestamp) => dispatch(saveToDatabase(timesheetTimePeriod, filepath, id, userId, timestamp)),\n  timesheetUploadError: () => dispatch(timesheetUploadError()),\n  timesheetUploadStart: () => dispatch(timesheetUploadStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen); // export default MainScreen","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js"],"names":["React","Component","PropTypes","connect","firebase","LAYOUTS","MenuBar","LoginLayout","SignUpLayout","DashboardLayout","HomeLayout","uploadTimesheet","setTimesheetFileError","timesheetUploadError","saveToDatabase","timesheetUploadStart","signUpWorker","signUpAdmin","setSignUpError","fetchUserData","login","setLoginError","userLoggedIn","adminLoggedIn","resetError","GenericErrorModal","Styles","MainScreen","componentDidMount","props","auth","onAuthStateChanged","user","action","payload","uid","render","currentLayout","errorDescription","signUpLoading","loginLoading","userState","timesheetUploading","employees","timesheets","loggedIn","App","HOME","LOGIN","SIGNUP","Footer","propTypes","array","isRequired","string","func","bool","object","mapStateToProps","state","UserReducers","userReducer","LayoutReducers","layoutReducer","ErrorReducers","errorReducer","DashboardReducers","dashboardReducer","uploading","mapDispatchToProps","dispatch","email","password","name","company","error","userId","file","timesheetTimePeriod","filepath","id","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport firebase from '../Firebase/index'\nimport { LAYOUTS } from '../Redux/LayoutRedux'\nimport MenuBar from '../Components/MenuBar/MenuBar'\nimport LoginLayout from './LogIn/LoginLayout'\nimport SignUpLayout from './SignUp/SignUpLayout'\nimport DashboardLayout from './Dashboard/DashboardLayout'\nimport HomeLayout from './Home/HomeLayout'\nimport { uploadTimesheet, setTimesheetFileError, timesheetUploadError, saveToDatabase, timesheetUploadStart } from '../Redux/DashboardRedux'\nimport { signUpWorker, signUpAdmin, setSignUpError, fetchUserData, login, setLoginError, userLoggedIn, adminLoggedIn } from '../Redux/UserRedux'\nimport { resetError } from '../Redux/ErrorRedux'\nimport GenericErrorModal from './GenericErrorModal'\nimport Styles from './MainScreenStyles.js'\n\nclass MainScreen extends Component {\n  componentDidMount() {\n    const { fetchUserData } = this.props\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const action = {\n          payload: user.uid\n        }\n        // User is signed in.\n        fetchUserData(action)\n      } else {\n        // No user is signed in.\n      }\n    })\n  }\n\n  render() {\n    const { currentLayout, signUpAdmin, errorDescription, resetError, signUpLoading,\n      setSignUpError, login, loginLoading, setLoginError, userState, setTimesheetFileError,\n      uploadTimesheet, timesheetUploadStart, timesheetUploadError, saveToDatabase, timesheetUploading,\n      employees, signUpWorker, timesheets\n    } = this.props\n    const loggedIn = userLoggedIn(userState)\n\n    return (\n      <div style={Styles.App}>\n        <MenuBar />\n        { errorDescription ?\n          <GenericErrorModal errorDescription={errorDescription} resetError={resetError} /> : null }\n        { !loggedIn && currentLayout === LAYOUTS.HOME && <HomeLayout /> }\n        { loggedIn && currentLayout === LAYOUTS.HOME && <DashboardLayout recentlySubmittedTimesheets={timesheets} isLoading={loginLoading} setSignUpError={setSignUpError} signUpWorker={signUpWorker} setTimesheetFileError={setTimesheetFileError} isAdmin={adminLoggedIn(userState)} uploadTimesheet={uploadTimesheet} userState={userState} timesheetUploadStart={timesheetUploadStart} timesheetUploadError={timesheetUploadError} saveToDatabase={saveToDatabase} timesheetUploading={timesheetUploading} employees={employees} /> }\n        { currentLayout === LAYOUTS.LOGIN && <LoginLayout login={login} isLoading={loginLoading} setLoginError={setLoginError} /> }\n        { currentLayout === LAYOUTS.SIGNUP && <SignUpLayout signUpAdmin={signUpAdmin} isLoading={signUpLoading} setSignUpError={setSignUpError} /> }\n        <div style={Styles.Footer}>\n          <p>Created by Josh Kardos</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nMainScreen.propTypes = {\n  timesheets: PropTypes.array.isRequired,\n  employees: PropTypes.array.isRequired,\n  currentLayout: PropTypes.string.isRequired,\n  signUpAdmin: PropTypes.func.isRequired,\n  signUpWorker: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  setLoginError: PropTypes.func.isRequired,\n  fetchUserData: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginLoading: PropTypes.bool.isRequired,\n  userState: PropTypes.object.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  uploadTimesheet: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n  timesheets: state.UserReducers.userReducer.timesheets,\n  employees: state.UserReducers.userReducer.employees,\n  userState: state.UserReducers.userReducer,\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  loginLoading: state.UserReducers.userReducer.loginLoading,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription,\n  timesheetUploading: state.DashboardReducers.dashboardReducer.uploading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(login(email, password)),\n  signUpAdmin: (name, email, password, company) => dispatch(signUpAdmin(name, email, password, company)),\n  signUpWorker: (name, email, password) => dispatch(signUpWorker(name, email, password)),\n  setSignUpError: (error) => dispatch(setSignUpError(error)),\n  setLoginError: (error) => dispatch(setLoginError(error)),\n  setTimesheetFileError: (error) => dispatch(setTimesheetFileError(error)),\n  resetError: () => dispatch(resetError()),\n  fetchUserData: (userId) => dispatch(fetchUserData(userId)),\n  uploadTimesheet: (file) => dispatch(uploadTimesheet(file)),\n  saveToDatabase: (timesheetTimePeriod, filepath, id, userId, timestamp) => dispatch(saveToDatabase(timesheetTimePeriod, filepath, id, userId, timestamp)),\n  timesheetUploadError: () => dispatch(timesheetUploadError()),\n  timesheetUploadStart: () => dispatch(timesheetUploadStart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen)\n// export default MainScreen\n"]},"metadata":{},"sourceType":"module"}