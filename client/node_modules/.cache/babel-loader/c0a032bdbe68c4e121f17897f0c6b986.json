{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { switchMap, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), switchMap(action => {\n  const email = action.payload.email;\n  const password = action.payload.password;\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    // success\n    // change this return\n    return {\n      type: UserTypes.START_SIGN_UP_LOADING\n    };\n  }).catch(error => {\n    // error\n    // const errorCode = error.code\n    const errorMessage = error.message;\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n}));\nexport const setSignUpErrorEpic = action$ => action$.pipe( // ofType(UserTypes.SET_SIGN_UP_ERROR),\nmapTo(action => {\n  console.log(\"HERE\");\n  console.log(action);\n  return {\n    type: 'HELLO'\n  };\n}));\nexport const startSignUpLoadingEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), mapTo({\n  type: UserTypes.START_SIGN_UP_LOADING\n}));\nexport const stopSignUpLoadingEpic = action$ => action$.pipe(ofType(ErrorTypes.SET_ERROR), // check for sign up loading state\nmapTo({\n  type: UserTypes.STOP_SIGN_UP_LOADING\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","switchMap","mapTo","TYPES","UserTypes","ErrorTypes","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","auth","createUserWithEmailAndPassword","then","type","START_SIGN_UP_LOADING","catch","error","errorMessage","message","SET_ERROR","setSignUpErrorEpic","console","log","startSignUpLoadingEpic","stopSignUpLoadingEpic","STOP_SIGN_UP_LOADING"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,gBAAjC;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCT,MAAM,CAACI,SAAS,CAACM,OAAX,CAD6B,EAEnCT,SAAS,CAACU,MAAM,IAAI;AAAA,QACVC,KADU,GACAD,MAAM,CAACE,OADP,CACVD,KADU;AAAA,QAEVE,QAFU,GAEGH,MAAM,CAACE,OAFV,CAEVC,QAFU;AAGlB,SAAOR,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,EAAgEG,IAAhE,CAAqE,MAAM;AAChF;AACA;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAEd,SAAS,CAACe;AAAlB,KAAP;AACD,GAJM,EAIJC,KAJI,CAIGC,KAAD,IAAW;AAClB;AACA;AACA,UAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACA,WAAO;AAAEL,MAAAA,IAAI,EAAEb,UAAU,CAACmB,SAAnB;AAA8BX,MAAAA,OAAO,EAAES;AAAvC,KAAP;AACD,GATM,CAAP;AAUD,CAbQ,CAF0B,CAA9B;AAkBP,OAAO,MAAMG,kBAAkB,GAAGjB,OAAO,IAAIA,OAAO,CAACC,IAAR,EAC3C;AACAP,KAAK,CAAES,MAAD,IAAY;AAChBe,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,SAAO;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAJI,CAFsC,CAAtC;AASP,OAAO,MAAMU,sBAAsB,GAAGpB,OAAO,IAAIA,OAAO,CAACC,IAAR,CAC/CT,MAAM,CAACI,SAAS,CAACM,OAAX,CADyC,EAE/CR,KAAK,CAAC;AAAEgB,EAAAA,IAAI,EAAEd,SAAS,CAACe;AAAlB,CAAD,CAF0C,CAA1C;AAKP,OAAO,MAAMU,qBAAqB,GAAGrB,OAAO,IAAIA,OAAO,CAACC,IAAR,CAC9CT,MAAM,CAACK,UAAU,CAACmB,SAAZ,CADwC,EAChB;AAC9BtB,KAAK,CAAC;AAAEgB,EAAAA,IAAI,EAAEd,SAAS,CAAC0B;AAAlB,CAAD,CAFyC,CAAzC;AAKP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { switchMap, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  switchMap(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      // success\n      // change this return\n      return { type: UserTypes.START_SIGN_UP_LOADING }\n    }).catch((error) => {\n      // error\n      // const errorCode = error.code\n      const errorMessage = error.message\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n  })\n)\n\nexport const setSignUpErrorEpic = action$ => action$.pipe(\n  // ofType(UserTypes.SET_SIGN_UP_ERROR),\n  mapTo((action) => {\n    console.log(\"HERE\")\n    console.log(action)\n    return { type: 'HELLO' }\n  })\n)\n\nexport const startSignUpLoadingEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  mapTo({ type: UserTypes.START_SIGN_UP_LOADING })\n)\n\nexport const stopSignUpLoadingEpic = action$ => action$.pipe(\n  ofType(ErrorTypes.SET_ERROR), // check for sign up loading state\n  mapTo({ type: UserTypes.STOP_SIGN_UP_LOADING })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}