{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport firebase from '../Firebase/index';\nimport { LAYOUTS } from '../Redux/LayoutRedux';\nimport MenuBar from '../Components/MenuBar/MenuBar';\nimport LoginLayout from './LogIn/LoginLayout';\nimport SignUpLayout from './SignUp/SignUpLayout';\nimport DashboardLayout from './Dashboard/DashboardLayout';\nimport HomeLayout from './Home/HomeLayout';\nimport { uploadTimesheet, setTimesheetFileError, timesheetUploadError, timesheetUploadSuccess } from '../Redux/DashboardRedux';\nimport { signUp, setSignUpError, fetchUserData, login, setLoginError, userLoggedIn, adminLoggedIn } from '../Redux/UserRedux';\nimport { resetError } from '../Redux/ErrorRedux';\nimport GenericErrorModal from './GenericErrorModal';\nimport './MainScreenStyles.css';\n\nclass MainScreen extends Component {\n  componentDidMount() {\n    const fetchUserData = this.props.fetchUserData;\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        const action = {\n          payload: user.uid\n        }; // User is signed in.\n\n        fetchUserData(action);\n      } else {// No user is signed in.\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentLayout = _this$props.currentLayout,\n          signUp = _this$props.signUp,\n          errorDescription = _this$props.errorDescription,\n          resetError = _this$props.resetError,\n          signUpLoading = _this$props.signUpLoading,\n          setSignUpError = _this$props.setSignUpError,\n          login = _this$props.login,\n          loginLoading = _this$props.loginLoading,\n          setLoginError = _this$props.setLoginError,\n          userState = _this$props.userState,\n          setTimesheetFileError = _this$props.setTimesheetFileError,\n          uploadTimesheet = _this$props.uploadTimesheet,\n          timesheetUploadError = _this$props.timesheetUploadError,\n          timesheetUploadSuccess = _this$props.timesheetUploadSuccess;\n    const loggedIn = userLoggedIn(userState);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(MenuBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), errorDescription ? React.createElement(GenericErrorModal, {\n      errorDescription: errorDescription,\n      resetError: resetError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : null, !loggedIn && currentLayout === LAYOUTS.HOME && React.createElement(HomeLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), loggedIn && currentLayout === LAYOUTS.HOME && React.createElement(DashboardLayout, {\n      setTimesheetFileError: setTimesheetFileError,\n      isAdmin: adminLoggedIn(userState),\n      uploadTimesheet: uploadTimesheet,\n      userState: userState,\n      timesheetUploadStart: timesheetUploadStart,\n      timesheetUploadStop: timesheetUploadStop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), currentLayout === LAYOUTS.LOGIN && React.createElement(LoginLayout, {\n      login: login,\n      isLoading: loginLoading,\n      setLoginError: setLoginError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), currentLayout === LAYOUTS.SIGNUP && React.createElement(SignUpLayout, {\n      signUp: signUp,\n      isLoading: signUpLoading,\n      setSignUpError: setSignUpError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ContactTextContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ContactText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Contact us at joshkardos@gmail.com\")));\n  }\n\n}\n\nMainScreen.propTypes = {\n  currentLayout: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  setLoginError: PropTypes.func.isRequired,\n  fetchUserData: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginLoading: PropTypes.bool.isRequired,\n  userState: PropTypes.object.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  uploadTimesheet: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadSuccess: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userState: state.UserReducers.userReducer,\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  loginLoading: state.UserReducers.userReducer.loginLoading,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(login(email, password)),\n  signUp: (name, email, password, company) => dispatch(signUp(name, email, password, company)),\n  setSignUpError: error => dispatch(setSignUpError(error)),\n  setLoginError: error => dispatch(setLoginError(error)),\n  setTimesheetFileError: error => dispatch(setTimesheetFileError(error)),\n  resetError: () => dispatch(resetError()),\n  fetchUserData: userId => dispatch(fetchUserData(userId)),\n  uploadTimesheet: file => dispatch(uploadTimesheet(file)),\n  timesheetUploadSuccess: () => dispatch(timesheetUploadSuccess()),\n  timesheetUploadError: () => dispatch(timesheetUploadError())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen); // export default MainScreen","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/MainScreen.js"],"names":["React","Component","PropTypes","connect","firebase","LAYOUTS","MenuBar","LoginLayout","SignUpLayout","DashboardLayout","HomeLayout","uploadTimesheet","setTimesheetFileError","timesheetUploadError","timesheetUploadSuccess","signUp","setSignUpError","fetchUserData","login","setLoginError","userLoggedIn","adminLoggedIn","resetError","GenericErrorModal","MainScreen","componentDidMount","props","auth","onAuthStateChanged","user","action","payload","uid","render","currentLayout","errorDescription","signUpLoading","loginLoading","userState","loggedIn","HOME","timesheetUploadStart","timesheetUploadStop","LOGIN","SIGNUP","propTypes","string","isRequired","func","bool","object","mapStateToProps","state","UserReducers","userReducer","LayoutReducers","layoutReducer","ErrorReducers","errorReducer","mapDispatchToProps","dispatch","email","password","name","company","error","userId","file"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport firebase from '../Firebase/index'\nimport { LAYOUTS } from '../Redux/LayoutRedux'\nimport MenuBar from '../Components/MenuBar/MenuBar'\nimport LoginLayout from './LogIn/LoginLayout'\nimport SignUpLayout from './SignUp/SignUpLayout'\nimport DashboardLayout from './Dashboard/DashboardLayout'\nimport HomeLayout from './Home/HomeLayout'\nimport { uploadTimesheet, setTimesheetFileError, timesheetUploadError, timesheetUploadSuccess } from '../Redux/DashboardRedux'\nimport { signUp, setSignUpError, fetchUserData, login, setLoginError, userLoggedIn, adminLoggedIn } from '../Redux/UserRedux'\nimport { resetError } from '../Redux/ErrorRedux'\nimport GenericErrorModal from './GenericErrorModal'\nimport './MainScreenStyles.css'\n\nclass MainScreen extends Component {\n  componentDidMount() {\n    const { fetchUserData } = this.props\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const action = {\n          payload: user.uid\n        }\n        // User is signed in.\n        fetchUserData(action)\n      } else {\n        // No user is signed in.\n      }\n    })\n  }\n\n  render() {\n    const { currentLayout, signUp, errorDescription, resetError, signUpLoading,\n      setSignUpError, login, loginLoading, setLoginError, userState, setTimesheetFileError,\n      uploadTimesheet, timesheetUploadError, timesheetUploadSuccess } = this.props\n    const loggedIn = userLoggedIn(userState)\n\n    return (\n      <div>\n        <MenuBar />\n        { errorDescription ?\n          <GenericErrorModal errorDescription={errorDescription} resetError={resetError} /> : null }\n        { !loggedIn && currentLayout === LAYOUTS.HOME && <HomeLayout /> }\n        { loggedIn && currentLayout === LAYOUTS.HOME && <DashboardLayout setTimesheetFileError={setTimesheetFileError} isAdmin={adminLoggedIn(userState)} uploadTimesheet={uploadTimesheet} userState={userState} timesheetUploadStart={timesheetUploadStart} timesheetUploadStop={timesheetUploadStop} /> }\n        { currentLayout === LAYOUTS.LOGIN && <LoginLayout login={login} isLoading={loginLoading} setLoginError={setLoginError} /> }\n        { currentLayout === LAYOUTS.SIGNUP && <SignUpLayout signUp={signUp} isLoading={signUpLoading} setSignUpError={setSignUpError} /> }\n        <div className=\"ContactTextContainer\">\n          <p className=\"ContactText\">Contact us at joshkardos@gmail.com</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nMainScreen.propTypes = {\n  currentLayout: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired,\n  signUpLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  setLoginError: PropTypes.func.isRequired,\n  fetchUserData: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginLoading: PropTypes.bool.isRequired,\n  userState: PropTypes.object.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  uploadTimesheet: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadSuccess: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  userState: state.UserReducers.userReducer,\n  currentLayout: state.LayoutReducers.layoutReducer.currentLayout,\n  loginLoading: state.UserReducers.userReducer.loginLoading,\n  signUpLoading: state.UserReducers.userReducer.signUpLoading,\n  errorDescription: state.ErrorReducers.errorReducer.errorDescription\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(login(email, password)),\n  signUp: (name, email, password, company) => dispatch(signUp(name, email, password, company)),\n  setSignUpError: (error) => dispatch(setSignUpError(error)),\n  setLoginError: (error) => dispatch(setLoginError(error)),\n  setTimesheetFileError: (error) => dispatch(setTimesheetFileError(error)),\n  resetError: () => dispatch(resetError()),\n  fetchUserData: (userId) => dispatch(fetchUserData(userId)),\n  uploadTimesheet: (file) => dispatch(uploadTimesheet(file)),\n  timesheetUploadSuccess: () => dispatch(timesheetUploadSuccess()),\n  timesheetUploadError: () => dispatch(timesheetUploadError())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen)\n// export default MainScreen\n"]},"metadata":{},"sourceType":"module"}