{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/SignUp/SignUpLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../LogIn/LogInLayoutStyles.css';\nimport firebase from '../../Firebase/index';\n\nclass SignUpLayout extends Component {\n  constructor() {\n    super();\n\n    this.dismissError = () => {\n      this.setState({\n        error: ''\n      });\n    };\n\n    this.validateEmail = inputText => {\n      // eslint-disable-next-line no-useless-escape\n      const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (inputText.match(mailformat)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.handleSignUp = () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const setError = this.props.setError;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(() => this.props.navigation.navigate('Profile')).catch(error => {\n        console.log(error);\n        const action = {\n          payload: error\n        };\n        setError(null, payload);\n      });\n    };\n\n    this.handleSubmit = evt => {\n      const _this$state2 = this.state,\n            name = _this$state2.name,\n            email = _this$state2.email,\n            password = _this$state2.password,\n            company = _this$state2.company,\n            passwordConfirm = _this$state2.passwordConfirm;\n      evt.preventDefault();\n\n      if (!name.replace(/\\s+/g, '')) {\n        return this.setState({\n          error: 'Name is required'\n        });\n      }\n\n      if (!email.replace(/\\s+/g, '')) {\n        return this.setState({\n          error: 'Email is required'\n        });\n      }\n\n      if (!company.replace(/\\s+/g, '')) {\n        return this.setState({\n          error: 'Company is required'\n        });\n      }\n\n      if (!password.replace(/\\s+/g, '')) {\n        return this.setState({\n          error: 'Password is required'\n        });\n      }\n\n      if (!passwordConfirm.replace(/\\s+/g, '')) {\n        return this.setState({\n          error: 'Confirm password'\n        });\n      }\n\n      if (password !== passwordConfirm) {\n        return this.setState({\n          error: 'Passwords do not match'\n        });\n      }\n\n      if (!this.validateEmail(email)) {\n        return this.setState({\n          error: 'Invalid email'\n        });\n      }\n\n      this.handleSignUp();\n      return this.setState({\n        error: ''\n      });\n    };\n\n    this.handleNameChange = evt => {\n      this.setState({\n        name: evt.target.value\n      });\n    };\n\n    this.handleEmailChange = evt => {\n      this.setState({\n        email: evt.target.value\n      });\n    };\n\n    this.handlePassChange = evt => {\n      this.setState({\n        password: evt.target.value\n      });\n    };\n\n    this.handlePassConfirmChange = evt => {\n      this.setState({\n        passwordConfirm: evt.target.value\n      });\n    };\n\n    this.handleCompanyChange = evt => {\n      this.setState({\n        company: evt.target.value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      error: '',\n      company: ''\n    };\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const _this$state3 = this.state,\n          error = _this$state3.error,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          passwordConfirm = _this$state3.passwordConfirm,\n          company = _this$state3.company,\n          name = _this$state3.name;\n    const cName = error ? 'SignupError' : 'Login';\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, error && React.createElement(\"h3\", {\n      className: \"Error\",\n      \"data-test\": \"error\",\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"XButton\",\n      type: \"button\",\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\u2716\"), error), React.createElement(\"div\", {\n      className: \"NameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"NameLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      className: \"NameInput\",\n      type: \"text\",\n      \"data-test\": \"email\",\n      value: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EmailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"EmailLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      className: \"EmailInput\",\n      type: \"text\",\n      \"data-test\": \"username\",\n      value: email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"CompanyContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"CompanyLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Company:\"), React.createElement(\"input\", {\n      className: \"CompanyInput\",\n      type: \"text\",\n      \"data-test\": \"company\",\n      value: company,\n      onChange: this.handleCompanyChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PasswordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"PasswordLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      className: \"PasswordInput\",\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PasswordContainer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"PasswordLabel2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      className: \"PasswordInput2\",\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: passwordConfirm,\n      onChange: this.handlePassConfirmChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"SubmitButton\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      \"data-test\": \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nSignUpLayout.propTypes = {\n  setError: PropTypes.func.isRequired\n};\nexport default SignUpLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/SignUp/SignUpLayout.js"],"names":["React","Component","PropTypes","firebase","SignUpLayout","constructor","dismissError","setState","error","validateEmail","inputText","mailformat","match","handleSignUp","state","email","password","setError","props","auth","createUserWithEmailAndPassword","then","navigation","navigate","catch","console","log","action","payload","handleSubmit","evt","name","company","passwordConfirm","preventDefault","replace","handleNameChange","target","value","handleEmailChange","handlePassChange","handlePassConfirmChange","handleCompanyChange","render","cName","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport '../LogIn/LogInLayoutStyles.css'\nimport firebase from '../../Firebase/index'\n\nclass SignUpLayout extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      error: '',\n      company: ''\n    }\n  }\n\n  dismissError = () => {\n    this.setState({ error: '' })\n  }\n\n  validateEmail = (inputText) => {\n    // eslint-disable-next-line no-useless-escape\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (inputText.match(mailformat)) {\n      return true\n    }\n    return false\n  } // src: https://www.w3resource.com/javascript/form/email-validation.php\n\n  handleSignUp = () => {\n    const { email, password } = this.state\n    const { setError } = this.props\n\n    firebase.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => this.props.navigation.navigate('Profile'))\n      .catch(error => {\n        console.log(error)\n        const action = {\n          payload: error\n        }\n        setError(null, payload)\n      })\n  }\n\n  handleSubmit = (evt) => {\n    const { name, email, password, company, passwordConfirm } = this.state\n    evt.preventDefault()\n\n    if (!name.replace(/\\s+/g, '')) {\n      return this.setState({ error: 'Name is required' })\n    }\n\n    if (!email.replace(/\\s+/g, '')) {\n      return this.setState({ error: 'Email is required' })\n    }\n\n    if (!company.replace(/\\s+/g, '')) {\n      return this.setState({ error: 'Company is required' })\n    }\n\n    if (!password.replace(/\\s+/g, '')) {\n      return this.setState({ error: 'Password is required' })\n    }\n\n    if (!passwordConfirm.replace(/\\s+/g, '')) {\n      return this.setState({ error: 'Confirm password' })\n    }\n\n    if (password !== passwordConfirm) {\n      return this.setState({ error: 'Passwords do not match' })\n    }\n\n    if (!this.validateEmail(email)) {\n      return this.setState({ error: 'Invalid email' })\n    }\n\n    this.handleSignUp()\n    return this.setState({ error: '' })\n  }\n\n  handleNameChange = (evt) => {\n    this.setState({\n      name: evt.target.value\n    })\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value\n    })\n  }\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value\n    })\n  }\n\n  handlePassConfirmChange = (evt) => {\n    this.setState({\n      passwordConfirm: evt.target.value\n    })\n  }\n\n  handleCompanyChange = (evt) => {\n    this.setState({\n      company: evt.target.value,\n    })\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const { error, email, password, passwordConfirm, company, name } = this.state\n    const cName = error ? 'SignupError' : 'Login'\n    return (\n      <div className=\"Container\">\n        <div className={cName}>\n          <form onSubmit={this.handleSubmit}>\n            {\n              error &&\n              <h3 className=\"Error\" data-test=\"error\" onClick={this.dismissError}>\n                <button className=\"XButton\" type=\"button\" onClick={this.dismissError}>✖</button>\n                {error}\n              </h3>\n            }\n            <div className=\"NameContainer\">\n              <label className=\"NameLabel\">Name:</label>\n              <input className=\"NameInput\" type=\"text\" data-test=\"email\" value={name} onChange={this.handleNameChange} />\n            </div>\n            <div className=\"EmailContainer\">\n              <label className=\"EmailLabel\">Email:</label>\n              <input className=\"EmailInput\" type=\"text\" data-test=\"username\" value={email} onChange={this.handleEmailChange} />\n            </div>\n            <div className=\"CompanyContainer\">\n              <label className=\"CompanyLabel\">Company:</label>\n              <input className=\"CompanyInput\" type=\"text\" data-test=\"company\" value={company} onChange={this.handleCompanyChange} />\n            </div>\n            <div className=\"PasswordContainer\">\n              <label className=\"PasswordLabel\">Password:</label>\n              <input className=\"PasswordInput\" type=\"password\" data-test=\"password\" value={password} onChange={this.handlePassChange} />\n            </div>\n            <div className=\"PasswordContainer2\">\n              <label className=\"PasswordLabel2\">Password:</label>\n              <input className=\"PasswordInput2\" type=\"password\" data-test=\"password\" value={passwordConfirm} onChange={this.handlePassConfirmChange} />\n            </div>\n            <input className=\"SubmitButton\" type=\"submit\" value=\"Sign Up\" data-test=\"submit\" />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nSignUpLayout.propTypes = {\n  setError: PropTypes.func.isRequired\n}\n\nexport default SignUpLayout\n"]},"metadata":{},"sourceType":"module"}