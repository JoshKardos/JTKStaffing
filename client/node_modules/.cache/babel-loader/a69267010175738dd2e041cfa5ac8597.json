{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/LogIn/LogInLayout.js\";\nimport React, { Component } from 'react';\nimport './LogInLayoutStyles.css';\n\nclass LoginPage extends Component {\n  constructor() {\n    super();\n\n    this.dismissError = () => {\n      this.setState({\n        error: ''\n      });\n    };\n\n    this.handleSubmit = evt => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      evt.preventDefault();\n\n      if (!email) {// return this.setState({ error: 'Email is required' })\n      }\n\n      if (!password) {// return this.setState({ error: 'Password is required' })\n      }\n\n      return this.setState({\n        error: ''\n      });\n    };\n\n    this.handleEmailChange = evt => {\n      this.setState({\n        email: evt.target.value\n      });\n    };\n\n    this.handlePassChange = evt => {\n      this.setState({\n        password: evt.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EmailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"EmailLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      className: \"EmailInput\",\n      type: \"text\",\n      \"data-test\": \"email\",\n      value: email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PasswordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"PasswordLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      className: \"PasswordInput\",\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"SubmitButton\",\n      type: \"submit\",\n      value: \"Log In\",\n      \"data-test\": \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/LogIn/LogInLayout.js"],"names":["React","Component","LoginPage","constructor","dismissError","setState","error","handleSubmit","evt","state","email","password","preventDefault","handleEmailChange","target","value","handlePassChange","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,YATc,GASC,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAXa;;AAAA,SAadC,YAbc,GAaEC,GAAD,IAAS;AAAA,0BACM,KAAKC,KADX;AAAA,YACdC,KADc,eACdA,KADc;AAAA,YACPC,QADO,eACPA,QADO;AAEtBH,MAAAA,GAAG,CAACI,cAAJ;;AAEA,UAAI,CAACF,KAAL,EAAY,CACV;AACD;;AAED,UAAI,CAACC,QAAL,EAAe,CACb;AACD;;AAED,aAAO,KAAKN,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd,CAAP;AACD,KA1Ba;;AAAA,SA4BdO,iBA5Bc,GA4BOL,GAAD,IAAS;AAC3B,WAAKH,QAAL,CAAc;AACZK,QAAAA,KAAK,EAAEF,GAAG,CAACM,MAAJ,CAAWC;AADN,OAAd;AAGD,KAhCa;;AAAA,SAkCdC,gBAlCc,GAkCMR,GAAD,IAAS;AAC1B,WAAKH,QAAL,CAAc;AACZM,QAAAA,QAAQ,EAAEH,GAAG,CAACM,MAAJ,CAAWC;AADT,OAAd;AAGD,KAtCa;;AAEZ,SAAKN,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXL,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAiCDW,EAAAA,MAAM,GAAG;AACP;AACA;AAFO,yBAGqB,KAAKR,KAH1B;AAAA,UAGCC,KAHD,gBAGCA,KAHD;AAAA,UAGQC,QAHR,gBAGQA,QAHR;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,mBAAU,OAApD;AAA4D,MAAA,KAAK,EAAEG,KAAnE;AAA0E,MAAA,QAAQ,EAAE,KAAKG,iBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAC,UAAtC;AAAiD,mBAAU,UAA3D;AAAsE,MAAA,KAAK,EAAEF,QAA7E;AAAuF,MAAA,QAAQ,EAAE,KAAKK,gBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,EASE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,KAAK,EAAC,QAApD;AAA6D,mBAAU,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF,CADF;AAiBD;;AA9D+B;;AAiElC,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './LogInLayoutStyles.css'\n\nclass LoginPage extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n    }\n  }\n\n  dismissError = () => {\n    this.setState({ error: '' })\n  }\n\n  handleSubmit = (evt) => {\n    const { email, password } = this.state\n    evt.preventDefault()\n\n    if (!email) {\n      // return this.setState({ error: 'Email is required' })\n    }\n\n    if (!password) {\n      // return this.setState({ error: 'Password is required' })\n    }\n\n    return this.setState({ error: '' })\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value,\n    })\n  }\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value,\n    })\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const { email, password } = this.state\n    return (\n      <div className=\"Container\">\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"EmailContainer\">\n              <label className=\"EmailLabel\">Email:</label>\n              <input className=\"EmailInput\" type=\"text\" data-test=\"email\" value={email} onChange={this.handleEmailChange} />\n            </div>\n            <div className=\"PasswordContainer\">\n              <label className=\"PasswordLabel\">Password:</label>\n              <input className=\"PasswordInput\" type=\"password\" data-test=\"password\" value={password} onChange={this.handlePassChange} />\n            </div>\n            <input className=\"SubmitButton\" type=\"submit\" value=\"Log In\" data-test=\"submit\" />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}