{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nexport const uploadTimesheetEpic = action$ => action$.pipe(ofType(DashboardTypes.UPLOAD_TIMESHEET), switchMap(action => {\n  console.log('here');\n  return {\n    type: ''\n  };\n}));\nexport const setTimesheetFileError = action$ => action$.pipe(ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/DashboardEpics.js"],"names":["ofType","map","switchMap","TYPES","DashboardTypes","ErrorTypes","uploadTimesheetEpic","action$","pipe","UPLOAD_TIMESHEET","action","console","log","type","setTimesheetFileError","SET_TIMESHEET_FILE_ERROR","SET_ERROR","payload"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AACA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,yBAAxC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAC9CR,MAAM,CAACI,cAAc,CAACK,gBAAhB,CADwC,EAE9CP,SAAS,CAACQ,MAAM,IAAI;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAHQ,CAFqC,CAAzC;AAQP,OAAO,MAAMC,qBAAqB,GAAIP,OAAD,IAAaA,OAAO,CAACC,IAAR,CAChDR,MAAM,CAACI,cAAc,CAACW,wBAAhB,CAD0C,EAEhDd,GAAG,CAAES,MAAD,KAAa;AAAEG,EAAAA,IAAI,EAAER,UAAU,CAACW,SAAnB;AAA8BC,EAAAA,OAAO,EAAEP,MAAM,CAACO;AAA9C,CAAb,CAAD,CAF6C,CAA3C;AAKP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, switchMap } from 'rxjs/operators';\nimport { TYPES as DashboardTypes } from '../Redux/DashboardRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\n\nexport const uploadTimesheetEpic = (action$) => action$.pipe(\n  ofType(DashboardTypes.UPLOAD_TIMESHEET),\n  switchMap(action => {\n    console.log('here')\n    return { type: '' }\n  })\n)\n\nexport const setTimesheetFileError = (action$) => action$.pipe(\n  ofType(DashboardTypes.SET_TIMESHEET_FILE_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}