{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const createUser = (email, pass) => dispatch => {\n  firebase.auth().createUserWithEmailAndPassword(email, pass).then(resp => {\n    return dispatch({\n      type: ''\n    });\n  }).catch(errorMessage => dispatch({\n    type: ErrorTypes.SET_ERROR,\n    payload: errorMessage\n  }));\n};\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  return createUser(email, password);\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","mapTo","TYPES","UserTypes","ErrorTypes","setError","firebase","createUser","email","pass","dispatch","auth","createUserWithEmailAndPassword","then","resp","type","catch","errorMessage","SET_ERROR","payload","signUpEpic","action$","pipe","SIGN_UP","action","password"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiBC,QAAQ,IAAI;AACrDJ,EAAAA,QAAQ,CAACK,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDC,IAAtD,EAA4DI,IAA5D,CAAkEC,IAAD,IAAU;AACzE,WAAOJ,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAf;AACD,GAFD,EAEGC,KAFH,CAESC,YAAY,IAAIP,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEX,UAAU,CAACc,SAAnB;AAA8BC,IAAAA,OAAO,EAAEF;AAAvC,GAAD,CAFjC;AAGD,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCvB,MAAM,CAACI,SAAS,CAACoB,OAAX,CAD6B,EAEnCvB,GAAG,CAACwB,MAAM,IAAI;AAAA,QACJhB,KADI,GACMgB,MAAM,CAACL,OADb,CACJX,KADI;AAAA,QAEJiB,QAFI,GAESD,MAAM,CAACL,OAFhB,CAEJM,QAFI,EAGZ;;AACA,SAAOlB,UAAU,CAACC,KAAD,EAAQiB,QAAR,CAAjB;AACD,CALE,CAFgC,CAA9B;AAUP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const createUser = (email, pass) => dispatch => {\n  firebase.auth().createUserWithEmailAndPassword(email, pass).then((resp) => {\n    return dispatch({ type: '' });\n  }).catch(errorMessage => dispatch({ type: ErrorTypes.SET_ERROR, payload: errorMessage }));\n}\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    return createUser(email, password)\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}