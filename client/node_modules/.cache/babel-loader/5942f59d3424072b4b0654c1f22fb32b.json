{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FileUploader from 'react-firebase-file-uploader'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\n\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport Loader from 'react-loader-spinner';\nimport firebase from '../../Firebase/index';\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startUploadManually = () => {\n      const setTimesheetFileError = this.props.setTimesheetFileError;\n      const timesheetFile = this.state.timesheetFile;\n\n      if (!navigator.onLine) {\n        setTimesheetFileError({\n          payload: 'Check internet connection...'\n        });\n        return;\n      }\n\n      this.fileUploader.startUpload(timesheetFile);\n    };\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    };\n    this.fileUploader = null;\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      onMouseEnter: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  } // renderRecentStands() {\n  //   return null\n  // }\n\n\n  renderSubmitLayout() {\n    const _this$props = this.props,\n          userState = _this$props.userState,\n          timesheetUploadSuccess = _this$props.timesheetUploadSuccess,\n          timesheetUploadError = _this$props.timesheetUploadError,\n          timesheetUploadStart = _this$props.timesheetUploadStart,\n          timesheetUploading = _this$props.timesheetUploading;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: Styles.RecentlySubmittedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.RecentlySubmittedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Recently Submitted\")), React.createElement(\"div\", {\n      style: Styles.SubmitContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      onClick: this.startUploadManually,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, !timesheetUploading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Submit\"), timesheetUploading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(FileUploader, {\n      ref: instance => {\n        this.fileUploader = instance;\n      },\n      onChange: event => this.setState({\n        timesheetFile: event.target.files[0]\n      }),\n      accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n      ,\n      storageRef: firebase.storage().ref(`timesheets/${userState.id}`),\n      onUploadStart: timesheetUploadStart,\n      onUploadError: timesheetUploadError,\n      onUploadSuccess: timesheetUploadSuccess,\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  timesheetUploadSuccess: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FileUploader","DayPicker","Loader","firebase","getWeekDays","getWeekRange","redX","greenCheck","Styles","DashboardLayout","constructor","props","startUploadManually","setTimesheetFileError","timesheetFile","state","navigator","onLine","payload","fileUploader","startUpload","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","renderFileName","FileName","name","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","toggleHover","renderSubmitLayout","userState","timesheetUploadSuccess","timesheetUploadError","timesheetUploadStart","timesheetUploading","length","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DasboardContainer","RecentlySubmittedContainer","RecentlySubmittedText","SubmitContainer","StepsList","SubmitTimesheetButton","CalendarContainer","instance","event","target","files","storage","ref","id","handleProgress","render","isAdmin","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport FileUploader from 'react-firebase-file-uploader';\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport Loader from 'react-loader-spinner'\nimport firebase from '../../Firebase/index'\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    }\n    this.fileUploader = null\n  }\n\n  startUploadManually = () => {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile } = this.state;\n\n    if (!navigator.onLine) {\n      setTimesheetFileError({ payload: 'Check internet connection...' })\n      return\n    }\n    this.fileUploader.startUpload(timesheetFile)\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow} onMouseEnter={this.toggleHover}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  // renderRecentStands() {\n  //   return null\n  // }\n\n  renderSubmitLayout() {\n    const { userState, timesheetUploadSuccess, timesheetUploadError, timesheetUploadStart, timesheetUploading } = this.props\n    const { timesheetFile, hoverRange, selectedDays } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DasboardContainer}>\n        <div style={Styles.RecentlySubmittedContainer}>\n          <p style={Styles.RecentlySubmittedText}>Recently Submitted</p>\n          {/* {this.renderRecentStands()} */}\n        </div>\n        <div style={Styles.SubmitContainer}>\n          <h2>Submit</h2>\n          <div style={Styles.StepsList}>\n            {/* FIRST STEP */ }\n            {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n            {/* SECOND STEP */}\n            {this.renderSecondStep()}\n            {/* SUBMIT BUTTON */}\n            { timesheetFile && daysAreSelected &&\n              <button type=\"button\" style={Styles.SubmitTimesheetButton} onClick={this.startUploadManually}>\n                { !timesheetUploading && <p>Submit</p> }\n                { timesheetUploading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n\n              </button> }\n          </div>\n          <div style={Styles.CalendarContainer}>\n            <DayPicker\n              selectedDays={selectedDays}\n              showWeekNumbers\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={this.handleDayChange}\n              onDayMouseEnter={this.handleDayEnter}\n              onDayMouseLeave={this.handleDayLeave}\n              onWeekClick={this.handleWeekClick}\n            />\n          </div>\n\n          <FileUploader\n            ref={instance => { this.fileUploader = instance }}\n            onChange={event => this.setState({ timesheetFile: event.target.files[0] })}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n            storageRef={firebase.storage().ref(`timesheets/${userState.id}`)}\n            onUploadStart={timesheetUploadStart}\n            onUploadError={timesheetUploadError}\n            onUploadSuccess={timesheetUploadSuccess}\n            onProgress={this.handleProgress}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  timesheetUploadSuccess: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}