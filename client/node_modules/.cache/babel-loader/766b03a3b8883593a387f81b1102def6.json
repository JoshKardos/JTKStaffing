{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), // delay(5000), // Asynchronously wait 1000ms then continue\nmapTo(action => {\n  const email = action.payload.email;\n  const password = action.payload.password;\n  firebase.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      return setError();\n    }\n\n    return {\n      type: ''\n    };\n  });\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","mapTo","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","auth","createUserWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCT,MAAM,CAACG,SAAS,CAACO,OAAX,CAD6B,EAEnC;AACAT,KAAK,CAACU,MAAM,IAAI;AAAA,QACNC,KADM,GACID,MAAM,CAACE,OADX,CACND,KADM;AAAA,QAENE,QAFM,GAEOH,MAAM,CAACE,OAFd,CAENC,QAFM;AAGdR,EAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,EAAgEG,KAAhE,CAAuEC,KAAD,IAAW;AAC/E;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACA,aAAOjB,QAAQ,EAAf;AACD;;AACD,WAAO;AAAEkB,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GARD;AASA,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAbI,CAH8B,CAA9B;AAmBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  // delay(5000), // Asynchronously wait 1000ms then continue\n  mapTo(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code\n        const errorMessage = error.message\n        return setError()\n      }\n      return { type: '' }\n    })\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}