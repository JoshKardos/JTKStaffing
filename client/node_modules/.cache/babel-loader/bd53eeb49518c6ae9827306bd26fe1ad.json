{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { switchMap, mapTo, map, filter } from 'rxjs/operators';\nimport { TYPES as UserTypes, userLoggedIn } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport { TYPES as LayoutTypes, LAYOUTS } from '../Redux/LayoutRedux';\nimport firebase from '../Firebase/index';\nexport const loginEpic = action$ => action$.pipe(ofType(UserTypes.LOGIN), switchMap(action => {\n  const email = action.email,\n        password = action.password;\n  return firebase.auth().signInWithEmailAndPassword(email, password).then(value => {\n    const uid = value.user.uid;\n    return {\n      type: UserTypes.FETCH_USER_DATA,\n      payload: uid\n    };\n  }).catch(error => {\n    // error\n    const errorMessage = error.message;\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n}));\nexport const signUpWorkerEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP_WORKER), switchMap(action => {\n  const name = action.name,\n        email = action.email,\n        password = action.password,\n        company = action.company;\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(value => {\n    // success\n    const uid = value.user.uid;\n    const ref = firebase.database().ref(`/users/${uid}`);\n    ref.set({\n      name,\n      email,\n      company,\n      uid\n    });\n    return {\n      type: UserTypes.SET_USER_DATA,\n      payload: {\n        id: uid,\n        name,\n        email,\n        company\n      }\n    };\n  }).catch(error => {\n    // error\n    const errorMessage = error.message;\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n}));\nexport const signUpAdminEpic = (action$, state$) => action$.pipe(ofType(UserTypes.SIGN_UP_ADMIN), switchMap(action => {\n  const name = action.name,\n        email = action.email,\n        password = action.password,\n        company = action.company;\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(value => {\n    // success\n    const uid = value.user.uid;\n    const usersRef = firebase.database().ref(`/users/${uid}`);\n    usersRef.set({\n      name,\n      email,\n      company,\n      uid\n    });\n    const userAdminRef = firebase.database().ref(`/admin-workers/${state$.value.UserReducers.userReducer.id}/${uid}`);\n    userAdminRef.set(1);\n    return {\n      type: UserTypes.FETCH_ADMIN_WORKERS\n    };\n  }).catch(error => {\n    // error\n    const errorMessage = error.message;\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n}));\nexport const setSignUpErrorEpic = action$ => action$.pipe(ofType(UserTypes.SET_SIGN_UP_ERROR), map(action => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: action.payload\n})));\nexport const startSignUpLoadingEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP_ADMIN), mapTo({\n  type: UserTypes.START_SIGN_UP_LOADING\n}));\nexport const stopSignUpLoadingEpic = (action$, state$) => action$.pipe(ofType(ErrorTypes.SET_ERROR, UserTypes.SET_USER_DATA), filter(() => state$.value.UserReducers.userReducer.signUpLoading), // only stop sign up loading if it has started\nmapTo({\n  type: UserTypes.STOP_SIGN_UP_LOADING\n}));\nexport const startLoginLoadingEpic = action$ => action$.pipe(ofType(UserTypes.LOGIN), mapTo({\n  type: UserTypes.START_LOGIN_LOADING\n}));\nexport const stopLoginLoadingEpic = (action$, state$) => action$.pipe(ofType(ErrorTypes.SET_ERROR, UserTypes.SET_USER_DATA), filter(() => state$.value.UserReducers.userReducer.loginLoading), // only stop sign up loading if it has started\nmapTo({\n  type: UserTypes.STOP_LOGIN_LOADING\n}));\nexport const fetchUserDataEpic = (action$, state$) => action$.pipe(ofType(UserTypes.FETCH_USER_DATA), filter(() => !userLoggedIn(state$.value.UserReducers.userReducer)), // only fetch if user is not logged in\nswitchMap(action => {\n  const userId = action.payload;\n  let employees = [];\n  return firebase.database().ref(`/users/${userId}`).once('value').then(snapshot => {\n    const name = snapshot.val() && snapshot.val().name || 'N/A';\n    const email = snapshot.val() && snapshot.val().email || 'N/A';\n    const company = snapshot.val() && snapshot.val().company || 'N/A';\n    const id = snapshot.val() && snapshot.val().uid || 'N/A';\n    const admin = snapshot.val() && snapshot.val().admin || null;\n\n    if (admin) {\n      return firebase.database().ref(`/admin-workers/${userId}`).once('value').then(adminEmployeesSnapshot => firebase.database().ref('/users').once('value').then(allUsersSnapshot => {\n        Object.keys(allUsersSnapshot.val()).forEach(userId => {\n          if (Object.keys(adminEmployeesSnapshot.val()).includes(userId)) {\n            employees = [...employees, allUsersSnapshot.val()[`${userId}`]];\n          }\n        });\n        return {\n          type: UserTypes.SET_USER_DATA,\n          payload: {\n            id,\n            name,\n            email,\n            company,\n            admin,\n            employees\n          }\n        };\n      })); // eslint-disable-next-line no-else-return\n    } else {\n      return null;\n    }\n  });\n}));\nexport const homePageAfterLoginOrSignUpEpic = (action$, state$) => action$.pipe(ofType(UserTypes.SET_USER_DATA), filter(() => state$.value.LayoutReducers.layoutReducer.currentLayout === LAYOUTS.LOGIN || state$.value.LayoutReducers.layoutReducer.currentLayout === LAYOUTS.SIGNUP), mapTo({\n  type: LayoutTypes.SET_HOME_LAYOUT\n}));\nexport const logOutEpic = action$ => action$.pipe(ofType(UserTypes.LOG_OUT), switchMap(() => firebase.auth().signOut().then(() => ( // Sign-out successful.\n{\n  type: LayoutTypes.SET_LOGIN_LAYOUT\n})).catch(error => ({\n  type: ErrorTypes.SET_ERROR,\n  payload: error.message\n}))));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","switchMap","mapTo","map","filter","TYPES","UserTypes","userLoggedIn","ErrorTypes","LayoutTypes","LAYOUTS","firebase","loginEpic","action$","pipe","LOGIN","action","email","password","auth","signInWithEmailAndPassword","then","value","uid","user","type","FETCH_USER_DATA","payload","catch","error","errorMessage","message","SET_ERROR","signUpWorkerEpic","SIGN_UP_WORKER","name","company","createUserWithEmailAndPassword","ref","database","set","SET_USER_DATA","id","signUpAdminEpic","state$","SIGN_UP_ADMIN","usersRef","userAdminRef","UserReducers","userReducer","FETCH_ADMIN_WORKERS","setSignUpErrorEpic","SET_SIGN_UP_ERROR","startSignUpLoadingEpic","START_SIGN_UP_LOADING","stopSignUpLoadingEpic","signUpLoading","STOP_SIGN_UP_LOADING","startLoginLoadingEpic","START_LOGIN_LOADING","stopLoginLoadingEpic","loginLoading","STOP_LOGIN_LOADING","fetchUserDataEpic","userId","employees","once","snapshot","val","admin","adminEmployeesSnapshot","allUsersSnapshot","Object","keys","forEach","includes","homePageAfterLoginOrSignUpEpic","LayoutReducers","layoutReducer","currentLayout","SIGNUP","SET_HOME_LAYOUT","logOutEpic","LOG_OUT","signOut","SET_LOGIN_LAYOUT"],"mappings":"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","sourcesContent":["import { ofType } from 'redux-observable'\nimport { switchMap, mapTo, map, filter } from 'rxjs/operators';\nimport { TYPES as UserTypes, userLoggedIn } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport { TYPES as LayoutTypes, LAYOUTS } from '../Redux/LayoutRedux'\nimport firebase from '../Firebase/index'\n\nexport const loginEpic = (action$) => action$.pipe(\n  ofType(UserTypes.LOGIN),\n  switchMap(action => {\n    const { email, password } = action\n    return firebase.auth().signInWithEmailAndPassword(email, password).then((value) => {\n      const { uid } = value.user\n      return { type: UserTypes.FETCH_USER_DATA, payload: uid }\n    }).catch((error) => {\n      // error\n      const errorMessage = error.message\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n  })\n)\n\nexport const signUpWorkerEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SIGN_UP_WORKER),\n  switchMap(action => {\n    const { name, email, password, company } = action\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then((value) => {\n      // success\n      const { uid } = value.user\n      const ref = firebase.database().ref(`/users/${uid}`)\n      ref.set({\n        name,\n        email,\n        company,\n        uid\n      })\n      return { type: UserTypes.SET_USER_DATA, payload: { id: uid, name, email, company } }\n    }).catch((error) => {\n      // error\n      const errorMessage = error.message\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n  })\n)\n\nexport const signUpAdminEpic = (action$, state$) => action$.pipe(\n  ofType(UserTypes.SIGN_UP_ADMIN),\n  switchMap(action => {\n    const { name, email, password, company } = action\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then((value) => {\n      // success\n      const { uid } = value.user\n      const usersRef = firebase.database().ref(`/users/${uid}`)\n      usersRef.set({\n        name,\n        email,\n        company,\n        uid\n      })\n      const userAdminRef = firebase.database().ref(`/admin-workers/${state$.value.UserReducers.userReducer.id}/${uid}`)\n      userAdminRef.set(1)\n      return { type: UserTypes.FETCH_ADMIN_WORKERS }\n    }).catch((error) => {\n      // error\n      const errorMessage = error.message\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n  })\n)\n\nexport const setSignUpErrorEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SET_SIGN_UP_ERROR),\n  map((action) => ({ type: ErrorTypes.SET_ERROR, payload: action.payload }))\n)\n\nexport const startSignUpLoadingEpic = (action$) => action$.pipe(\n  ofType(UserTypes.SIGN_UP_ADMIN),\n  mapTo({ type: UserTypes.START_SIGN_UP_LOADING })\n)\n\nexport const stopSignUpLoadingEpic = (action$, state$) => action$.pipe(\n  ofType(ErrorTypes.SET_ERROR, UserTypes.SET_USER_DATA),\n  filter(() => state$.value.UserReducers.userReducer.signUpLoading), // only stop sign up loading if it has started\n  mapTo({ type: UserTypes.STOP_SIGN_UP_LOADING })\n)\n\nexport const startLoginLoadingEpic = (action$) => action$.pipe(\n  ofType(UserTypes.LOGIN),\n  mapTo({ type: UserTypes.START_LOGIN_LOADING })\n)\n\nexport const stopLoginLoadingEpic = (action$, state$) => action$.pipe(\n  ofType(ErrorTypes.SET_ERROR, UserTypes.SET_USER_DATA),\n  filter(() => state$.value.UserReducers.userReducer.loginLoading), // only stop sign up loading if it has started\n  mapTo({ type: UserTypes.STOP_LOGIN_LOADING })\n)\n\nexport const fetchUserDataEpic = (action$, state$) => action$.pipe(\n  ofType(UserTypes.FETCH_USER_DATA),\n  filter(() => !userLoggedIn(state$.value.UserReducers.userReducer)), // only fetch if user is not logged in\n  switchMap(action => {\n    const userId = action.payload\n    let employees = []\n    return firebase.database().ref(`/users/${userId}`).once('value').then((snapshot) => {\n      const name = (snapshot.val() && snapshot.val().name) || 'N/A'\n      const email = (snapshot.val() && snapshot.val().email) || 'N/A'\n      const company = (snapshot.val() && snapshot.val().company) || 'N/A'\n      const id = (snapshot.val() && snapshot.val().uid) || 'N/A'\n      const admin = (snapshot.val() && snapshot.val().admin) || null\n      if (admin) {\n        return firebase.database().ref(`/admin-workers/${userId}`).once('value').then((adminEmployeesSnapshot) => firebase.database().ref('/users').once('value').then((allUsersSnapshot) => {\n          Object.keys(allUsersSnapshot.val()).forEach(userId => {\n            if (Object.keys(adminEmployeesSnapshot.val()).includes(userId)) {\n              employees = [...employees, allUsersSnapshot.val()[`${userId}`]]\n            }\n          })\n          return { type: UserTypes.SET_USER_DATA, payload: { id, name, email, company, admin, employees } }\n        }))\n      // eslint-disable-next-line no-else-return\n      } else {\n        return null\n      }\n    })\n  })\n)\n\nexport const homePageAfterLoginOrSignUpEpic = (action$, state$) => action$.pipe(\n  ofType(UserTypes.SET_USER_DATA),\n  filter(() => state$.value.LayoutReducers.layoutReducer.currentLayout === LAYOUTS.LOGIN || state$.value.LayoutReducers.layoutReducer.currentLayout === LAYOUTS.SIGNUP),\n  mapTo({ type: LayoutTypes.SET_HOME_LAYOUT })\n)\n\n\nexport const logOutEpic = (action$) => action$.pipe(\n  ofType(UserTypes.LOG_OUT),\n  switchMap(() => firebase.auth().signOut().then(() => (\n    // Sign-out successful.\n    { type: LayoutTypes.SET_LOGIN_LAYOUT }\n  )).catch(error => (\n    { type: ErrorTypes.SET_ERROR, payload: error.message }\n  )))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}