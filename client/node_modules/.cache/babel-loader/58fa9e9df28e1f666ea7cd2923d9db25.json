{"ast":null,"code":"import _classCallCheck from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./LoginLayoutStyles.css';import Loader from'react-loader-spinner';var LoginPage=/*#__PURE__*/function(_Component){_inherits(LoginPage,_Component);function LoginPage(){var _this;_classCallCheck(this,LoginPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(LoginPage).call(this));_this.handleSubmit=function(evt){var _this$state=_this.state,email=_this$state.email,password=_this$state.password;var _this$props=_this.props,login=_this$props.login,setLoginError=_this$props.setLoginError;evt.preventDefault();if(!email){var _action={payload:'Email is required'};return setLoginError(_action);}if(!password){var _action2={payload:'Password is required'};return setLoginError(_action2);}var action={email:email,password:password};return login(action);};_this.handleEmailChange=function(evt){_this.setState({email:evt.target.value});};_this.handlePassChange=function(evt){_this.setState({password:evt.target.value});};_this.state={email:'',password:''};return _this;}_createClass(LoginPage,[{key:\"render\",value:function render(){// NOTE: I use data-attributes for easier E2E testing\n// but you don't need to target those (any css-selector will work)\nvar _this$state2=this.state,email=_this$state2.email,password=_this$state2.password;var isLoading=this.props.isLoading;return React.createElement(\"div\",{className:\"Container\"},React.createElement(\"div\",{className:\"Login\"},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"div\",{className:\"EmailContainer\"},React.createElement(\"label\",{className:\"EmailLabel\"},\"Email:\"),React.createElement(\"input\",{className:\"EmailInput\",type:\"text\",\"data-test\":\"email\",value:email,onChange:this.handleEmailChange})),React.createElement(\"div\",{className:\"PasswordContainer\"},React.createElement(\"label\",{className:\"PasswordLabel\"},\"Password:\"),React.createElement(\"input\",{className:\"PasswordInput\",type:\"password\",\"data-test\":\"password\",value:password,onChange:this.handlePassChange})),React.createElement(\"button\",{className:\"SubmitButton\",type:\"submit\"},!isLoading&&React.createElement(\"p\",null,\"Login\"),isLoading&&React.createElement(Loader,{type:\"ThreeDots\",color:\"#00BFFF\",height:40,width:80})))));}}]);return LoginPage;}(Component);export default LoginPage;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/LogIn/LoginLayout.js"],"names":["React","Component","Loader","LoginPage","handleSubmit","evt","state","email","password","props","login","setLoginError","preventDefault","action","payload","handleEmailChange","setState","target","value","handlePassChange","isLoading"],"mappings":"0xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,yBAAP,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,GAEMC,CAAAA,S,mEACJ,oBAAc,2CACZ,6EADY,MAQdC,YARc,CAQC,SAACC,GAAD,CAAS,iBACM,MAAKC,KADX,CACdC,KADc,aACdA,KADc,CACPC,QADO,aACPA,QADO,iBAEW,MAAKC,KAFhB,CAEdC,KAFc,aAEdA,KAFc,CAEPC,aAFO,aAEPA,aAFO,CAGtBN,GAAG,CAACO,cAAJ,GAEA,GAAI,CAACL,KAAL,CAAY,CACV,GAAMM,CAAAA,OAAM,CAAG,CACbC,OAAO,CAAE,mBADI,CAAf,CAGA,MAAOH,CAAAA,aAAa,CAACE,OAAD,CAApB,CACD,CACD,GAAI,CAACL,QAAL,CAAe,CACb,GAAMK,CAAAA,QAAM,CAAG,CACbC,OAAO,CAAE,sBADI,CAAf,CAGA,MAAOH,CAAAA,aAAa,CAACE,QAAD,CAApB,CACD,CACD,GAAMA,CAAAA,MAAM,CAAG,CACbN,KAAK,CAALA,KADa,CAEbC,QAAQ,CAARA,QAFa,CAAf,CAIA,MAAOE,CAAAA,KAAK,CAACG,MAAD,CAAZ,CACD,CA9Ba,OAgCdE,iBAhCc,CAgCM,SAACV,GAAD,CAAS,CAC3B,MAAKW,QAAL,CAAc,CACZT,KAAK,CAAEF,GAAG,CAACY,MAAJ,CAAWC,KADN,CAAd,EAGD,CApCa,OAsCdC,gBAtCc,CAsCK,SAACd,GAAD,CAAS,CAC1B,MAAKW,QAAL,CAAc,CACZR,QAAQ,CAAEH,GAAG,CAACY,MAAJ,CAAWC,KADT,CAAd,EAGD,CA1Ca,CAEZ,MAAKZ,KAAL,CAAa,CACXC,KAAK,CAAE,EADI,CAEXC,QAAQ,CAAE,EAFC,CAAb,CAFY,aAMb,C,6DAsCQ,CACP;AACA;AAFO,iBAGqB,KAAKF,KAH1B,CAGCC,KAHD,cAGCA,KAHD,CAGQC,QAHR,cAGQA,QAHR,IAICY,CAAAA,SAJD,CAIe,KAAKX,KAJpB,CAICW,SAJD,CAKP,MACE,4BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,SAAS,CAAC,OAAf,EACE,4BAAM,QAAQ,CAAE,KAAKhB,YAArB,EACE,2BAAK,SAAS,CAAC,gBAAf,EACE,6BAAO,SAAS,CAAC,YAAjB,WADF,CAEE,6BAAO,SAAS,CAAC,YAAjB,CAA8B,IAAI,CAAC,MAAnC,CAA0C,YAAU,OAApD,CAA4D,KAAK,CAAEG,KAAnE,CAA0E,QAAQ,CAAE,KAAKQ,iBAAzF,EAFF,CADF,CAKE,2BAAK,SAAS,CAAC,mBAAf,EACE,6BAAO,SAAS,CAAC,eAAjB,cADF,CAEE,6BAAO,SAAS,CAAC,eAAjB,CAAiC,IAAI,CAAC,UAAtC,CAAiD,YAAU,UAA3D,CAAsE,KAAK,CAAEP,QAA7E,CAAuF,QAAQ,CAAE,KAAKW,gBAAtG,EAFF,CALF,CASE,8BAAQ,SAAS,CAAC,cAAlB,CAAiC,IAAI,CAAC,QAAtC,EACI,CAACC,SAAD,EAAc,qCADlB,CAEIA,SAAS,EAAI,oBAAC,MAAD,EAAQ,IAAI,CAAC,WAAb,CAAyB,KAAK,CAAC,SAA/B,CAAyC,MAAM,CAAE,EAAjD,CAAqD,KAAK,CAAE,EAA5D,EAFjB,CATF,CADF,CADF,CADF,CAoBD,C,uBAtEqBnB,S,EA+ExB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './LoginLayoutStyles.css'\nimport PropTypes from 'prop-types'\nimport Loader from 'react-loader-spinner'\n\nclass LoginPage extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleSubmit = (evt) => {\n    const { email, password } = this.state\n    const { login, setLoginError } = this.props\n    evt.preventDefault()\n\n    if (!email) {\n      const action = {\n        payload: 'Email is required'\n      }\n      return setLoginError(action)\n    }\n    if (!password) {\n      const action = {\n        payload: 'Password is required'\n      }\n      return setLoginError(action)\n    }\n    const action = {\n      email,\n      password\n    }\n    return login(action)\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value,\n    })\n  }\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value,\n    })\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const { email, password } = this.state\n    const { isLoading } = this.props\n    return (\n      <div className=\"Container\">\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"EmailContainer\">\n              <label className=\"EmailLabel\">Email:</label>\n              <input className=\"EmailInput\" type=\"text\" data-test=\"email\" value={email} onChange={this.handleEmailChange} />\n            </div>\n            <div className=\"PasswordContainer\">\n              <label className=\"PasswordLabel\">Password:</label>\n              <input className=\"PasswordInput\" type=\"password\" data-test=\"password\" value={password} onChange={this.handlePassChange} />\n            </div>\n            <button className=\"SubmitButton\" type=\"submit\">\n              { !isLoading && <p>Login</p> }\n              { isLoading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nLoginPage.propTypes = {\n  login: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setLoginError: PropTypes.func.isRequired\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}