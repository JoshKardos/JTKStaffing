{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/LogIn/LogIn.js\";\nimport React, { Component } from 'react'; // import './LogIn.css'\n\nclass LoginPage extends Component {\n  constructor() {\n    super();\n\n    this.dismissError = () => {\n      this.setState({\n        error: ''\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n    evt.preventDefault();\n\n    if (!username) {\n      return this.setState({\n        error: 'Username is required'\n      });\n    }\n\n    if (!password) {\n      return this.setState({\n        error: 'Password is required'\n      });\n    }\n\n    return this.setState({\n      error: ''\n    });\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const _this$state2 = this.state,\n          error = _this$state2.error,\n          username = _this$state2.username,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, error && React.createElement(\"h3\", {\n      \"data-test\": \"error\",\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.dismissError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u2716\"), error), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"User Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-test\": \"username\",\n      value: username,\n      onChange: this.handleUserChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Log In\",\n      \"data-test\": \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/LogIn/LogIn.js"],"names":["React","Component","LoginPage","constructor","dismissError","setState","error","state","username","password","handlePassChange","bind","handleUserChange","handleSubmit","evt","preventDefault","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import './LogIn.css'\n\nclass LoginPage extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: '',\n      password: '',\n      error: '',\n    }\n\n    this.handlePassChange = this.handlePassChange.bind(this)\n    this.handleUserChange = this.handleUserChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  dismissError = () => {\n    this.setState({ error: '' })\n  }\n\n  handleSubmit(evt) {\n    const { username, password } = this.state\n    evt.preventDefault()\n\n    if (!username) {\n      return this.setState({ error: 'Username is required' })\n    }\n\n    if (!password) {\n      return this.setState({ error: 'Password is required' })\n    }\n\n    return this.setState({ error: '' })\n  }\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value,\n    })\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value,\n    })\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const { error, username, password } = this.state\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>âœ–</button>\n              {error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" data-test=\"username\" value={username} onChange={this.handleUserChange} />\n\n          <label>Password</label>\n          <input type=\"password\" data-test=\"password\" value={password} onChange={this.handlePassChange} />\n\n          <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}