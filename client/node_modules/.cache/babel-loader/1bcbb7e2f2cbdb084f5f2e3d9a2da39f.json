{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password;\n  return {\n    type: ErrorTypes.SET_ERROR,\n    payload: 'ERROR'\n  }; // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n  //   // Handle Errors here.\n  //   if (error !== null) {\n  //     const errorCode = error.code\n  //     const errorMessage = error.message\n  //     console.log(\"1\")\n  //     return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n  //   }\n  //   console.log(\"2\")\n  //   return { type: '' }\n  // })\n  // console.log(\"3\")\n  // return { type: '' }\n}) // map(() => ({ type: ErrorTypes.SET_ERROR, payload: 'ERROR' }))\n);\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","mapTo","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","type","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCV,MAAM,CAACI,SAAS,CAACO,OAAX,CAD6B,EAEnCV,GAAG,CAACW,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACE,OADb,CACJD,KADI;AAAA,QAEJE,QAFI,GAESH,MAAM,CAACE,OAFhB,CAEJC,QAFI;AAGZ,SAAO;AAAEC,IAAAA,IAAI,EAAEX,UAAU,CAACY,SAAnB;AAA8BH,IAAAA,OAAO,EAAE;AAAvC,GAAP,CAHY,CAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACD,CAnBE,CAFgC,CAsBnC;AAtBmC,CAA9B;AAyBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    // firebase.auth().createUserWithEmailAndPassword(email, password).catch((error) => {\n    //   // Handle Errors here.\n    //   if (error !== null) {\n    //     const errorCode = error.code\n    //     const errorMessage = error.message\n    //     console.log(\"1\")\n    //     return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    //   }\n    //   console.log(\"2\")\n\n    //   return { type: '' }\n    // })\n    // console.log(\"3\")\n\n    // return { type: '' }\n  })\n  // map(() => ({ type: ErrorTypes.SET_ERROR, payload: 'ERROR' }))\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}