{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/Admin/AdminTimesheetTile/AdminTimesheetTile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../../DashboardLayoutStyles';\nimport firebase from '../../../../Firebase/index';\nimport { getMMMDDYYYY } from '../../../../helpers/CalendarHelpers';\nimport download from '../../../../download.png';\n\nclass AdminTimesheetTile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timesheets: [],\n      timesheetRowHovered: null,\n      hover: false\n    };\n  }\n\n  componentDidMount() {\n    const employee = this.props.employee;\n    let timesheetArr = [];\n    firebase.database().ref(`/user-timesheets/${employee.uid}`).once('value').then(timesheetSnapshot => {\n      if (!timesheetSnapshot.val()) return;\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timesheetArr = [...timesheetArr, timesheetSnapshot.val()[key]]; // eslint-disable-next-line no-useless-return\n\n        return;\n      });\n      this.setState({\n        timesheets: timesheetArr\n      });\n    });\n  }\n\n  renderTimesheetMessage() {\n    const timesheets = this.state.timesheets;\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, timesheets.length);\n  }\n\n  renderTimesheetsTableData() {\n    const _this$state = this.state,\n          timesheets = _this$state.timesheets,\n          timesheetRowHovered = _this$state.timesheetRowHovered;\n    return timesheets.map((timesheet, index) => {\n      // eslint-disable-next-line radix\n      const date = new Date(parseInt(timesheet.timestamp));\n      return React.createElement(\"tr\", {\n        onMouseEnter: () => this.setState({\n          timesheetRowHovered: index\n        }),\n        onMouseLeave: () => this.setState({\n          timesheetRowHovered: null\n        }),\n        style: timesheetRowHovered === index ? Styles.timesheetTileTableBodyHeadHovered : Styles.timesheetTileTableBodyHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, timesheet.timesheetTimePeriod), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, getMMMDDYYYY(date)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: download,\n        style: Styles.redX,\n        alt: \"download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    });\n  }\n\n  renderHoverTable() {\n    return React.createElement(\"table\", {\n      style: Styles.timesheetTileTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      style: Styles.timesheetTileTableBodyHead,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Time Period\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submittal Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      style: Styles.timesheetTileTableBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderTimesheetsTableData()));\n  }\n\n  render() {\n    const employee = this.props.employee;\n    const hover = this.state.hover;\n    return React.createElement(\"div\", {\n      style: hover ? Styles.adminTimesheetTileHover : Styles.adminTimesheetTile,\n      onMouseEnter: () => this.setState({\n        hover: true\n      }),\n      onMouseLeave: () => this.setState({\n        hover: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, employee.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, employee.email), this.renderTimesheetMessage(), hover && this.renderHoverTable());\n  }\n\n}\n\nAdminTimesheetTile.propTypes = {\n  employee: PropTypes.object.isRequired\n};\nexport default AdminTimesheetTile;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/Admin/AdminTimesheetTile/AdminTimesheetTile.js"],"names":["React","Component","PropTypes","Styles","firebase","getMMMDDYYYY","download","AdminTimesheetTile","constructor","props","state","timesheets","timesheetRowHovered","hover","componentDidMount","employee","timesheetArr","database","ref","uid","once","then","timesheetSnapshot","val","Object","keys","map","key","setState","renderTimesheetMessage","length","renderTimesheetsTableData","timesheet","index","date","Date","parseInt","timestamp","timesheetTileTableBodyHeadHovered","timesheetTileTableBodyHead","timesheetTimePeriod","redX","renderHoverTable","timesheetTileTable","timesheetTileTableBody","render","adminTimesheetTileHover","adminTimesheetTile","name","email","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Styles from '../../DashboardLayoutStyles'\nimport firebase from '../../../../Firebase/index'\nimport { getMMMDDYYYY } from '../../../../helpers/CalendarHelpers'\nimport download from '../../../../download.png'\n\nclass AdminTimesheetTile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheets: [],\n      timesheetRowHovered: null,\n      hover: false\n    }\n  }\n\n  componentDidMount() {\n    const { employee } = this.props\n    let timesheetArr = []\n    firebase.database().ref(`/user-timesheets/${employee.uid}`).once('value').then(timesheetSnapshot => {\n      if (!timesheetSnapshot.val()) return\n      Object.keys(timesheetSnapshot.val()).map(key => {\n        timesheetArr = [...timesheetArr, timesheetSnapshot.val()[key]]\n        // eslint-disable-next-line no-useless-return\n        return\n      })\n      this.setState({ timesheets: timesheetArr })\n    })\n  }\n\n  renderTimesheetMessage() {\n    const { timesheets } = this.state\n    return (\n      <p>{timesheets.length}</p>\n    )\n  }\n\n  renderTimesheetsTableData() {\n    const { timesheets, timesheetRowHovered } = this.state\n    return timesheets.map((timesheet, index) => {\n      // eslint-disable-next-line radix\n      const date = new Date(parseInt(timesheet.timestamp))\n      return (\n        <tr\n          onMouseEnter={() => this.setState({ timesheetRowHovered: index })}\n          onMouseLeave={() => this.setState({ timesheetRowHovered: null })}\n          style={timesheetRowHovered === index ? Styles.timesheetTileTableBodyHeadHovered : Styles.timesheetTileTableBodyHead}\n        >\n          <td>{timesheet.timesheetTimePeriod}</td>\n          <td>{getMMMDDYYYY(date)}</td>\n          <td><img src={download} style={Styles.redX} alt=\"download\" /></td>\n        </tr>\n      )\n    })\n  }\n\n  renderHoverTable() {\n    return (\n      <table style={Styles.timesheetTileTable}>\n        <thead style={Styles.timesheetTileTableBodyHead}>\n          <tr>\n            <td>Time Period</td>\n            <td>Submittal Date</td>\n            <td></td>\n          </tr>\n        </thead>\n        <tbody style={Styles.timesheetTileTableBody}>\n          {this.renderTimesheetsTableData()}\n        </tbody>\n      </table>\n    )\n  }\n\n  render() {\n    const { employee } = this.props\n    const { hover } = this.state\n    return (\n      <div\n        style={hover ? Styles.adminTimesheetTileHover : Styles.adminTimesheetTile}\n        onMouseEnter={() => this.setState({ hover: true })}\n        onMouseLeave={() => this.setState({ hover: false })}\n      >\n        <p>{employee.name}</p>\n        <p>{employee.email}</p>\n        {this.renderTimesheetMessage()}\n        { hover && this.renderHoverTable() }\n      </div>\n    )\n  }\n}\n\nAdminTimesheetTile.propTypes = {\n  employee: PropTypes.object.isRequired\n}\n\nexport default AdminTimesheetTile\n"]},"metadata":{},"sourceType":"module"}