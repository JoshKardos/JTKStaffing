{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FileUploader from 'react-firebase-file-uploader';\nimport Generator from 'generate-password'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\n\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport Loader from 'react-loader-spinner';\nimport firebase from '../../Firebase/index';\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport RecentTimesheet from './Worker/RecentTimesheet/RecentTimesheet';\nimport AdminTimesheetTile from './Admin/AdminTimesheetTile/AdminTimesheetTile';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\nimport { validateEmail } from '../../helpers/UserHelpers';\nconst AdminLayouts = {\n  HOME: 'HOME',\n  TIMESHEETS: 'TIMESHEETS',\n  EMPLOYEES: 'EMPLOYEES',\n  SETTINGS: 'SETTINGS'\n};\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startUploadManually = () => {\n      const setTimesheetFileError = this.props.setTimesheetFileError;\n      const timesheetFile = this.state.timesheetFile;\n\n      if (!navigator.onLine) {\n        setTimesheetFileError({\n          payload: 'Check internet connection...'\n        });\n        return;\n      }\n\n      this.fileUploader.startUpload(timesheetFile);\n    };\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.handleNameChange = evt => {\n      this.setState({\n        name: evt.target.value\n      });\n    };\n\n    this.handleEmailChange = evt => {\n      this.setState({\n        email: evt.target.value\n      });\n    };\n\n    this.handlePassChange = evt => {\n      this.setState({\n        password: evt.target.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            password = _this$state.password;\n      const _this$props = this.props,\n            signUpWorker = _this$props.signUpWorker,\n            setSignUpError = _this$props.setSignUpError;\n      evt.preventDefault();\n\n      if (!name.replace(/\\s+/g, '')) {\n        const action = {\n          payload: 'Name is required'\n        };\n        return setSignUpError(action);\n      }\n\n      if (!email.replace(/\\s+/g, '')) {\n        const action = {\n          payload: 'Email is required'\n        };\n        return setSignUpError(action);\n      }\n\n      if (!password.replace(/\\s+/g, '')) {\n        const action = {\n          payload: 'Password is required'\n        };\n        return setSignUpError(action);\n      }\n\n      if (!validateEmail(email)) {\n        const action = {\n          payload: 'Invalid email'\n        };\n        return setSignUpError(action);\n      }\n\n      const action = {\n        name,\n        email,\n        password\n      };\n      return signUpWorker(action);\n    };\n\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminLayout: AdminLayouts.HOME,\n      // Add employee state\n      shouldShowAddEmployee: false,\n      email: '',\n      password: '',\n      name: ''\n    };\n    this.fileUploader = null;\n  }\n\n  componentDidMount() {\n    const employees = this.props.employees;\n    employees.map(employee => {});\n  }\n\n  clearFields() {\n    this.setState({\n      timesheetFile: null,\n      selectedDays: [],\n      hoverRange: null\n    });\n  }\n\n  addEmployeeClicked() {\n    // const { addEmployeeUnderAdmin } = this.props\n    this.setState({\n      shouldShowAddEmployee: true,\n      password: Generator.generate({\n        length: 10\n      })\n    }); // return addEmployeeUnderAdmin\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      onMouseEnter: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }));\n  }\n\n  renderRecentTimesheets() {\n    const recentlySubmittedTimesheets = this.props.recentlySubmittedTimesheets;\n\n    if (recentlySubmittedTimesheets.length > 0) {\n      return React.createElement(\"ul\", {\n        style: Styles.recentTimesheetsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, recentlySubmittedTimesheets.map(timesheet => React.createElement(RecentTimesheet, {\n        timesheet: timesheet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })));\n    }\n\n    return null;\n  }\n\n  renderSubmitLayout() {\n    const _this$props2 = this.props,\n          userState = _this$props2.userState,\n          saveToDatabase = _this$props2.saveToDatabase,\n          timesheetUploadError = _this$props2.timesheetUploadError,\n          timesheetUploadStart = _this$props2.timesheetUploadStart,\n          timesheetUploading = _this$props2.timesheetUploading;\n    const _this$state2 = this.state,\n          timesheetFile = _this$state2.timesheetFile,\n          hoverRange = _this$state2.hoverRange,\n          selectedDays = _this$state2.selectedDays,\n          timesheetTimestamp = _this$state2.timesheetTimestamp;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: Styles.RecentlySubmittedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.RecentlySubmittedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Recently Submitted\"), this.renderRecentTimesheets()), React.createElement(\"div\", {\n      style: Styles.SubmitContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      onClick: this.startUploadManually,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, !timesheetUploading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Submit\"), timesheetUploading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), selectedDays.length > 0 && React.createElement(FileUploader, {\n      ref: instance => {\n        this.fileUploader = instance;\n      },\n      onChange: event => this.setState({\n        timesheetFile: event.target.files[0],\n        timesheetTimestamp: Date.now()\n      }),\n      accept: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n      ,\n      storageRef: firebase.storage().ref(`timesheets/${userState.id}`),\n      filename: timesheetTimestamp,\n      onUploadStart: timesheetUploadStart,\n      onUploadError: timesheetUploadError,\n      onUploadSuccess: (filename, task) => {\n        this.clearFields();\n        const timesheetTimePeriod = daysSelectedText;\n        const filepath = task.snapshot.metadata.fullPath;\n        const timestamp = task.snapshot.metadata.name.split('.')[0];\n        const id = timestamp;\n        const userId = userState.id;\n        const action = {\n          timesheetTimePeriod,\n          filepath,\n          id,\n          userId,\n          timestamp\n        };\n        return saveToDatabase(action);\n      },\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })));\n  }\n\n  renderAdminSidePanel() {\n    return React.createElement(\"div\", {\n      style: Styles.adminSidePanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.HOME\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.TIMESHEETS\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"View Timesheets\"), React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.EMPLOYEES\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"View Employees\"), React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.adminSidePanelButton,\n      onClick: () => this.setState({\n        currentAdminLayout: AdminLayouts.SETTINGS\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Settings\"));\n  }\n\n  renderAdminHomeLayout() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Home\");\n  }\n\n  renderAdminEmployeesTableData() {\n    const employees = this.props.employees;\n    if (!employees) return null;\n    return employees.map(employee => React.createElement(\"tr\", {\n      key: employee.uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, employee.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, employee.name)));\n  }\n\n  renderAddEmployeeLayout() {\n    const isLoading = this.props.isLoading;\n    const _this$state3 = this.state,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          name = _this$state3.name;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"NameLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      className: \"NameInput\",\n      type: \"text\",\n      value: name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EmailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"EmailLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      className: \"EmailInput\",\n      type: \"text\",\n      value: email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PasswordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"PasswordLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      className: \"PasswordInput\",\n      value: password,\n      onChange: this.handlePassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"SubmitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, !isLoading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Sign Up\"), isLoading && React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 40,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))));\n  }\n\n  renderAdminEmployeesLayout() {\n    const shouldShowAddEmployee = this.state.shouldShowAddEmployee;\n    return React.createElement(\"div\", {\n      style: Styles.adminEmployeesLayoutContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: Styles.employeesTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: Styles.employeesTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"td\", {\n      style: Styles.employeesTableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, this.renderAdminEmployeesTableData())), React.createElement(\"button\", {\n      style: Styles.addEmployeeButton,\n      type: \"button\",\n      onClick: () => this.addEmployeeClicked(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Add Employee\"), shouldShowAddEmployee && this.renderAddEmployeeLayout());\n  }\n\n  renderAdminSettingsLayout() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Settings\");\n  }\n\n  renderAdminTimesheets() {\n    const allTimesheets = this.state.allTimesheets;\n    const employees = this.props.employees;\n    return employees.map(employee => React.createElement(AdminTimesheetTile, {\n      employee: employee,\n      allTimesheets: allTimesheets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }));\n  }\n\n  renderFilterAdminTimesheets() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Filter employees by submittal date:\"));\n  }\n\n  renderAdminTimesheetsLayout() {\n    return React.createElement(\"div\", {\n      style: Styles.adminEmployeesLayoutContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.timesheetHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \" Timesheets\"), this.renderFilterAdminTimesheets(), React.createElement(\"div\", {\n      style: Styles.adminTimesheetsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, this.renderAdminTimesheets()));\n  }\n\n  renderAdminContent() {\n    const currentAdminLayout = this.state.currentAdminLayout;\n\n    if (currentAdminLayout === AdminLayouts.HOME) {\n      return this.renderAdminHomeLayout();\n    }\n\n    if (currentAdminLayout === AdminLayouts.TIMESHEETS) {\n      return this.renderAdminTimesheetsLayout();\n    }\n\n    if (currentAdminLayout === AdminLayouts.EMPLOYEES) {\n      return this.renderAdminEmployeesLayout();\n    }\n\n    if (currentAdminLayout === AdminLayouts.SETTINGS) {\n      return this.renderAdminSettingsLayout();\n    }\n\n    return null;\n  }\n\n  renderAdminLayout() {\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, this.renderAdminSidePanel(), this.renderAdminContent());\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (!isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    if (isAdmin) {\n      return this.renderAdminLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  recentlySubmittedTimesheets: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  signUpWorker: PropTypes.func.isRequired,\n  employees: PropTypes.array.isRequired,\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FileUploader","Generator","DayPicker","Loader","firebase","getWeekDays","getWeekRange","RecentTimesheet","AdminTimesheetTile","redX","greenCheck","Styles","validateEmail","AdminLayouts","HOME","TIMESHEETS","EMPLOYEES","SETTINGS","DashboardLayout","constructor","props","startUploadManually","setTimesheetFileError","timesheetFile","state","navigator","onLine","payload","fileUploader","startUpload","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","handleNameChange","evt","name","target","value","handleEmailChange","email","handlePassChange","password","handleSubmit","signUpWorker","setSignUpError","preventDefault","replace","action","timesheetTimestamp","currentAdminLayout","shouldShowAddEmployee","componentDidMount","employees","map","employee","clearFields","addEmployeeClicked","generate","length","renderFileName","FileName","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","toggleHover","renderRecentTimesheets","recentlySubmittedTimesheets","recentTimesheetsList","timesheet","renderSubmitLayout","userState","saveToDatabase","timesheetUploadError","timesheetUploadStart","timesheetUploading","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DasboardContainer","RecentlySubmittedContainer","RecentlySubmittedText","SubmitContainer","StepsList","SubmitTimesheetButton","CalendarContainer","instance","event","files","Date","now","storage","ref","id","filename","task","timesheetTimePeriod","filepath","snapshot","metadata","fullPath","timestamp","split","userId","handleProgress","renderAdminSidePanel","adminSidePanel","adminSidePanelButton","renderAdminHomeLayout","renderAdminEmployeesTableData","uid","renderAddEmployeeLayout","isLoading","renderAdminEmployeesLayout","adminEmployeesLayoutContainer","employeesTable","employeesTableCell","addEmployeeButton","renderAdminSettingsLayout","renderAdminTimesheets","allTimesheets","renderFilterAdminTimesheets","renderAdminTimesheetsLayout","timesheetHeader","adminTimesheetsContainer","renderAdminContent","renderAdminLayout","render","isAdmin","propTypes","array","isRequired","bool","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport FileUploader from 'react-firebase-file-uploader'\nimport Generator from 'generate-password'\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport Loader from 'react-loader-spinner'\nimport firebase from '../../Firebase/index'\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport RecentTimesheet from './Worker/RecentTimesheet/RecentTimesheet'\nimport AdminTimesheetTile from './Admin/AdminTimesheetTile/AdminTimesheetTile'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\nimport { validateEmail } from '../../helpers/UserHelpers'\n\nconst AdminLayouts = {\n  HOME: 'HOME',\n  TIMESHEETS: 'TIMESHEETS',\n  EMPLOYEES: 'EMPLOYEES',\n  SETTINGS: 'SETTINGS'\n}\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetTimestamp: null,\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: [],\n      currentAdminLayout: AdminLayouts.HOME,\n\n      // Add employee state\n      shouldShowAddEmployee: false,\n      email: '',\n      password: '',\n      name: ''\n    }\n    this.fileUploader = null\n  }\n\n  componentDidMount() {\n    const { employees } = this.props\n    employees.map(employee => {\n\n    })\n  }\n\n  startUploadManually = () => {\n    const { setTimesheetFileError } = this.props\n    const { timesheetFile } = this.state;\n\n    if (!navigator.onLine) {\n      setTimesheetFileError({ payload: 'Check internet connection...' })\n      return\n    }\n    this.fileUploader.startUpload(timesheetFile)\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  handleNameChange = (evt) => {\n    this.setState({\n      name: evt.target.value\n    })\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value\n    })\n  }\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value\n    })\n  }\n\n  handleSubmit = (evt) => {\n    const { name, email, password } = this.state\n    const { signUpWorker, setSignUpError } = this.props\n    evt.preventDefault()\n\n    if (!name.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Name is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!email.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Email is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!password.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Password is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!validateEmail(email)) {\n      const action = {\n        payload: 'Invalid email'\n      }\n      return setSignUpError(action)\n    }\n    const action = {\n      name,\n      email,\n      password\n    }\n    return signUpWorker(action)\n  }\n\n  clearFields() {\n    this.setState({ timesheetFile: null, selectedDays: [], hoverRange: null })\n  }\n\n  addEmployeeClicked() {\n    // const { addEmployeeUnderAdmin } = this.props\n    this.setState({ shouldShowAddEmployee: true, password: Generator.generate({ length: 10 }) })\n    // return addEmployeeUnderAdmin\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow} onMouseEnter={this.toggleHover}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderRecentTimesheets() {\n    const { recentlySubmittedTimesheets } = this.props\n    if (recentlySubmittedTimesheets.length > 0) {\n      return <ul style={Styles.recentTimesheetsList}>\n        { recentlySubmittedTimesheets.map(timesheet => <RecentTimesheet timesheet={timesheet} />) }\n      </ul>\n    }\n    return null\n  }\n\n  renderSubmitLayout() {\n    const { userState, saveToDatabase, timesheetUploadError, timesheetUploadStart, timesheetUploading } = this.props\n    const { timesheetFile, hoverRange, selectedDays, timesheetTimestamp } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DasboardContainer}>\n        <div style={Styles.RecentlySubmittedContainer}>\n          <p style={Styles.RecentlySubmittedText}>Recently Submitted</p>\n          {this.renderRecentTimesheets()}\n        </div>\n        <div style={Styles.SubmitContainer}>\n          <h2>Submit</h2>\n          <div style={Styles.StepsList}>\n            {/* FIRST STEP */ }\n            {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n            {/* SECOND STEP */}\n            {this.renderSecondStep()}\n            {/* SUBMIT BUTTON */}\n            { timesheetFile && daysAreSelected &&\n              <button type=\"button\" style={Styles.SubmitTimesheetButton} onClick={this.startUploadManually}>\n                { !timesheetUploading && <p>Submit</p> }\n                { timesheetUploading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n              </button> }\n          </div>\n          <div style={Styles.CalendarContainer}>\n            <DayPicker\n              selectedDays={selectedDays}\n              showWeekNumbers\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={this.handleDayChange}\n              onDayMouseEnter={this.handleDayEnter}\n              onDayMouseLeave={this.handleDayLeave}\n              onWeekClick={this.handleWeekClick}\n            />\n          </div>\n          { selectedDays.length > 0 &&\n            <FileUploader\n              ref={instance => { this.fileUploader = instance }}\n              onChange={event => this.setState({ timesheetFile: event.target.files[0], timesheetTimestamp: Date.now() })}\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" // only .xlsx\n              storageRef={firebase.storage().ref(`timesheets/${userState.id}`)}\n              filename={timesheetTimestamp}\n              onUploadStart={timesheetUploadStart}\n              onUploadError={timesheetUploadError}\n              onUploadSuccess={(filename, task) => {\n                this.clearFields()\n                const timesheetTimePeriod = daysSelectedText\n                const filepath = task.snapshot.metadata.fullPath\n                const timestamp = task.snapshot.metadata.name.split('.')[0]\n                const id = timestamp\n                const userId = userState.id\n                const action = {\n                  timesheetTimePeriod,\n                  filepath,\n                  id,\n                  userId,\n                  timestamp\n                }\n                return saveToDatabase(action)\n              }}\n              onProgress={this.handleProgress}\n            />}\n        </div>\n      </div>\n    )\n  }\n\n  renderAdminSidePanel() {\n    return (\n      <div style={Styles.adminSidePanel}>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.HOME })}>Home</button>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.TIMESHEETS })}>View Timesheets</button>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.EMPLOYEES })}>View Employees</button>\n        <button type=\"button\" style={Styles.adminSidePanelButton} onClick={() => this.setState({ currentAdminLayout: AdminLayouts.SETTINGS })}>Settings</button>\n      </div>\n    )\n  }\n\n  renderAdminHomeLayout() {\n    return (\n      <p>Home</p>\n    )\n  }\n\n  renderAdminEmployeesTableData() {\n    const { employees } = this.props\n    if (!employees) return null\n    return employees.map(employee => (\n      <tr key={employee.uid}>\n        <td>{employee.email}</td>\n        <td>{employee.name}</td>\n      </tr>\n    ))\n  }\n\n  renderAddEmployeeLayout() {\n    const { isLoading } = this.props\n    const { email, password, name } = this.state\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"NameContainer\">\n            <label className=\"NameLabel\">Name:</label>\n            <input className=\"NameInput\" type=\"text\" value={name} onChange={this.handleNameChange} />\n          </div>\n          <div className=\"EmailContainer\">\n            <label className=\"EmailLabel\">Email:</label>\n            <input className=\"EmailInput\" type=\"text\" value={email} onChange={this.handleEmailChange} />\n          </div>\n          <div className=\"PasswordContainer\">\n            <label className=\"PasswordLabel\">Password:</label>\n            <input className=\"PasswordInput\" value={password} onChange={this.handlePassChange} />\n          </div>\n          <button className=\"SubmitButton\" type=\"submit\">\n            { !isLoading && <p>Sign Up</p> }\n            { isLoading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n  renderAdminEmployeesLayout() {\n    const { shouldShowAddEmployee } = this.state\n    return (\n      <div style={Styles.adminEmployeesLayoutContainer}>\n        <table style={Styles.employeesTable}>\n          <thead>\n            <tr>\n              <td style={Styles.employeesTableCell}>Email address</td>\n              <td style={Styles.employeesTableCell}>Name</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderAdminEmployeesTableData()}\n          </tbody>\n        </table>\n        <button style={Styles.addEmployeeButton} type=\"button\" onClick={() => this.addEmployeeClicked()}>Add Employee</button>\n        { shouldShowAddEmployee && this.renderAddEmployeeLayout() }\n      </div>\n    )\n  }\n\n  renderAdminSettingsLayout() {\n    return (\n      <p>Settings</p>\n    )\n  }\n\n  renderAdminTimesheets() {\n    const { allTimesheets } = this.state\n    const { employees } = this.props\n    return employees.map(employee => <AdminTimesheetTile employee={employee} allTimesheets={allTimesheets} />)\n  }\n\n  renderFilterAdminTimesheets() {\n    return (\n      <div>\n        <p>Filter employees by submittal date:</p>\n      </div>\n    )\n  }\n\n  renderAdminTimesheetsLayout() {\n    return (\n      <div style={Styles.adminEmployeesLayoutContainer}>\n        <p style={Styles.timesheetHeader}> Timesheets</p>\n        {this.renderFilterAdminTimesheets()}\n        <div style={Styles.adminTimesheetsContainer}>\n          {this.renderAdminTimesheets()}\n        </div>\n      </div>\n    )\n  }\n\n  renderAdminContent() {\n    const { currentAdminLayout } = this.state\n    if (currentAdminLayout === AdminLayouts.HOME) {\n      return this.renderAdminHomeLayout()\n    }\n    if (currentAdminLayout === AdminLayouts.TIMESHEETS) {\n      return this.renderAdminTimesheetsLayout()\n    }\n    if (currentAdminLayout === AdminLayouts.EMPLOYEES) {\n      return this.renderAdminEmployeesLayout()\n    }\n    if (currentAdminLayout === AdminLayouts.SETTINGS) {\n      return this.renderAdminSettingsLayout()\n    }\n    return null\n  }\n\n  renderAdminLayout() {\n    return (\n      <div style={Styles.DasboardContainer}>\n        {this.renderAdminSidePanel()}\n        {this.renderAdminContent()}\n      </div>\n    )\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (!isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    if (isAdmin) {\n      return (\n        this.renderAdminLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  recentlySubmittedTimesheets: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired,\n  signUpWorker: PropTypes.func.isRequired,\n  employees: PropTypes.array.isRequired,\n  userState: PropTypes.object.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired,\n  saveToDatabase: PropTypes.func.isRequired,\n  timesheetUploadError: PropTypes.func.isRequired,\n  timesheetUploadStart: PropTypes.func.isRequired,\n  timesheetUploading: PropTypes.bool.isRequired,\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}