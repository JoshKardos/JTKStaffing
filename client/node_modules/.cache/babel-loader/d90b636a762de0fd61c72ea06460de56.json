{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => dispatch => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    console.log('here');\n    return {\n      type: ''\n    };\n  }).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"error\");\n      return dispatch({\n        type: ErrorTypes.SET_ERROR,\n        payload: error\n      });\n    }\n  });\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","dispatch","map","mapTo","TYPES","UserTypes","ErrorTypes","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","auth","createUserWithEmailAndPassword","then","console","log","type","catch","error","errorCode","code","errorMessage","message","SET_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,gBAA3B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCV,MAAM,CAACK,SAAS,CAACM,OAAX,CAD6B,EAEnCT,GAAG,CAACU,MAAM,IAAIX,QAAQ,IAAI;AAAA,QAChBY,KADgB,GACND,MAAM,CAACE,OADD,CAChBD,KADgB;AAAA,QAEhBE,QAFgB,GAEHH,MAAM,CAACE,OAFJ,CAEhBC,QAFgB,EAGxB;;AACAR,EAAAA,QAAQ,CAACS,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,EAAgEG,IAAhE,CAAqE,MAAM;AACzEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAHD,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAClB;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAOnB,QAAQ,CAAC;AAAEoB,QAAAA,IAAI,EAAEf,UAAU,CAACsB,SAAnB;AAA8Bd,QAAAA,OAAO,EAAES;AAAvC,OAAD,CAAf;AAED;AACF,GAZD;AAaA,SAAO;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAlBE,CAFgC,CAA9B;AAuBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { map, mapTo } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => dispatch => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      console.log('here')\n      return { type: '' }\n    }).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code\n        const errorMessage = error.message\n        console.log(\"error\")\n        return dispatch({ type: ErrorTypes.SET_ERROR, payload: error })\n\n      }\n    })\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}