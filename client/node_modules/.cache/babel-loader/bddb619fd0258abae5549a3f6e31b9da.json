{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password;\n  return {\n    type: ErrorTypes.SET_ERROR,\n    payload: 'ERROR'\n  };\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    console.log('here');\n    return {\n      type: ''\n    };\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(\"error\");\n    const action = {\n      payload: errorMessage\n    };\n    return {\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    };\n  });\n  console.log(\"HERE\");\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","ErrorTypes","setError","firebase","signUpEpic","action$","pipe","SIGN_UP","action","email","payload","password","type","SET_ERROR","auth","createUserWithEmailAndPassword","then","console","log","catch","error","errorCode","code","errorMessage","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCT,MAAM,CAACG,SAAS,CAACO,OAAX,CAD6B,EAEnCT,GAAG,CAACU,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACE,OADb,CACJD,KADI;AAAA,QAEJE,QAFI,GAESH,MAAM,CAACE,OAFhB,CAEJC,QAFI;AAGZ,SAAO;AAAEC,IAAAA,IAAI,EAAEX,UAAU,CAACY,SAAnB;AAA8BH,IAAAA,OAAO,EAAE;AAAvC,GAAP;AACAP,EAAAA,QAAQ,CAACW,IAAT,GAAgBC,8BAAhB,CAA+CN,KAA/C,EAAsDE,QAAtD,EAAgEK,IAAhE,CAAqE,MAAM;AACzEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAHD,EAGGO,KAHH,CAGUC,KAAD,IAAW;AAClB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMV,MAAM,GAAG;AACbE,MAAAA,OAAO,EAAEa;AADI,KAAf;AAGA,WAAO;AAAEX,MAAAA,IAAI,EAAEX,UAAU,CAACY,SAAnB;AAA8BH,MAAAA,OAAO,EAAEa;AAAvC,KAAP;AACD,GAZD;AAaAN,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAnBE,CAFgC,CAA9B;AAwBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes, setError } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      console.log('here')\n      return { type: '' }\n    }).catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code\n      const errorMessage = error.message\n      console.log(\"error\")\n      const action = {\n        payload: errorMessage\n      }\n      return { type: ErrorTypes.SET_ERROR, payload: errorMessage }\n    })\n    console.log(\"HERE\")\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}