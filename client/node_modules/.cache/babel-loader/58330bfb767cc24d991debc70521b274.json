{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FileUploader from 'react-firebase-file-uploader'; // import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\n\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\n\nimport firebase from '../../Firebase/index';\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers';\nimport redX from '../../redX.png';\nimport greenCheck from '../../greenCheck.jpg';\nimport Styles from './DashboardLayoutStyles';\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDayChange = date => {\n      this.setState({\n        selectedDays: getWeekDays(getWeekRange(date).from)\n      });\n    };\n\n    this.handleDayEnter = date => {\n      this.setState({\n        hoverRange: getWeekRange(date)\n      });\n    };\n\n    this.handleDayLeave = () => {\n      this.setState({\n        hoverRange: null // cahnge this\n\n      });\n    };\n\n    this.handleWeekClick = (weekNumber, days) => {\n      this.setState({\n        selectedDays: days\n      });\n    };\n\n    this.startUploadManually = () => {\n      const files = this.state.files;\n      files.forEach(file => {\n        this.fileUploader.startUpload(file);\n      });\n    };\n\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    };\n  }\n\n  renderFileName() {\n    const timesheetFile = this.state.timesheetFile;\n    return React.createElement(\"p\", {\n      style: Styles.FileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, timesheetFile.name);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"1. \", daysSelectedText), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"1. Select your time period\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n  renderSecondStep() {\n    const timesheetFile = this.state.timesheetFile;\n\n    if (timesheetFile) {\n      return React.createElement(\"div\", {\n        style: Styles.StepRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"2. \", timesheetFile.name), React.createElement(\"img\", {\n        src: greenCheck,\n        style: Styles.redX,\n        alt: \"redX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: Styles.StepRow,\n      onMouseEnter: this.toggleHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"2. Upload excel file (xlsx)\"), React.createElement(\"img\", {\n      src: redX,\n      style: Styles.redX,\n      alt: \"redX\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  } // renderRecentStands() {\n  //   return null\n  // }\n\n\n  renderSubmitLayout() {\n    const _this$props = this.props,\n          setTimesheetFileError = _this$props.setTimesheetFileError,\n          uploadTimesheet = _this$props.uploadTimesheet;\n    const _this$state = this.state,\n          timesheetFile = _this$state.timesheetFile,\n          hoverRange = _this$state.hoverRange,\n          selectedDays = _this$state.selectedDays;\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`;\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6]\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6]\n    };\n    return React.createElement(\"div\", {\n      style: Styles.DasboardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: Styles.RecentlySubmittedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: Styles.RecentlySubmittedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Recently Submitted\")), React.createElement(\"div\", {\n      style: Styles.SubmitContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"div\", {\n      style: Styles.StepsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.renderFirstStep(daysAreSelected, daysSelectedText), this.renderSecondStep(), timesheetFile && daysAreSelected && React.createElement(\"button\", {\n      type: \"button\",\n      style: Styles.SubmitTimesheetButton,\n      onClick: this.startUploadManually,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      style: Styles.CalendarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      selectedDays: selectedDays,\n      showWeekNumbers: true,\n      showOutsideDays: true,\n      modifiers: modifiers,\n      onDayClick: this.handleDayChange,\n      onDayMouseEnter: this.handleDayEnter,\n      onDayMouseLeave: this.handleDayLeave,\n      onWeekClick: this.handleWeekClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(FileUploader, {\n      ref: instance => {\n        this.fileUploader = instance;\n      },\n      onChange: event => this.setState({\n        timesheetFile: event.target.files[0]\n      }),\n      accept: \"text/*\",\n      name: \"avatar\",\n      randomizeFilename: true,\n      storageRef: firebase.storage().ref(\"timesheets\"),\n      onUploadStart: this.handleUploadStart,\n      onUploadError: this.handleUploadError,\n      onUploadSuccess: this.handleUploadSuccess,\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const isAdmin = this.props.isAdmin;\n\n    if (isAdmin) {\n      return this.renderSubmitLayout();\n    }\n\n    return null;\n  }\n\n}\n\nDashboardLayout.propTypes = {\n  uploadTimesheet: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","moment","FileUploader","DayPicker","firebase","getWeekDays","getWeekRange","redX","greenCheck","Styles","DashboardLayout","constructor","props","handleDayChange","date","setState","selectedDays","from","handleDayEnter","hoverRange","handleDayLeave","handleWeekClick","weekNumber","days","startUploadManually","files","state","forEach","file","fileUploader","startUpload","timesheetFile","renderFileName","FileName","name","renderFirstStep","daysAreSelected","daysSelectedText","StepRow","renderSecondStep","toggleHover","renderSubmitLayout","setTimesheetFileError","uploadTimesheet","length","format","modifiers","selectedRange","to","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","DasboardContainer","RecentlySubmittedContainer","RecentlySubmittedText","SubmitContainer","StepsList","SubmitTimesheetButton","CalendarContainer","instance","event","target","storage","ref","handleUploadStart","handleUploadError","handleUploadSuccess","handleProgress","render","isAdmin","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport FileUploader from 'react-firebase-file-uploader';\n// import Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\n// import DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n// import 'react-datepicker/dist/react-datepicker.css';\n// import ReactDataSheet from 'react-datasheet';\n// // Be sure to include styles at some point, probably during your bootstrapping\n// import 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n// import { FilePicker } from 'react-file-picker'\nimport DayPicker from 'react-day-picker'; // https://react-day-picker.js.org/examples/selected-week\nimport firebase from '../../Firebase/index'\nimport 'react-day-picker/lib/style.css';\nimport { getWeekDays, getWeekRange } from '../../helpers/CalendarHelpers'\nimport redX from '../../redX.png'\nimport greenCheck from '../../greenCheck.jpg'\nimport Styles from './DashboardLayoutStyles'\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timesheetFile: null,\n      hoverRange: null,\n      selectedDays: []\n    }\n  }\n\n  handleDayChange = date => {\n    this.setState({\n      selectedDays: getWeekDays(getWeekRange(date).from),\n    })\n  }\n\n  handleDayEnter = date => {\n    this.setState({\n      hoverRange: getWeekRange(date),\n    })\n  }\n\n  handleDayLeave = () => {\n    this.setState({\n      hoverRange: null // cahnge this\n    })\n  }\n\n  handleWeekClick = (weekNumber, days) => {\n    this.setState({\n      selectedDays: days,\n    })\n  }\n\n  renderFileName() {\n    const { timesheetFile } = this.state\n    return (\n      <p style={Styles.FileName}>{timesheetFile.name}</p>\n    )\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  renderFirstStep(daysAreSelected, daysSelectedText) {\n    if (daysAreSelected) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>1. {daysSelectedText}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow}>\n        <h3>1. Select your time period</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  renderSecondStep() {\n    const { timesheetFile } = this.state\n    if (timesheetFile) {\n      return (\n        <div style={Styles.StepRow}>\n          <h3>2. {timesheetFile.name}</h3>\n          <img src={greenCheck} style={Styles.redX} alt=\"redX\" />\n        </div>\n      )\n    }\n    return (\n      <div style={Styles.StepRow} onMouseEnter={this.toggleHover}>\n        <h3>2. Upload excel file (xlsx)</h3>\n        <img src={redX} style={Styles.redX} alt=\"redX\" />\n      </div>\n    )\n  }\n\n  // renderRecentStands() {\n  //   return null\n  // }\n\n  renderSubmitLayout() {\n    const { setTimesheetFileError, uploadTimesheet } = this.props\n    const { timesheetFile, hoverRange, selectedDays } = this.state\n\n    const daysAreSelected = selectedDays.length > 0;\n    const daysSelectedText = `${moment(selectedDays[0]).format('LL')} â€“ ${moment(selectedDays[6]).format('LL')}`\n    const modifiers = {\n      hoverRange,\n      selectedRange: daysAreSelected && {\n        from: selectedDays[0],\n        to: selectedDays[6],\n      },\n      hoverRangeStart: hoverRange && hoverRange.from,\n      hoverRangeEnd: hoverRange && hoverRange.to,\n      selectedRangeStart: daysAreSelected && selectedDays[0],\n      selectedRangeEnd: daysAreSelected && selectedDays[6],\n    };\n    return (\n      <div style={Styles.DasboardContainer}>\n        <div style={Styles.RecentlySubmittedContainer}>\n          <p style={Styles.RecentlySubmittedText}>Recently Submitted</p>\n          {/* {this.renderRecentStands()} */}\n        </div>\n        <div style={Styles.SubmitContainer}>\n          <h2>Submit</h2>\n          <div style={Styles.StepsList}>\n            {/* FIRST STEP */ }\n            {this.renderFirstStep(daysAreSelected, daysSelectedText)}\n            {/* SECOND STEP */}\n            {this.renderSecondStep()}\n            {/* SUBMIT BUTTON */}\n            { timesheetFile && daysAreSelected &&\n              <button type=\"button\" style={Styles.SubmitTimesheetButton} onClick={this.startUploadManually}>\n                Submit\n              </button>\n            }\n          </div>\n          <div style={Styles.CalendarContainer}>\n            <DayPicker\n              selectedDays={selectedDays}\n              showWeekNumbers\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={this.handleDayChange}\n              onDayMouseEnter={this.handleDayEnter}\n              onDayMouseLeave={this.handleDayLeave}\n              onWeekClick={this.handleWeekClick}\n            />\n          </div>\n\n          <FileUploader\n            ref={instance => { this.fileUploader = instance }}\n            onChange={event => this.setState({ timesheetFile: event.target.files[0] })}\n            accept=\"text/*\"\n            name=\"avatar\"\n            randomizeFilename\n            storageRef={firebase.storage().ref(\"timesheets\")}\n            onUploadStart={this.handleUploadStart}\n            onUploadError={this.handleUploadError}\n            onUploadSuccess={this.handleUploadSuccess}\n            onProgress={this.handleProgress}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  startUploadManually = () => {\n    const { files } = this.state;\n    files.forEach(file => {\n      this.fileUploader.startUpload(file)\n    });\n  }\n\n  render() {\n    const { isAdmin } = this.props\n    if (isAdmin) {\n      return (\n        this.renderSubmitLayout()\n      )\n    }\n    return null\n  }\n}\n\nDashboardLayout.propTypes = {\n  uploadTimesheet: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  setTimesheetFileError: PropTypes.func.isRequired\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}