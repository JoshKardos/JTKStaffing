{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\n\nconst setError = errorMessage => {\n  return dispatch => {\n    dispatch({\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    });\n  };\n};\n\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n  const email = action.payload.email;\n  const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n  firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n    console.log('here');\n    return {\n      type: ''\n    };\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(\"error\");\n    const action = {\n      payload: errorMessage\n    };\n    setError(errorMessage);\n  });\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","dispatch","TYPES","UserTypes","ErrorTypes","firebase","setError","errorMessage","type","SET_ERROR","payload","signUpEpic","action$","pipe","SIGN_UP","action","email","password","auth","createUserWithEmailAndPassword","then","console","log","catch","error","errorCode","code","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACjC,SAAQN,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEJ,UAAU,CAACK,SAAnB;AAA8BC,MAAAA,OAAO,EAAEH;AAAvC,KAAD,CAAR;AACD,GAFD;AAGD,CAJD;;AAMA,OAAO,MAAMI,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCd,MAAM,CAACI,SAAS,CAACW,OAAX,CAD6B,EAEnCd,GAAG,CAACe,MAAM,IAAI;AAAA,QACJC,KADI,GACMD,MAAM,CAACL,OADb,CACJM,KADI;AAAA,QAEJC,QAFI,GAESF,MAAM,CAACL,OAFhB,CAEJO,QAFI,EAGZ;;AACAZ,EAAAA,QAAQ,CAACa,IAAT,GAAgBC,8BAAhB,CAA+CH,KAA/C,EAAsDC,QAAtD,EAAgEG,IAAhE,CAAqE,MAAM;AACzEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,WAAO;AAAEd,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAHD,EAGGe,KAHH,CAGUC,KAAD,IAAW;AAClB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMnB,YAAY,GAAGiB,KAAK,CAACG,OAA3B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMP,MAAM,GAAG;AACbL,MAAAA,OAAO,EAAEH;AADI,KAAf;AAGAD,IAAAA,QAAQ,CAACC,YAAD,CAAR;AACD,GAZD;AAaA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAlBE,CAFgC,CAA9B;AAuBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nconst setError = (errorMessage) => {\n  return (dispatch) => {\n    dispatch({ type: ErrorTypes.SET_ERROR, payload: errorMessage })\n  }\n}\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  map(action => {\n    const { email } = action.payload\n    const { password } = action.payload\n    // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      console.log('here')\n      return { type: '' }\n    }).catch((error) => {\n      // Handle Errors here.\n      const errorCode = error.code\n      const errorMessage = error.message\n      console.log(\"error\")\n      const action = {\n        payload: errorMessage\n      }\n      setError(errorMessage)\n    })\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}