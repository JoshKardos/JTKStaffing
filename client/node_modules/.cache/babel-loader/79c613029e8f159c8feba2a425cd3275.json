{"ast":null,"code":"import _classCallCheck from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'../LogIn/LoginLayoutStyles.css';import Loader from'react-loader-spinner';import{validateEmail}from'../../helpers/UserHelpers';var SignUpLayout=/*#__PURE__*/function(_Component){_inherits(SignUpLayout,_Component);function SignUpLayout(){var _this;_classCallCheck(this,SignUpLayout);_this=_possibleConstructorReturn(this,_getPrototypeOf(SignUpLayout).call(this));_this.handleSubmit=function(evt){var _this$state=_this.state,name=_this$state.name,email=_this$state.email,password=_this$state.password,company=_this$state.company,passwordConfirm=_this$state.passwordConfirm;var _this$props=_this.props,signUpAdmin=_this$props.signUpAdmin,setSignUpError=_this$props.setSignUpError;evt.preventDefault();if(!name.replace(/\\s+/g,'')){var _action={payload:'Name is required'};return setSignUpError(_action);}if(!email.replace(/\\s+/g,'')){var _action2={payload:'Email is required'};return setSignUpError(_action2);}if(!company.replace(/\\s+/g,'')){var _action3={payload:'Company is required'};return setSignUpError(_action3);}if(!password.replace(/\\s+/g,'')){var _action4={payload:'Password is required'};return setSignUpError(_action4);}if(!passwordConfirm.replace(/\\s+/g,'')){var _action5={payload:'Confirm password'};return setSignUpError(_action5);}if(password!==passwordConfirm){var _action6={payload:'Passwords do not match'};return setSignUpError(_action6);}if(!validateEmail(email)){var _action7={payload:'Invalid email'};return setSignUpError(_action7);}var action={name:name,email:email,password:password,company:company};return signUpAdmin(action);};_this.handleNameChange=function(evt){_this.setState({name:evt.target.value});};_this.handleEmailChange=function(evt){_this.setState({email:evt.target.value});};_this.handlePassChange=function(evt){_this.setState({password:evt.target.value});};_this.handlePassConfirmChange=function(evt){_this.setState({passwordConfirm:evt.target.value});};_this.handleCompanyChange=function(evt){_this.setState({company:evt.target.value});};_this.state={name:'',email:'',password:'',passwordConfirm:'',company:''};return _this;}_createClass(SignUpLayout,[{key:\"render\",value:function render(){// NOTE: I use data-attributes for easier E2E testing\n// but you don't need to target those (any css-selector will work)\nvar _this$state2=this.state,email=_this$state2.email,password=_this$state2.password,passwordConfirm=_this$state2.passwordConfirm,company=_this$state2.company,name=_this$state2.name;var isLoading=this.props.isLoading;return React.createElement(\"div\",{className:\"Container\"},React.createElement(\"div\",{className:\"Login\"},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"div\",{className:\"NameContainer\"},React.createElement(\"label\",{className:\"NameLabel\"},\"Name:\"),React.createElement(\"input\",{className:\"NameInput\",type:\"text\",\"data-test\":\"email\",value:name,onChange:this.handleNameChange})),React.createElement(\"div\",{className:\"EmailContainer\"},React.createElement(\"label\",{className:\"EmailLabel\"},\"Email:\"),React.createElement(\"input\",{className:\"EmailInput\",type:\"text\",\"data-test\":\"username\",value:email,onChange:this.handleEmailChange})),React.createElement(\"div\",{className:\"CompanyContainer\"},React.createElement(\"label\",{className:\"CompanyLabel\"},\"Company:\"),React.createElement(\"input\",{className:\"CompanyInput\",type:\"text\",\"data-test\":\"company\",value:company,onChange:this.handleCompanyChange})),React.createElement(\"div\",{className:\"PasswordContainer\"},React.createElement(\"label\",{className:\"PasswordLabel\"},\"Password:\"),React.createElement(\"input\",{className:\"PasswordInput\",type:\"password\",\"data-test\":\"password\",value:password,onChange:this.handlePassChange})),React.createElement(\"div\",{className:\"PasswordContainer2\"},React.createElement(\"label\",{className:\"PasswordLabel2\"},\"Password:\"),React.createElement(\"input\",{className:\"PasswordInput2\",type:\"password\",\"data-test\":\"password\",value:passwordConfirm,onChange:this.handlePassConfirmChange})),React.createElement(\"button\",{className:\"SubmitButton\",type:\"submit\"},!isLoading&&React.createElement(\"p\",null,\"Sign Up\"),isLoading&&React.createElement(Loader,{type:\"ThreeDots\",color:\"#00BFFF\",height:40,width:80})))));}}]);return SignUpLayout;}(Component);export default SignUpLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/SignUp/SignUpLayout.js"],"names":["React","Component","Loader","validateEmail","SignUpLayout","handleSubmit","evt","state","name","email","password","company","passwordConfirm","props","signUpAdmin","setSignUpError","preventDefault","replace","action","payload","handleNameChange","setState","target","value","handleEmailChange","handlePassChange","handlePassConfirmChange","handleCompanyChange","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../LogIn/LoginLayoutStyles.css'\nimport Loader from 'react-loader-spinner'\nimport { validateEmail } from '../../helpers/UserHelpers'\n\nclass SignUpLayout extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      company: ''\n    }\n  }\n\n  handleSubmit = (evt) => {\n    const { name, email, password, company, passwordConfirm } = this.state\n    const { signUpAdmin, setSignUpError } = this.props\n    evt.preventDefault()\n\n    if (!name.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Name is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!email.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Email is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!company.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Company is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!password.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Password is required'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!passwordConfirm.replace(/\\s+/g, '')) {\n      const action = {\n        payload: 'Confirm password'\n      }\n      return setSignUpError(action)\n    }\n\n    if (password !== passwordConfirm) {\n      const action = {\n        payload: 'Passwords do not match'\n      }\n      return setSignUpError(action)\n    }\n\n    if (!validateEmail(email)) {\n      const action = {\n        payload: 'Invalid email'\n      }\n      return setSignUpError(action)\n    }\n    const action = {\n      name,\n      email,\n      password,\n      company\n    }\n    return signUpAdmin(action)\n  }\n\n  handleNameChange = (evt) => {\n    this.setState({\n      name: evt.target.value\n    })\n  }\n\n  handleEmailChange = (evt) => {\n    this.setState({\n      email: evt.target.value\n    })\n  }\n\n  handlePassChange = (evt) => {\n    this.setState({\n      password: evt.target.value\n    })\n  }\n\n  handlePassConfirmChange = (evt) => {\n    this.setState({\n      passwordConfirm: evt.target.value\n    })\n  }\n\n  handleCompanyChange = (evt) => {\n    this.setState({\n      company: evt.target.value,\n    })\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n    const { email, password, passwordConfirm, company, name } = this.state\n    const { isLoading } = this.props\n    return (\n      <div className=\"Container\">\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"NameContainer\">\n              <label className=\"NameLabel\">Name:</label>\n              <input className=\"NameInput\" type=\"text\" data-test=\"email\" value={name} onChange={this.handleNameChange} />\n            </div>\n            <div className=\"EmailContainer\">\n              <label className=\"EmailLabel\">Email:</label>\n              <input className=\"EmailInput\" type=\"text\" data-test=\"username\" value={email} onChange={this.handleEmailChange} />\n            </div>\n            <div className=\"CompanyContainer\">\n              <label className=\"CompanyLabel\">Company:</label>\n              <input className=\"CompanyInput\" type=\"text\" data-test=\"company\" value={company} onChange={this.handleCompanyChange} />\n            </div>\n            <div className=\"PasswordContainer\">\n              <label className=\"PasswordLabel\">Password:</label>\n              <input className=\"PasswordInput\" type=\"password\" data-test=\"password\" value={password} onChange={this.handlePassChange} />\n            </div>\n            <div className=\"PasswordContainer2\">\n              <label className=\"PasswordLabel2\">Password:</label>\n              <input className=\"PasswordInput2\" type=\"password\" data-test=\"password\" value={passwordConfirm} onChange={this.handlePassConfirmChange} />\n            </div>\n            <button className=\"SubmitButton\" type=\"submit\">\n              { !isLoading && <p>Sign Up</p> }\n              { isLoading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={40} width={80} /> }\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nSignUpLayout.propTypes = {\n  signUpAdmin: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setSignUpError: PropTypes.func.isRequired\n}\n\nexport default SignUpLayout\n"]},"metadata":{},"sourceType":"module"}