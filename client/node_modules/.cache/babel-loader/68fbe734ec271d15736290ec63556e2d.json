{"ast":null,"code":"var _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/GenericErrorModal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './GenericErrorModalStyles.css';\n\nclass GenericErrorModal extends Component {\n  render() {\n    const _this$props = this.props,\n          errorDescription = _this$props.errorDescription,\n          setError = _this$props.setError;\n    return React.createElement(\"div\", {\n      className: \"Backdrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, errorDescription), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"OkayButton\",\n      onClick: resetError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Okay\")));\n  }\n\n}\n\nGenericErrorModal.propTypes = {\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired\n};\nexport default GenericErrorModal;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/GenericErrorModal.js"],"names":["React","Component","PropTypes","GenericErrorModal","render","props","errorDescription","setError","resetError","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,+BAAP;;AAEA,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AACxCG,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKC,KADrC;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBC,QADnB,eACmBA,QADnB;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,gBAA5B,CADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAA6C,MAAA,OAAO,EAAEE,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF;AAQD;;AAXuC;;AAc1CL,iBAAiB,CAACM,SAAlB,GAA8B;AAC5BH,EAAAA,gBAAgB,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UADP;AAE5BH,EAAAA,UAAU,EAAEN,SAAS,CAACU,IAAV,CAAeD;AAFC,CAA9B;AAKA,eAAeR,iBAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './GenericErrorModalStyles.css'\n\nclass GenericErrorModal extends Component {\n  render() {\n    const { errorDescription, setError } = this.props\n    return (\n      <div className=\"Backdrop\">\n        <div className=\"Modal\">\n          <p className=\"Description\">{errorDescription}</p>\n          <button type=\"button\" className=\"OkayButton\" onClick={resetError}>Okay</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nGenericErrorModal.propTypes = {\n  errorDescription: PropTypes.string.isRequired,\n  resetError: PropTypes.func.isRequired\n}\n\nexport default GenericErrorModal\n"]},"metadata":{},"sourceType":"module"}