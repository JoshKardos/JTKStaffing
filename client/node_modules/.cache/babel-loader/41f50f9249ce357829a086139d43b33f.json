{"ast":null,"code":"import _objectSpread from \"/Users/joshkardos/Desktop/JTKStaffing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Calendar from 'react-calendar'; // https://www.npmjs.com/package/react-calendar\n\nimport DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ReactDataSheet from 'react-datasheet'; // Be sure to include styles at some point, probably during your bootstrapping\n\nimport 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      startDate: new Date(),\n      grid: [[{\n        value: 1\n      }, {\n        value: 3\n      }], [{\n        value: 2\n      }, {\n        value: 4\n      }]]\n    };\n  }\n\n  render() {\n    console.log(this.state.startDate);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"DASHBOARDLAYOUT\"), React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Calendar, {\n      onChange: this.handleChange,\n      value: this.state.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(ReactDataSheet, {\n      data: this.state.grid,\n      valueRenderer: cell => cell.value,\n      onCellsChanged: changes => {\n        const grid = this.state.grid.map(row => [...row]);\n        changes.forEach(({\n          cell,\n          row,\n          col,\n          value\n        }) => {\n          grid[row][col] = _objectSpread({}, grid[row][col], {\n            value\n          });\n        });\n        this.setState({\n          grid\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nDashboardLayout.propTypes = {};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Containers/Dashboard/DashboardLayout.js"],"names":["React","Component","PropTypes","Calendar","DatePicker","ReactDataSheet","DashboardLayout","constructor","props","handleChange","date","setState","startDate","state","Date","grid","value","render","console","log","cell","changes","map","row","forEach","col","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAAsC;;AACtC,OAAOC,UAAP,MAAuB,kBAAvB,C,CAA2C;;AAC3C,OAAO,4CAAP;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;;AACA,OAAO,yCAAP,C,CAAkD;;AAElD,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJC,IAAI,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF;AADC,OAAd;AAGD,KAfkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE,IAAIE,IAAJ,EADA;AAEXC,MAAAA,IAAI,EAAE,CACJ,CAAC;AAACC,QAAAA,KAAK,EAAG;AAAT,OAAD,EAAc;AAACA,QAAAA,KAAK,EAAG;AAAT,OAAd,CADI,EAEJ,CAAC;AAACA,QAAAA,KAAK,EAAG;AAAT,OAAD,EAAc;AAACA,QAAAA,KAAK,EAAG;AAAT,OAAd,CAFI;AAFK,KAAb;AAOD;;AAQDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWD,SAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,SADvB;AAEE,MAAA,QAAQ,EAAE,KAAKH,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKA,YADjB;AAEE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWD,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWE,IADnB;AAEE,MAAA,aAAa,EAAGK,IAAD,IAAUA,IAAI,CAACJ,KAFhC;AAGE,MAAA,cAAc,EAAEK,OAAO,IAAI;AACzB,cAAMN,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAA3B,CAAb;AACAF,QAAAA,OAAO,CAACG,OAAR,CAAgB,CAAC;AAACJ,UAAAA,IAAD;AAAOG,UAAAA,GAAP;AAAYE,UAAAA,GAAZ;AAAiBT,UAAAA;AAAjB,SAAD,KAA6B;AAC3CD,UAAAA,IAAI,CAACQ,GAAD,CAAJ,CAAUE,GAAV,sBAAqBV,IAAI,CAACQ,GAAD,CAAJ,CAAUE,GAAV,CAArB;AAAqCT,YAAAA;AAArC;AACD,SAFD;AAGA,aAAKL,QAAL,CAAc;AAACI,UAAAA;AAAD,SAAd;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAwBD;;AA5CqC;;AA+CxCT,eAAe,CAACoB,SAAhB,GAA4B,EAA5B;AAIA,eAAepB,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport Calendar from 'react-calendar' // https://www.npmjs.com/package/react-calendar\nimport DatePicker from 'react-datepicker'; // https://www.npmjs.com/package/react-datepicker\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ReactDataSheet from 'react-datasheet';\n// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-datasheet/lib/react-datasheet.css'; // https://github.com/nadbm/react-datasheet\n\nclass DashboardLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      startDate: new Date(),\n      grid: [\n        [{value:  1}, {value:  3}],\n        [{value:  2}, {value:  4}]\n      ]\n    };\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  render() {\n    console.log(this.state.startDate)\n    return (\n      <div>\n        <p>DASHBOARDLAYOUT</p>\n        <DatePicker\n          selected={this.state.startDate}\n          onChange={this.handleChange}\n        />\n        <Calendar\n          onChange={this.handleChange}\n          value={this.state.startDate}\n        />\n        <ReactDataSheet\n          data={this.state.grid}\n          valueRenderer={(cell) => cell.value}\n          onCellsChanged={changes => {\n            const grid = this.state.grid.map(row => [...row])\n            changes.forEach(({cell, row, col, value}) => {\n              grid[row][col] = {...grid[row][col], value}\n            })\n            this.setState({grid})\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nDashboardLayout.propTypes = {\n\n}\n\nexport default DashboardLayout\n"]},"metadata":{},"sourceType":"module"}