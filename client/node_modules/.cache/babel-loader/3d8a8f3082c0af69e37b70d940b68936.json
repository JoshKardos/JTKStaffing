{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from 'redux-create-reducer';\nexport const TYPES = {\n  PING: 'PING',\n  PONG: 'PONG'\n};\nconst initialState = {\n  currentLayout: 'HOME'\n};\nexport const ping = () => ({\n  type: TYPES.PING,\n  isPinging: true\n});\nexport const pong = () => ({\n  isPinging: false\n}); // export const pingReducer = (state = { isPinging: false }, action) => {\n//   switch (action.type) {\n//     case TYPES.PING:\n//       console.log(TYPES.PING)\n//       return { isPinging: true };\n//     case TYPES.PONG:\n//       console.log(TYPES.PONG)\n//       return { isPinging: false };\n//     default:\n//       return state;\n//   }\n// };\n\nconst layoutReducer = createReducer([], {\n  PING: ping,\n  PONG: pong\n});\nexport const reducers = combineReducers({\n  layoutReducer\n});","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Redux/LayoutRedux.js"],"names":["combineReducers","createReducer","TYPES","PING","PONG","initialState","currentLayout","ping","type","isPinging","pong","layoutReducer","reducers"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,IAAI,EAAE,MADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAAd;AAKP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;AAIA,OAAO,MAAMC,IAAI,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEN,KAAK,CAACC,IAAd;AAAoBM,EAAAA,SAAS,EAAE;AAA/B,CAAP,CAAb;AAEP,OAAO,MAAMC,IAAI,GAAG,OAAO;AAAED,EAAAA,SAAS,EAAE;AAAb,CAAP,CAAb,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAME,aAAa,GAAGV,aAAa,CAAC,EAAD,EAAK;AACtCE,EAAAA,IAAI,EAAEI,IADgC;AAEtCH,EAAAA,IAAI,EAAEM;AAFgC,CAAL,CAAnC;AAKA,OAAO,MAAME,QAAQ,GAAGZ,eAAe,CAAC;AACtCW,EAAAA;AADsC,CAAD,CAAhC","sourcesContent":["import { combineReducers } from 'redux'\nimport { createReducer } from 'redux-create-reducer';\n\nexport const TYPES = {\n  PING: 'PING',\n  PONG: 'PONG'\n}\n\nconst initialState = {\n  currentLayout: 'HOME'\n}\n\nexport const ping = () => ({ type: TYPES.PING, isPinging: true })\n\nexport const pong = () => ({ isPinging: false })\n\n// export const pingReducer = (state = { isPinging: false }, action) => {\n//   switch (action.type) {\n//     case TYPES.PING:\n//       console.log(TYPES.PING)\n//       return { isPinging: true };\n\n//     case TYPES.PONG:\n//       console.log(TYPES.PONG)\n//       return { isPinging: false };\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst layoutReducer = createReducer([], {\n  PING: ping,\n  PONG: pong\n})\n\nexport const reducers = combineReducers({\n  layoutReducer\n})\n"]},"metadata":{},"sourceType":"module"}