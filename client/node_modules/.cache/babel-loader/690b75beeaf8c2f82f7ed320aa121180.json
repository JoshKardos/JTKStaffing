{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport firebase from '../Firebase/index';\nexport const signUpEpic = action$ => action$.pipe(ofType(UserTypes.SIGN_UP), // delay(5000), // Asynchronously wait 1000ms then continue\nmap(() => {\n  firebase.auth().createUserWithEmailAndPassword(action$.email, action$.password).catch(error => {\n    // Handle Errors here.\n    if (error !== null) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    } // ...\n\n  });\n  return {\n    type: ''\n  };\n}));\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","TYPES","UserTypes","firebase","signUpEpic","action$","pipe","SIGN_UP","auth","createUserWithEmailAndPassword","email","password","catch","error","errorCode","code","errorMessage","message","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CACnCP,MAAM,CAACG,SAAS,CAACK,OAAX,CAD6B,EAEnC;AACAP,GAAG,CAAC,MAAM;AAERG,EAAAA,QAAQ,CAACK,IAAT,GAAgBC,8BAAhB,CAA+CJ,OAAO,CAACK,KAAvD,EAA8DL,OAAO,CAACM,QAAtE,EAAgFC,KAAhF,CAAuFC,KAAD,IAAW;AAC/F;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACD,KAL8F,CAM/F;;AACD,GAPD;AAQA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAXE,CAHgC,CAA9B;AAiBP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport firebase from '../Firebase/index'\n\nexport const signUpEpic = action$ => action$.pipe(\n  ofType(UserTypes.SIGN_UP),\n  // delay(5000), // Asynchronously wait 1000ms then continue\n  map(() => {\n\n    firebase.auth().createUserWithEmailAndPassword(action$.email, action$.password).catch((error) => {\n      // Handle Errors here.\n      if (error !== null) {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      }\n      // ...\n    });\n    return { type: '' }\n  })\n)\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}