{"ast":null,"code":"import { ofType } from 'redux-observable';\nimport { map } from 'rxjs/operators';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { TYPES as UserTypes } from '../Redux/UserRedux';\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux';\nimport firebase from '../Firebase/index';\nexport const setError = errorMessage => {\n  console.log('FUNC');\n  return dispatch => {\n    dispatch({\n      type: ErrorTypes.SET_ERROR,\n      payload: errorMessage\n    });\n  };\n};\nexport const signUpEpic = action$ => {\n  return dispatch => {\n    action$.pipe(ofType(UserTypes.SIGN_UP), map(action => {\n      const email = action.payload.email;\n      const password = action.payload.password; // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n        console.log('here');\n        return {\n          type: ''\n        };\n      }).catch(error => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"error\");\n        const action = {\n          payload: errorMessage\n        };\n        dispatch({\n          type: ErrorTypes.SET_ERROR,\n          payload: errorMessage\n        });\n      });\n      return {\n        type: ''\n      };\n    }));\n  };\n};\nexport default null;","map":{"version":3,"sources":["/Users/joshkardos/Desktop/JTKStaffing/src/Epics/UserEpics.js"],"names":["ofType","map","dispatch","TYPES","UserTypes","ErrorTypes","firebase","setError","errorMessage","console","log","type","SET_ERROR","payload","signUpEpic","action$","pipe","SIGN_UP","action","email","password","auth","createUserWithEmailAndPassword","then","catch","error","errorCode","code","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,qBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAQR,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEN,UAAU,CAACO,SAAnB;AAA8BC,MAAAA,OAAO,EAAEL;AAAvC,KAAD,CAAR;AACD,GAFD;AAGD,CALM;AAOP,OAAO,MAAMM,UAAU,GAAGC,OAAO,IAAI;AACnC,SAAQb,QAAD,IAAc;AACnBa,IAAAA,OAAO,CAACC,IAAR,CACEhB,MAAM,CAACI,SAAS,CAACa,OAAX,CADR,EAEEhB,GAAG,CAACiB,MAAM,IAAI;AAAA,YACJC,KADI,GACMD,MAAM,CAACL,OADb,CACJM,KADI;AAAA,YAEJC,QAFI,GAESF,MAAM,CAACL,OAFhB,CAEJO,QAFI,EAGZ;;AACAd,MAAAA,QAAQ,CAACe,IAAT,GAAgBC,8BAAhB,CAA+CH,KAA/C,EAAsDC,QAAtD,EAAgEG,IAAhE,CAAqE,MAAM;AACzEd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAO;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAP;AACD,OAHD,EAGGa,KAHH,CAGUC,KAAD,IAAW;AAClB;AACA,cAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,cAAMnB,YAAY,GAAGiB,KAAK,CAACG,OAA3B;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMQ,MAAM,GAAG;AACbL,UAAAA,OAAO,EAAEL;AADI,SAAf;AAGAN,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAEN,UAAU,CAACO,SAAnB;AAA8BC,UAAAA,OAAO,EAAEL;AAAvC,SAAD,CAAR;AACD,OAZD;AAaA,aAAO;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD,KAlBE,CAFL;AAsBD,GAvBD;AAwBD,CAzBM;AA2BP,eAAe,IAAf","sourcesContent":["import { ofType } from 'redux-observable'\nimport { map } from 'rxjs/operators';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { TYPES as UserTypes } from '../Redux/UserRedux'\nimport { TYPES as ErrorTypes } from '../Redux/ErrorRedux'\nimport firebase from '../Firebase/index'\n\nexport const setError = (errorMessage) => {\n  console.log('FUNC')\n  return (dispatch) => {\n    dispatch({ type: ErrorTypes.SET_ERROR, payload: errorMessage })\n  }\n}\n\nexport const signUpEpic = action$ => {\n  return (dispatch) => {\n    action$.pipe(\n      ofType(UserTypes.SIGN_UP),\n      map(action => {\n        const { email } = action.payload\n        const { password } = action.payload\n        // return { type: ErrorTypes.SET_ERROR, payload: 'ERROR' }\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n          console.log('here')\n          return { type: '' }\n        }).catch((error) => {\n          // Handle Errors here.\n          const errorCode = error.code\n          const errorMessage = error.message\n          console.log(\"error\")\n          const action = {\n            payload: errorMessage\n          }\n          dispatch({ type: ErrorTypes.SET_ERROR, payload: errorMessage })\n        })\n        return { type: '' }\n      })\n    )\n  }\n}\n\nexport default null\n"]},"metadata":{},"sourceType":"module"}